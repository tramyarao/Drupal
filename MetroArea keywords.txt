*** Settings ***
Library           Selenium2Library
Library           Dialogs
Library           Collections
Library           DatabaseLibrary
Library           String
Library           OperatingSystem
Library           ImapLibrary
Resource          MetroArea keywords.txt
Resource          MetroArea locators.txt
Library           Process

*** Variables ***
${LOBname}        ${EMPTY}
${Browser}        ${EMPTY}
${LOB}            ${EMPTY}
${ENV}            ${EMPTY}
${URL}            ${EMPTY}
${Security}       ${EMPTY}
${Is_Main_Window}    ${EMPTY}
${sleep_Time}     4
${sleep_Time_5s}    5    # added for IZ scripts
${sleep_Time_10s}    10    # added for IZ scripts
${sleep_Time_15s}    15    # added for IZ scripts
${sleep_Time_20s}    20    # added for IZ scripts
${Registration_Zip}    94583
${Registration_CAN}    Toronto, ON
${Registration_FR_CAN}    Quebec, ON
#${FF_PROFILE}    C:\\ITMCCAutomation_IgorBosyi\\MarvinScripts\\FF_Profile
${FF_PROFILE}     C:\\ITMCC\\Smoke\\FF_Profile
${dbUserNameQA}    'JBOCA'
${dbPasswordQA}    'jboca4ete'
${dbNameQA}       'JBCAETE.WORLD'
${dbUserNameMIRETE}    'JBOCA'
${dbPasswordMIRETE}    'jboca4int'
${dbNameMIRETE}    'JBCAINT1.WORLD'
${dbUserNamePRD}    'igobos01'
${dbPasswordPRD}    'jboca4prd'
${dbNamePRD}      'JBCAPRD.WORLD'
${WEB_QA_env}     WEBQS1
${WEB_MIRETE_env}    WEBMIR3
${WEB_PRD_env}    WEBPRD
${LinkedIn_Username}    Bentest4auto@gmail.com
${LinkedIn_Password}    Mypw4lin_01

*** Keywords ***
Output Files SetUp
    [Arguments]    ${FileName}
    Log    Keyword Function: *** Output Files SetUp ***
    ${timeStamp}=    Time Date
    ${filePass}=    Open File Pass    ${FileName}
    ${fileFail}=    Open File Fail    ${FileName}
    ${filePass1}=    Set Global Variable    \${filePass}
    ${fileFail1}=    Set Global Variable    \${fileFail}
    [Return]    ${filePass}    ${fileFail}

Fetch Page Objects to Verify from TXT
    [Arguments]    ${CITY}    ${DataFile}
    Log    Keyword Function: *** Allocate Test Data TXT ***
    ${CityLineNumber}=    Run Keyword If    '${CITY.upper()}'!='ALL'    Find City Data    ${CITY.upper()}    MetroPages_HomePageObjectsVerification9.txt
    ${FileContents}    Get File    ${CURDIR}\\Datafiles\\${DataFile}    #Specify dataFile location
    ${NumLines}    Get Line Count    ${FileContents}    # Count lines in the dataFile
    ${StartNumLines}    ${NumLines}=    Run Keyword If    "${CITY.upper()}"!="ALL"    Set Data City    ${CityLineNumber}
    ...    ELSE    Set Data All Cities    ${NumLines}
    [Return]    ${StartNumLines}    ${NumLines}    ${FileContents}

Allocate Test Data IZ TXT
    [Arguments]    ${CITY}    ${DataFile}
    Log    Keyword Function: *** Allocate Test Data IZ TXT ***
    #####--->    Since Parramatta location is the same as Sydney, set City variable to 'Sydney' if 'Parramatta' is entered as the variable
    ${City}=    Set Variable If    '${CITY.upper()}'=='PARRAMATTA'    Sydney    ${CITY.upper()}
    Log    The city upper with single quotes: '${CITY.upper()}'
    Log    The city upper without quotes: ${CITY.upper()}
    ${CityLineNumber}=    Run Keyword If    '${CITY.upper()}'!='ALL'    Find City Data    ${CITY.upper()}    MetroPages_HomePageObjectsVerification_Master_AU.txt
    ${FileContents}    Get File    ${CURDIR}\\Datafiles\\${DataFile}    #Specify dataFile location
    ${NumLines}    Get Line Count    ${FileContents}    # Count lines in the dataFile
    ${StartNumLines}    ${NumLines}=    Run Keyword If    "${CITY.upper()}"!="ALL"    Set Data City    ${CityLineNumber}
    ...    ELSE    Set Data All Cities    ${NumLines}
    [Return]    ${StartNumLines}    ${NumLines}    ${FileContents}

Allocate Test Data Job Search IZ TXT
    [Arguments]    ${Country}    ${DataFile}
    Log    Keyword Function: *** Allocate Test Data Job Search IZ TXT ***
    Log    The country upper with single quotes: '${country.upper()}'
    Log    The country upper without quotes: ${country.upper()}
    #####---> If country is specified, get the line number of the country from the data file and assign to CountryLineNumber
    ${CountryLineNumber}=    Run Keyword If    '${country.upper()}'!='ALL'    Find Country Data    ${country.upper()}    IZ_Job_Search_Countries.txt
    ${FileContents}    Get File    ${CURDIR}\\Datafiles\\IZ_Job_Search_Countries.txt    #Specify dataFile location
    ${NumLines}    Get Line Count    ${FileContents}    # Count lines in the dataFile
    #####---> If country is specified, get the row or line number from Set Data Country function, else get all countries
    ${StartNumLines}    ${NumLines}=    Run Keyword If    "${COUNTRY.upper()}"!="ALL"    Set Data Country    ${CountryLineNumber}
    ...    ELSE    Set Data All Countries    ${NumLines}
    [Return]    ${StartNumLines}    ${NumLines}    ${FileContents}

Fetch Page Objects to Verify from XLS
    [Arguments]    ${CITY}    ${DataFile}
    Log    Keyword Function: *** Allocate Test Data XLS ***
    ${CountryLineNumber}=    Run Keyword If    '${country.upper()}'!='ALL'    Find Country Data    ${country.upper()}    IZ_Job_Search_Countries.txt
    ${FileContents}=    Open Excel    ${CURDIR}\\Datafiles\\${DataFile}    #Specify dataFile location
    ${NumLines}    Get Row Count    Sheet1
    ${StartNumLines}    ${NumLines}=    Run Keyword If    "${CITY.upper()}"!="ALL"    Set Data City    ${CityLineNumber}
    ...    ELSE    Set Data All Cities XLS    ${NumLines}
    [Return]    ${StartNumLines}    ${NumLines}    ${FileContents}

Fetch Page Objects to Verify from CSV
    [Arguments]    ${DataFile}
    Log    Keyword Function: *** Allocate Test Data CSV ***
    ${TCASTDataFile}=    Set Variable    ${CURDIR}\\Datafiles\\${DataFile}
    ${FileContents}    Get File    ${TCASTDataFile}
    ${NumLines}    Get Line Count    ${FileContents}
    [Return]    ${NumLines}    ${FileContents}

Verify Home Page Objects CA
    [Arguments]    ${StartNumLines}    ${NumLines}    ${FileContents}
    Log    Keyword Function: *** Verify Home Page Objects CA ***
    : FOR    ${LineNumber}    IN RANGE    ${StartNumLines}    ${NumLines}    #Start FOR loop delimeted by number of lines in the dataFile
    \    ${Line}=    Get Line    ${FileContents}    ${LineNumber}    # Get line from the dataFile
    \    @{DataWords}=    Split String    ${Line}    ;
    \    @{Metro}=    Split String    @{DataWords}[0]    /
    \    log    MetroArea is: @{Metro}[1]
    \    ${MetroArea}=    Set Variable    @{Metro}[1]
    \    ${MetroAreaVerify}=    Set Variable    @{DataWords}[1]
    \    Metro_Setup_Canada    @{DataWords}[0]
    \    sleep    ${sleep_Time}
    \    #####--->    Verify Robert Half-<METRO AREA> page appears.
    \    ${testStatus}=    Wait Until Text Is Detectable    ${MetroAreaVerify}
    \    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Robert Half - ${MetroAre}
    \    ...    ELSE    PagePass    Robert Half - ${MetroAreaVerify}
    \    Loop for Home Page Objects Verification    @{DataWords}
    \    Teardown_test

Verify Home Page Objects US
    [Arguments]    ${StartNumLines}    ${NumLines}    ${FileContents}
    Log    Keyword Function: *** Verify Home Page Objects US ***
    : FOR    ${LineNumber}    IN RANGE    ${StartNumLines}    ${NumLines}    #Start FOR loop delimeted by number of lines in the dataFile
    \    ${Line}=    Get Line    ${FileContents}    ${LineNumber}    # Get line from the dataFile
    \    @{DataWords}=    Split String    ${Line}    ;
    \    log    MetroArea is: @{DataWords}[0]
    \    ${MetroArea}=    Set Variable    @{DataWords}[0]
    \    ${MetroAreaVerify}=    Set Variable    @{DataWords}[1]
    \    Metro_Setup    ${MetroArea}
    \    sleep    ${sleep_Time}
    \    #####--->    Verify Robert Half-<METRO AREA> page appears.
    \    ${testStatus}=    Wait Until Text Is Detectable    ${MetroAreaVerify}
    \    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Robert Half - ${MetroArea}
    \    ...    ELSE    PagePass    Robert Half - ${MetroAreaVerify}
    \    Loop for Home Page Objects Verification    @{DataWords}
    \    Teardown_test

Verify Home Page Objects IZ
    [Arguments]    ${StartNumLines}    ${NumLines}    ${FileContents}    ${Country_var}
    Log    Keyword Function: *** Verify Home Page Objects IZ ***
    : FOR    ${LineNumber}    IN RANGE    ${StartNumLines}    ${NumLines}    #Start FOR loop delimeted by number of lines in the dataFile
    \    ${Line}=    Get Line    ${FileContents}    ${LineNumber}    # Get line from the dataFile
    \    @{DataWords}=    Split String    ${Line}    ;    # Parse the datafile
    \    log    MetroArea is: @{DataWords}[0]
    \    ${MetroArea}=    Set Variable    @{DataWords}[0]
    \    ${MetroArea}=    Set Variable If    '${MetroArea}'=='parramatta'    Sydney    ${MetroArea}
    \    ${MetroAreaVerify}=    Set Variable    @{DataWords}[1]
    \    #####--->    Get the URL for the specified Country and Environment
    \    Metro_Setup_IZ    ${MetroArea}
    \    sleep    ${sleep_Time}
    \    #####--->    Verify Robert Half-<METRO AREA> page appears.
    \    ${testStatus}=    Wait Until Text Is Detectable    ${MetroAreaVerify}
    \    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Robert Half - ${MetroArea}
    \    ...    ELSE    PagePass    Robert Half - ${MetroAreaVerify}
    \    Loop for Home Page Objects Verification    @{DataWords}
    \    #####--->    Verify Overview, Employer and Job Seekers tabs
    \    Verify IZ Tabs    ${MetroArea}
    \    #####--->    Verify View and Hide Office Locations below google map, except for Austria (AT)
    \    Run Keyword If    '${Country_var}'!='AUSTRIA'    Verify View and Hide Office Locations    ${MetroArea}
    \    Teardown_test

Verify Staffing Service Page Objects CA
    [Arguments]    ${StartNumLines}    ${NumLines}
    Log    Keyword Function: *** Verify Staffing Service Page Objects CA ***
    : FOR    ${LineNumber}    IN RANGE    ${StartNumLines}    ${NumLines}    #Start FOR loop delimeted by number of lines in the dataFile
    \    ${MetroArea}=    Read Cell Data By Name    Sheet1    A${LineNumber}
    \    ${MetroAreaVerify}=    Read Cell Data By Name    Sheet1    B${LineNumber}
    \    ${Area1}=    Read Cell Data By Name    Sheet1    C${LineNumber}
    \    ${Area2}=    Read Cell Data By Name    Sheet1    D${LineNumber}
    \    ${Area3}=    Read Cell Data By Name    Sheet1    E${LineNumber}
    \    ${Area4}=    Read Cell Data By Name    Sheet1    F${LineNumber}
    \    ${Area5}=    Read Cell Data By Name    Sheet1    G${LineNumber}
    \    @{Language}=    Split String    ${MetroArea}    /    # To identify if its FR or EN page
    \    Metro_Setup_Canada    ${MetroArea}
    \    sleep    ${sleep_Time}
    \    #####--->    Verify Robert Half-<METRO AREA> page appears.
    \    ${testStatus}=    Wait Until Text Is Detectable    ${MetroAreaVerify}
    \    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Robert Half - ${MetroArea}
    \    ...    ELSE    PagePass    Robert Half - ${MetroAreaVerify}
    \    @{Line}    Create List    ${MetroArea}    ${MetroAreaVerify}    ${Area1}    ${Area2}
    \    ...    ${Area3}    ${Area4}    ${Area5}
    \    Run Keyword If    '@{Language}[0]' == 'fr'    Loop for Staffing Services FR    @{Line}
    \    ...    ELSE    Loop for Staffing Services CAN    @{Line}

Verify Staffing Service Page Objects US
    [Arguments]    ${StartNumLines}    ${NumLines}    ${FileContents}
    Log    Keyword Function: *** Verify Staffing Service Page Objects US ***
    : FOR    ${LineNumber}    IN RANGE    ${StartNumLines}    ${NumLines}    #Start FOR loop delimeted by number of lines in the dataFile
    \    ${Line}=    Get Line    ${FileContents}    ${LineNumber}    # Get line from the dataFile
    \    @{DataWords}=    Split String    ${Line}    ;
    \    log    MetroArea is: @{DataWords}[0]
    \    ${MetroArea}=    Set Variable    @{DataWords}[0]
    \    ${MetroAreaVerify}=    Set Variable    @{DataWords}[1]
    \    Metro_Setup    ${MetroArea}
    \    sleep    ${sleep_Time}
    \    #####--->    Verify Robert Half-<METRO AREA> page appears.
    \    ${testStatus}=    Wait Until Text Is Detectable    ${MetroAreaVerify}
    \    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Robert Half - ${MetroArea}
    \    ...    ELSE    PagePass    Robert Half - ${MetroAreaVerify}
    \    Loop for Staffing Services    @{DataWords}
    \    Teardown_test

Verify Blog Page Objects CA
    [Arguments]    ${StartNumLines}    ${NumLines}    ${FileContents}
    Log    Keyword Function: *** Verify Blog Page Objects CA ***
    : FOR    ${LineNumber}    IN RANGE    ${StartNumLines}    ${NumLines}    #Start FOR loop delimeted by number of lines in the dataFile
    \    ${Line}=    Get Line    ${FileContents}    ${LineNumber}    # Get line from the dataFile
    \    @{DataWords}=    Split String    ${Line}    ;
    \    log    MetroArea is: @{DataWords}[0]
    \    ${MetroArea}=    Set Variable    @{DataWords}[0]
    \    ${MetroAreaVerify}=    Set Variable    @{DataWords}[1]
    \    Metro_Setup_Canada    ${MetroArea}
    \    sleep    ${sleep_Time}
    \    #####--->    Verify Robert Half-<METRO AREA> page appears.
    \    ${testStatus}=    Wait Until Text Is Detectable    ${MetroAreaVerify}
    \    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Robert Half - ${MetroArea}
    \    ...    ELSE    PagePass    Robert Half - ${MetroAreaVerify}
    \    Loop for Blog Page    @{DataWords}
    \    Teardown_test

Verify Customer Feedback Page Objects US
    [Arguments]    ${StartNumLines}    ${NumLines}    ${FileContents}
    : FOR    ${LineNumber}    IN RANGE    ${StartNumLines}    ${NumLines}    #Start FOR loop delimeted by number of lines in the dataFile
    \    ${Line}=    Get Line    ${FileContents}    ${LineNumber}    # Get line from the dataFile
    \    @{DataWords}=    Split String    ${Line}    ;
    \    ${LOB}=    Set Variable    @{DataWords}[0]
    \    ${LOBVerify}=    Set Variable    @{DataWords}[1]
    \    Metro_Setup_LOB    ${LOB}
    \    sleep    ${sleep_Time}
    \    #####--->    Verify LOB page appears.
    \    ${testStatus}=    Wait until element visible LOB    ${LOBVerify}
    \    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    ${LOBVerify}
    \    ...    ELSE    PagePass    ${LOBVerify}
    \    sleep    ${sleep_Time}
    \    #####--->    Select Customer Feedback Form link.
    \    Click Element    ${About_us}
    \    Sleep    ${sleep_Time}
    \    Click Element    ${Customer_Feedback_Form_link}
    \    Sleep    ${sleep_Time}
    \    ${testStatus}=    Wait Until Text Is Detectable    Feedback Type
    \    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Customer Feedback Form
    \    ...    ELSE    PagePass    Customer Feedback Form
    \    Loop for Customer Feedback Page    @{DataWords}
    \    Teardown_test

Verify Customer Feedback Page Objects CA
    [Arguments]    ${StartNumLines}    ${NumLines}    ${FileContents}
    : FOR    ${LineNumber}    IN RANGE    ${StartNumLines}    ${NumLines}    #Start FOR loop delimeted by number of lines in the dataFile
    \    ${Line}=    Get Line    ${FileContents}    ${LineNumber}    # Get line from the dataFile
    \    @{DataWords}=    Split String    ${Line}    ;
    \    ${LOB}=    Set Variable    @{DataWords}[0]
    \    ${LOBVerify}=    Set Variable    @{DataWords}[1]
    \    Metro_Setup_LOB_Canada    ${LOB}
    \    sleep    ${sleep_Time}
    \    #####--->    Verify LOB page appears.
    \    ${testStatus}=    Wait until element visible LOB    ${LOBVerify}
    \    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    ${LOBVerify}
    \    ...    ELSE    PagePass    ${LOBVerify}
    \    sleep    ${sleep_Time}
    \    #####--->    Select Customer Feedback Form link.
    \    Click Element    ${About_us}
    \    Sleep    ${sleep_Time}
    \    Click Element    ${Customer_Feedback_Form_link}
    \    Sleep    ${sleep_Time}
    \    ${testStatus}=    Wait Until Text Is Detectable    Feedback Type
    \    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Customer Feedback Form
    \    ...    ELSE    PagePass    Customer Feedback Form
    \    Loop for Customer Feedback Page    @{DataWords}
    \    Teardown_test

Verify Blog Page Objects US
    [Arguments]    ${StartNumLines}    ${NumLines}    ${FileContents}
    Log    Keyword Function: *** Verify Blog Page Objects US ***
    : FOR    ${LineNumber}    IN RANGE    ${StartNumLines}    ${NumLines}    #Start FOR loop delimeted by number of lines in the dataFile
    \    ${Line}=    Get Line    ${FileContents}    ${LineNumber}    # Get line from the dataFile
    \    @{DataWords}=    Split String    ${Line}    ;
    \    log    MetroArea is: @{DataWords}[0]
    \    ${MetroArea}=    Set Variable    @{DataWords}[0]
    \    ${MetroAreaVerify}=    Set Variable    @{DataWords}[1]
    \    Metro_Setup    ${MetroArea}
    \    sleep    ${sleep_Time}
    \    #####--->    Verify Robert Half-<METRO AREA> page appears.
    \    ${testStatus}=    Wait Until Text Is Detectable    ${MetroAreaVerify}
    \    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Robert Half - ${MetroArea}
    \    ...    ELSE    PagePass    Robert Half - ${MetroAreaVerify}
    \    Loop for Blog Page    @{DataWords}
    \    Teardown_test

Metro Area Apply For Job
    [Arguments]    ${StartNumLines}    ${NumLines}    ${FileContents}
    : FOR    ${LineNumber}    IN RANGE    ${StartNumLines}    ${NumLines}    #Start FOR loop delimeted by number of lines in the dataFile
    \    ${Line}=    Get Line    ${FileContents}    ${LineNumber}    # Get line from the dataFile
    \    @{DataWords}=    Split String    ${Line}    ;
    \    log    MetroArea is: @{DataWords}[0]
    \    ${MetroArea}=    Set Variable    @{DataWords}[0]
    \    ${MetroAreaVerify}=    Set Variable    @{DataWords}[1]
    \    Metro_Setup    ${MetroArea}
    \    sleep    ${sleep_Time}
    \    #####--->    Verify Robert Half-<METRO AREA> page appears.
    \    ${testStatus}=    Wait Until Text Is Detectable    ${MetroAreaVerify}
    \    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Robert Half - ${MetroArea}
    \    ...    ELSE    PagePass    Robert Half - ${MetroAreaVerify}
    \    ${eMail}=    Loop for Apply Job    @{DataWords}
    \    Teardown_test
    \    #DatabaseLibrary.Connect To Database Using Custom Params    cx_Oracle    ${dbUserName${ENV.upper()}},${dbPassword${ENV.upper()}},${dbName${ENV.upper()}}
    \    #sleep    10s
    \    #${queryResults}    Query    select count(*) from ${DB_Add}JOB_BOARD_CANDT_XACTN where candt_email_addr = '${eMail}'
    \    #Log    ${queryResults}    INFO
    \    #Run Keyword If    '${queryResults}'=='[(1,)]'    PassQ1    # ELSE    RepeatQuery1
    \    #sleep    40s
    \    #${queryResults}    Query    select PRCS_STTS_CODE from ${DB_Add}job_board_candt_xactn where candt_email_addr = '${eMail}'
    \    ##log    ${queryResults}    INFO
    \    #Run Keyword If    ${queryResults}==[('Y',)]    YFlag${ENV.upper()}    # ELSE IF    ${queryResults}==[('D',)]    PassQ2
    \    #Run Keyword If    ${queryResults}==[('E',)]    EFlag    # ELSE IF    ${queryResults}==[(None,)]    RepeatQuery2${ENV.upper()}
    \    #Teardown_test
    [Teardown]    Teardown_test

Metro Area Apply For Job CAN
    [Arguments]    ${StartNumLines}    ${NumLines}    ${FileContents}
    : FOR    ${LineNumber}    IN RANGE    ${StartNumLines}    ${NumLines}    #Start FOR loop delimeted by number of lines in the dataFile
    \    ${Line}=    Get Line    ${FileContents}    ${LineNumber}    # Get line from the dataFile
    \    @{DataWords}=    Split String    ${Line}    ;
    \    log    MetroArea is: @{DataWords}[0]
    \    ${MetroArea}=    Set Variable    @{DataWords}[0]
    \    ${MetroAreaVerify}=    Set Variable    @{DataWords}[1]
    \    Metro_Setup_Canada    ${MetroArea}
    \    sleep    ${sleep_Time}
    \    #####--->    Verify Robert Half-<METRO AREA> page appears.
    \    ${testStatus}=    Wait Until Text Is Detectable    ${MetroAreaVerify}
    \    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Robert Half - ${MetroArea}
    \    ...    ELSE    PagePass    Robert Half - ${MetroAreaVerify}
    \    ${eMail}=    Loop for Apply Job CA    @{DataWords}
    \    Teardown_test
    \    #DatabaseLibrary.Connect To Database Using Custom Params    cx_Oracle    ${dbUserName${ENV.upper()}},${dbPassword${ENV.upper()}},${dbName${ENV.upper()}}
    \    #sleep    10s
    \    #${queryResults}    Query    select count(*) from ${DB_Add}JOB_BOARD_CANDT_XACTN where candt_email_addr = '${eMail}'
    \    #Log    ${queryResults}    INFO
    \    #Run Keyword If    '${queryResults}'=='[(1,)]'    PassQ1    # ELSE    RepeatQuery1
    \    #sleep    40s
    \    #${queryResults}    Query    select PRCS_STTS_CODE from ${DB_Add}job_board_candt_xactn where candt_email_addr = '${eMail}'
    \    ##log    ${queryResults}    INFO
    \    #Run Keyword If    ${queryResults}==[('Y',)]    YFlag${ENV.upper()}    # ELSE IF    ${queryResults}==[('D',)]    PassQ2
    \    #Run Keyword If    ${queryResults}==[('E',)]    EFlag    # ELSE IF    ${queryResults}==[(None,)]    RepeatQuery2${ENV.upper()}
    \    #Teardown_test
    [Teardown]    Teardown_test

LOB Job Search And Apply
    [Arguments]    ${NumLines}    ${FileContents}
    : FOR    ${LineNumber}    IN RANGE    1    ${NumLines}
    \    ${Line}=    Get Line    ${FileContents}    ${LineNumber}
    \    @{Params}=    Split String    ${Line}    :
    \    ${LOB}=    Set Variable    @{Params}[0]
    \    ${keyword}=    Set Variable    @{Params}[1]
    \    ${TCAST_Username}=    Set Variable    @{Params}[2]
    \    ${TCAST_Password}=    Set Variable    @{Params}[3]
    \    #Comment    Run Keyword if    "${LOB.upper()}"=="TCG"    Click Element    xpath=//a[contains(text(),'Job Search')]
    \    Metro_Setup_LOB    ${LOB}
    \    sleep    ${sleep_Time}
    \    ${status}=    Wait until element visible LOB    ${SearchJobs_button}
    \    Run Keyword If    ${status}== 'FAIL'    PageFail    Search Jobs
    \    ...    ELSE    PagePass    Search Jobs
    \    sleep    ${sleep_Time}
    \    inputText    //input[@placeholder='City or Region']    ${Registration_Zip}
    \    sleep    ${sleep_Time}
    \    Click Element    ${SearchJobs_button}
    \    Sleep    ${sleep_Time}
    \    ${status}=    Wait until element visible LOB    ${JobTitle_to_Apply}
    \    Run Keyword If    ${status}== 'FAIL'    ObjectFail    Job Title    ${LOB}/Search Jobs
    \    ...    ELSE    ObjectPass    ${LOB}/Search Jobs
    \    ${Job_count_String}=    Set Variable    0
    \    ${Job_count_String}=    Get Matching xpath count    //table[@class="job-search-results"]/tbody/tr[@class='job-search-page']/td[@class="JobTitle"]
    \    ${random number}=    Evaluate    random.sample(range(1, ${Job_count_String}),1)    random
    \    #wait until element is visible    xpath=//button[@type='button' and contains(text(),'Apply') ]    timeout=40
    \    ${Job_Title}=    Get Text    xpath=//table[@class="job-search-results"]/tbody/tr[position()=@{random number}[0]]/td[@class="JobTitle"]/a
    \    Log    Job title to apply is --- > ${Job_Title}
    \    Click Element    //table[@class="job-search-results"]/tbody/tr[position()=@{random number}[0]]/td[@class="JobTitle"]/a
    \    Sleep    ${sleep_Time}
    \    #Apply for Job    ${LOB}    ${Job_Title}
    \    ${status}=    Wait until element visible LOB    //span[@class="apply-button-top"]/button[contains(text(),'Apply Now')]
    \    Run Keyword If    ${status}== 'False'    ObjectFail    Apply Now button    Job Page
    \    ...    ELSE    ObjectPass    Apply Now button
    \    sleep    ${sleep_Time}
    \    Click Element    ${ApplyNowButton}
    \    Sleep    ${sleep_Time}
    \    ${eMail}=    AT_Full_Registration
    \    Teardown_test
    \    #DatabaseLibrary.Connect To Database Using Custom Params    cx_Oracle    ${dbUserName${ENV.upper()}},${dbPassword${ENV.upper()}},${dbName${ENV.upper()}}
    \    #sleep    10s
    \    #${queryResults}    Query    select count(*) from ${DB_Add}JOB_BOARD_CANDT_XACTN where candt_email_addr = '${eMail}'
    \    #Log    ${queryResults}    INFO
    \    #Run Keyword If    '${queryResults}'=='[(1,)]'    PassQ1    # ELSE    RepeatQuery1
    \    #sleep    40s
    \    #${queryResults}    Query    select PRCS_STTS_CODE from ${DB_Add}job_board_candt_xactn where candt_email_addr = '${eMail}'
    \    ##log    ${queryResults}    INFO
    \    #Run Keyword If    ${queryResults}==[('Y',)]    YFlag${ENV.upper()}    # ELSE IF    ${queryResults}==[('D',)]    PassQ2
    \    #Run Keyword If    ${queryResults}==[('E',)]    EFlag    # ELSE IF    ${queryResults}==[(None,)]    RepeatQuery2${ENV.upper()}

LOB Job Search And Apply With LinkedIn
    [Arguments]    ${NumLines}    ${FileContents}
    : FOR    ${LineNumber}    IN RANGE    1    ${NumLines}
    \    ${Line}=    Get Line    ${FileContents}    ${LineNumber}
    \    @{Params}=    Split String    ${Line}    :
    \    ${LOB}=    Set Variable    @{Params}[0]
    \    ${keyword}=    Set Variable    @{Params}[1]
    \    ${TCAST_Username}=    Set Variable    @{Params}[2]
    \    ${TCAST_Password}=    Set Variable    @{Params}[3]
    \    #Comment    Run Keyword if    "${LOB.upper()}"=="TCG"    Click Element    xpath=//a[contains(text(),'Job Search')]
    \    Metro_Setup_LOB    ${LOB}
    \    sleep    ${sleep_Time}
    \    ${status}=    Wait until element visible LOB    ${SearchJobs_button}
    \    Run Keyword If    ${status}== 'FAIL'    PageFail    Search Jobs
    \    ...    ELSE    PagePass    Search Jobs
    \    sleep    ${sleep_Time}
    \    inputText    //input[@placeholder='City or Region']    ${Registration_Zip}
    \    sleep    ${sleep_Time}
    \    Click Element    ${SearchJobs_button}
    \    Sleep    ${sleep_Time}
    \    ${status}=    Wait until element visible LOB    ${JobTitle_to_Apply}
    \    Run Keyword If    ${status}== 'FAIL'    ObjectFail    Job Title    ${LOB}/Search Jobs
    \    ...    ELSE    ObjectPass    ${LOB}/Search Jobs
    \    ${Job_count_String}=    Set Variable    0
    \    ${Job_count_String}=    Get Matching xpath count    //table[@class="job-search-results"]/tbody/tr[@class='job-search-page']/td[@class="JobTitle"]
    \    ${random number}=    Evaluate    random.sample(range(1, ${Job_count_String}),1)    random
    \    #wait until element is visible    xpath=//button[@type='button' and contains(text(),'Apply') ]    timeout=40
    \    ${Job_Title}=    Get Text    xpath=//table[@class="job-search-results"]/tbody/tr[position()=@{random number}[0]]/td[@class="JobTitle"]/a
    \    Log    Job title to apply is --- > ${Job_Title}
    \    Click Element    //table[@class="job-search-results"]/tbody/tr[position()=@{random number}[0]]/td[@class="JobTitle"]/a
    \    Sleep    ${sleep_Time}
    \    #Apply for Job    ${LOB}    ${Job_Title}
    \    ${status}=    Wait until element visible LOB    ${Apply_withLinkedIN_button}
    \    Run Keyword If    ${status}== 'False'    ObjectFail    Apply With LinkedIn button    Job Page
    \    ...    ELSE    ObjectPass    Apply With LinkedIn button
    \    sleep    ${sleep_Time}
    \    Click Element    ${Apply_withLinkedIN_button}
    \    Sleep    ${sleep_Time}
    \    ${eMail}=    AT_Full_Registration_With_LinkedIn
    \    Teardown_test
    \    Sleep    ${sleep_Time}
    \    Verify Candidate Confirmation Email    ${eMail}
    \    Teardown_test
    \    #DatabaseLibrary.Connect To Database Using Custom Params    cx_Oracle    ${dbUserName${ENV.upper()}},${dbPassword${ENV.upper()}},${dbName${ENV.upper()}}
    \    #sleep    10s
    \    #${queryResults}    Query    select count(*) from ${DB_Add}JOB_BOARD_CANDT_XACTN where candt_email_addr = '${eMail}'
    \    #Log    ${queryResults}    INFO
    \    #Run Keyword If    '${queryResults}'=='[(1,)]'    PassQ1    # ELSE    RepeatQuery1
    \    #sleep    40s
    \    #${queryResults}    Query    select PRCS_STTS_CODE from ${DB_Add}job_board_candt_xactn where candt_email_addr = '${eMail}'
    \    ##log    ${queryResults}    INFO
    \    #Run Keyword If    ${queryResults}==[('Y',)]    YFlag${ENV.upper()}    # ELSE IF    ${queryResults}==[('D',)]    PassQ2
    \    #Run Keyword If    ${queryResults}==[('E',)]    EFlag    # ELSE IF    ${queryResults}==[(None,)]    RepeatQuery2${ENV.upper()}

LOB Job Search And Apply CAN
    [Arguments]    ${NumLines}    ${FileContents}
    : FOR    ${LineNumber}    IN RANGE    1    ${NumLines}
    \    ${Line}=    Get Line    ${FileContents}    ${LineNumber}
    \    @{Params}=    Split String    ${Line}    :
    \    ${LOB}=    Set Variable    @{Params}[0]
    \    ${keyword}=    Set Variable    @{Params}[1]
    \    ${TCAST_Username}=    Set Variable    @{Params}[2]
    \    ${TCAST_Password}=    Set Variable    @{Params}[3]
    \    #Comment    Run Keyword if    "${LOB.upper()}"=="TCG"    Click Element    xpath=//a[contains(text(),'Job Search')]
    \    Metro_Setup_LOB_Canada    ${LOB}
    \    sleep    ${sleep_Time}
    \    ${status}=    Wait until element visible LOB    ${SearchJobs_button}
    \    Run Keyword If    ${status}== 'FAIL'    PageFail    Search Jobs
    \    ...    ELSE    PagePass    Search Jobs
    \    sleep    ${sleep_Time}
    \    inputText    //input[@placeholder='City or Region']    ${Registration_FR_CAN}
    \    sleep    ${sleep_Time}
    \    Click Element    ${SearchJobs_button}
    \    Sleep    ${sleep_Time}
    \    ${status}=    Wait until element visible LOB    ${JobTitle_to_Apply}
    \    Run Keyword If    ${status}== 'FAIL'    ObjectFail    Job Title    ${LOB}/Search Jobs
    \    ...    ELSE    ObjectPass    ${LOB}/Search Jobs
    \    ${Job_count_String}=    Set Variable    0
    \    ${Job_count_String}=    Get Matching xpath count    //table[@class="job-search-results"]/tbody/tr[@class='job-search-page']/td[@class="JobTitle"]
    \    ${random number}=    Evaluate    random.sample(range(1, ${Job_count_String}),1)    random
    \    #wait until element is visible    xpath=//button[@type='button' and contains(text(),'Apply') ]    timeout=40
    \    ${Job_Title}=    Get Text    xpath=//table[@class="job-search-results"]/tbody/tr[position()=@{random number}[0]]/td[@class="JobTitle"]/a
    \    Log    Job title to apply is --- > ${Job_Title}
    \    Click Element    //table[@class="job-search-results"]/tbody/tr[position()=@{random number}[0]]/td[@class="JobTitle"]/a
    \    Sleep    ${sleep_Time}
    \    #Apply for Job    ${LOB}    ${Job_Title}
    \    ${status}=    Wait until element visible LOB    //span[@class="apply-button-top"]/button[contains(text(),'Apply Now')]
    \    Run Keyword If    ${status}== 'False'    ObjectFail    Apply Now button    Job Page
    \    ...    ELSE    ObjectPass    Apply Now button
    \    sleep    ${sleep_Time}
    \    Click Element    ${ApplyNowButton}
    \    Sleep    ${sleep_Time}
    \    ${eMail}=    AT_Full_Registration_FR_CAN
    \    Teardown_test
    \    #DatabaseLibrary.Connect To Database Using Custom Params    cx_Oracle    ${dbUserName${ENV.upper()}},${dbPassword${ENV.upper()}},${dbName${ENV.upper()}}
    \    #sleep    10s
    \    #${queryResults}    Query    select count(*) from ${DB_Add}JOB_BOARD_CANDT_XACTN where candt_email_addr = '${eMail}'
    \    #Log    ${queryResults}    INFO
    \    #Run Keyword If    '${queryResults}'=='[(1,)]'    PassQ1    # ELSE    RepeatQuery1
    \    #sleep    40s
    \    #${queryResults}    Query    select PRCS_STTS_CODE from ${DB_Add}job_board_candt_xactn where candt_email_addr = '${eMail}'
    \    ##log    ${queryResults}    INFO
    \    #Run Keyword If    ${queryResults}==[('Y',)]    YFlag${ENV.upper()}    # ELSE IF    ${queryResults}==[('D',)]    PassQ2
    \    #Run Keyword If    ${queryResults}==[('E',)]    EFlag    # ELSE IF    ${queryResults}==[(None,)]    RepeatQuery2${ENV.upper()}

LOB Job Search And Apply With LinkedIn CAN
    [Arguments]    ${NumLines}    ${FileContents}
    : FOR    ${LineNumber}    IN RANGE    1    ${NumLines}
    \    ${Line}=    Get Line    ${FileContents}    ${LineNumber}
    \    @{Params}=    Split String    ${Line}    :
    \    ${LOB}=    Set Variable    @{Params}[0]
    \    ${keyword}=    Set Variable    @{Params}[1]
    \    ${TCAST_Username}=    Set Variable    @{Params}[2]
    \    ${TCAST_Password}=    Set Variable    @{Params}[3]
    \    #Comment    Run Keyword if    "${LOB.upper()}"=="TCG"    Click Element    xpath=//a[contains(text(),'Job Search')]
    \    Metro_Setup_LOB_Canada    ${LOB}
    \    sleep    ${sleep_Time}
    \    ${status}=    Wait until element visible LOB    ${SearchJobs_button}
    \    Run Keyword If    ${status}== 'FAIL'    PageFail    Search Jobs
    \    ...    ELSE    PagePass    Search Jobs
    \    sleep    ${sleep_Time}
    \    inputText    //input[@placeholder='City or Region']    ${Registration_FR_CAN}
    \    sleep    ${sleep_Time}
    \    Click Element    ${SearchJobs_button}
    \    Sleep    ${sleep_Time}
    \    ${status}=    Wait until element visible LOB    ${JobTitle_to_Apply}
    \    Run Keyword If    ${status}== 'FAIL'    ObjectFail    Job Title    ${LOB}/Search Jobs
    \    ...    ELSE    ObjectPass    ${LOB}/Search Jobs
    \    ${Job_count_String}=    Set Variable    0
    \    ${Job_count_String}=    Get Matching xpath count    //table[@class="job-search-results"]/tbody/tr[@class='job-search-page']/td[@class="JobTitle"]
    \    ${random number}=    Evaluate    random.sample(range(1, ${Job_count_String}),1)    random
    \    #wait until element is visible    xpath=//button[@type='button' and contains(text(),'Apply') ]    timeout=40
    \    ${Job_Title}=    Get Text    xpath=//table[@class="job-search-results"]/tbody/tr[position()=@{random number}[0]]/td[@class="JobTitle"]/a
    \    Log    Job title to apply is --- > ${Job_Title}
    \    Click Element    //table[@class="job-search-results"]/tbody/tr[position()=@{random number}[0]]/td[@class="JobTitle"]/a
    \    Sleep    ${sleep_Time}
    \    #Apply for Job    ${LOB}    ${Job_Title}
    \    ${status}=    Wait until element visible LOB    ${Apply_withLinkedIN_button}
    \    Run Keyword If    ${status}== 'False'    ObjectFail    Apply With LinkedIn button    Job Page
    \    ...    ELSE    ObjectPass    Apply With LinkedIn button
    \    sleep    ${sleep_Time}
    \    Click Element    ${Apply_withLinkedIN_button}
    \    Sleep    ${sleep_Time}
    \    ${eMail}=    AT_Full_Registration_WithLinkedIn_CAN
    \    Teardown_test
    \    Sleep    ${sleep_Time}
    \    Verify Candidate Confirmation Email    ${eMail}
    \    Teardown_test
    \    #DatabaseLibrary.Connect To Database Using Custom Params    cx_Oracle    ${dbUserName${ENV.upper()}},${dbPassword${ENV.upper()}},${dbName${ENV.upper()}}
    \    #sleep    10s
    \    #${queryResults}    Query    select count(*) from ${DB_Add}JOB_BOARD_CANDT_XACTN where candt_email_addr = '${eMail}'
    \    #Log    ${queryResults}    INFO
    \    #Run Keyword If    '${queryResults}'=='[(1,)]'    PassQ1    # ELSE    RepeatQuery1
    \    #sleep    40s
    \    #${queryResults}    Query    select PRCS_STTS_CODE from ${DB_Add}job_board_candt_xactn where candt_email_addr = '${eMail}'
    \    ##log    ${queryResults}    INFO
    \    #Run Keyword If    ${queryResults}==[('Y',)]    YFlag${ENV.upper()}    # ELSE IF    ${queryResults}==[('D',)]    PassQ2
    \    #Run Keyword If    ${queryResults}==[('E',)]    EFlag    # ELSE IF    ${queryResults}==[(None,)]    RepeatQuery2${ENV.upper()}

LOB Job Search And Apply Existing Candidate
    [Arguments]    ${NumLines}    ${FileContents}
    : FOR    ${LineNumber}    IN RANGE    1    ${NumLines}
    \    ${Line}=    Get Line    ${FileContents}    ${LineNumber}
    \    @{Params}=    Split String    ${Line}    :
    \    ${LOB}=    Set Variable    @{Params}[0]
    \    ${keyword}=    Set Variable    @{Params}[1]
    \    ${TCAST_Username}=    Set Variable    @{Params}[2]
    \    ${TCAST_Password}=    Set Variable    @{Params}[3]
    \    #Comment    Run Keyword if    "${LOB.upper()}"=="TCG"    Click Element    xpath=//a[contains(text(),'Job Search')]
    \    Metro_Setup_LOB    ${LOB}
    \    sleep    ${sleep_Time}
    \    Click Element    ${MY_DESHBOARD_LINK}
    \    ${testStatus}=    Wait until element visible LOB    ${LOB_UserName_field}
    \    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Accountemps
    \    ...    ELSE    PagePass    Accountemps
    \    sleep    ${sleep_Time}
    \    #####---> Login to Accountemps
    \    LOB_Login    ${TCAST_Username}    ${TCAST_Password}
    \    sleep    ${sleep_Time}
    \    ${status}=    Wait until element visible LOB    ${SearchJobs_button}
    \    Run Keyword If    ${status}== 'FAIL'    PageFail    Search Jobs
    \    ...    ELSE    PagePass    Search Jobs
    \    sleep    ${sleep_Time}
    \    inputText    //input[@placeholder='zip/postal']    ${Registration_Zip}
    \    sleep    ${sleep_Time}
    \    #Run Keyword If    '${Browser.upper()}'== 'IE'    AuthenticateIE    bob    b0bb*#d3v    # ELSE IF
    \    #...    '${Browser.upper()}'== 'FF'    AuthenticateFF    bob    b0bb*#d3v    # ELSE
    \    #...    AuthenticateGC    bob    b0bb*#d3v
    \    #sleep    10
    \    Click Element    ${SearchJobs_button}
    \    Sleep    ${sleep_Time}
    \    ${status}=    Wait until element visible LOB    ${JobTitle_to_Apply}
    \    Run Keyword If    ${status}== 'FAIL'    ObjectFail    Job Title    ${LOB}/Search Jobs
    \    ...    ELSE    ObjectPass    ${LOB}/Search Jobs
    \    Sleep    ${sleep_Time}
    \    ${Job_count_String}=    Set Variable    0
    \    ${Job_count_String}=    Get Matching xpath count    //table[@class="job-search-results"]/tbody/tr[@class='job-search-page']/td[@class="JobTitle"]
    \    ${random number}=    Evaluate    random.sample(range(1, ${Job_count_String}),1)    random
    \    #wait until element is visible    xpath=//button[@type='button' and contains(text(),'Apply') ]    timeout=40
    \    ${Job_Title}=    Get Text    //table[@class="job-search-results"]/tbody/tr[position()=@{random number}[0]]/td[@class="JobTitle"]/a
    \    Log    Job title to apply is --- > ${Job_Title}
    \    Click Element    //table[@class="job-search-results"]/tbody/tr[position()=@{random number}[0]]/td[@class="JobTitle"]/a
    \    Sleep    ${sleep_Time}
    \    #Apply for Job    ${LOB}    ${Job_Title}
    \    ${status}=    Wait until element visible LOB    //span[@class="apply-button-top"]/button[contains(text(),'Apply Now')]
    \    Run Keyword If    ${status}== 'False'    ObjectFail    Apply Now button    Job Page
    \    ...    ELSE    ObjectPass    Apply Now button
    \    Sleep    ${sleep_Time}
    \    Click Element    ${ApplyNowButton}
    \    Sleep    ${sleep_Time}
    \    ${eMail}=    AT_Full_Registration
    \    Teardown_test
    \    #DatabaseLibrary.Connect To Database Using Custom Params    cx_Oracle    ${dbUserName${ENV.upper()}},${dbPassword${ENV.upper()}},${dbName${ENV.upper()}}
    \    #sleep    10s
    \    #${queryResults}    Query    select count(*) from ${DB_Add}JOB_BOARD_CANDT_XACTN where candt_email_addr = '${eMail}'
    \    #Log    ${queryResults}    INFO
    \    #Run Keyword If    '${queryResults}'=='[(1,)]'    PassQ1    # ELSE    RepeatQuery1
    \    #sleep    40s
    \    #${queryResults}    Query    select PRCS_STTS_CODE from ${DB_Add}job_board_candt_xactn where candt_email_addr = '${eMail}'
    \    ##log    ${queryResults}    INFO
    \    #Run Keyword If    ${queryResults}==[('Y',)]    YFlag${ENV.upper()}    # ELSE IF    ${queryResults}==[('D',)]    PassQ2
    \    #Run Keyword If    ${queryResults}==[('E',)]    EFlag    # ELSE IF    ${queryResults}==[(None,)]    RepeatQuery2${ENV.upper()}

LOB Job Search And Apply Existing Candidate CAN
    [Arguments]    ${NumLines}    ${FileContents}
    : FOR    ${LineNumber}    IN RANGE    1    ${NumLines}
    \    ${Line}=    Get Line    ${FileContents}    ${LineNumber}
    \    @{Params}=    Split String    ${Line}    :
    \    ${LOB}=    Set Variable    @{Params}[0]
    \    ${keyword}=    Set Variable    @{Params}[1]
    \    ${TCAST_Username}=    Set Variable    @{Params}[2]
    \    ${TCAST_Password}=    Set Variable    @{Params}[3]
    \    #Comment    Run Keyword if    "${LOB.upper()}"=="TCG"    Click Element    xpath=//a[contains(text(),'Job Search')]
    \    Metro_Setup_LOB_Canada    ${LOB}
    \    sleep    ${sleep_Time}
    \    Click Element    ${MY_DESHBOARD_LINK}
    \    ${testStatus}=    Wait until element visible LOB    ${LOB_UserName_field}
    \    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Accountemps
    \    ...    ELSE    PagePass    Accountemps
    \    sleep    ${sleep_Time}
    \    #####---> Login to Accountemps
    \    LOB_Login    ${TCAST_Username}    ${TCAST_Password}
    \    sleep    ${sleep_Time}
    \    ${status}=    Wait until element visible LOB    ${SearchJobs_button}
    \    Run Keyword If    ${status}== 'FAIL'    PageFail    Search Jobs
    \    ...    ELSE    PagePass    Search Jobs
    \    sleep    ${sleep_Time}
    \    inputText    //input[@placeholder='zip/postal']    ${Registration_CAN}
    \    sleep    ${sleep_Time}
    \    #Run Keyword If    '${Browser.upper()}'== 'IE'    AuthenticateIE    bob    b0bb*#d3v    # ELSE IF
    \    #...    '${Browser.upper()}'== 'FF'    AuthenticateFF    bob    b0bb*#d3v    # ELSE
    \    #...    AuthenticateGC    bob    b0bb*#d3v
    \    #sleep    10
    \    Click Element    ${SearchJobs_button}
    \    Sleep    ${sleep_Time}
    \    ${status}=    Wait until element visible LOB    ${JobTitle_to_Apply}
    \    Run Keyword If    ${status}== 'FAIL'    ObjectFail    Job Title    ${LOB}/Search Jobs
    \    ...    ELSE    ObjectPass    ${LOB}/Search Jobs
    \    Sleep    ${sleep_Time}
    \    ${Job_count_String}=    Set Variable    0
    \    ${Job_count_String}=    Get Matching xpath count    //table[@class="job-search-results"]/tbody/tr[@class='job-search-page']/td[@class="JobTitle"]
    \    ${random number}=    Evaluate    random.sample(range(1, ${Job_count_String}),1)    random
    \    #wait until element is visible    xpath=//button[@type='button' and contains(text(),'Apply') ]    timeout=40
    \    ${Job_Title}=    Get Text    //table[@class="job-search-results"]/tbody/tr[position()=@{random number}[0]]/td[@class="JobTitle"]/a
    \    Log    Job title to apply is --- > ${Job_Title}
    \    Click Element    //table[@class="job-search-results"]/tbody/tr[position()=@{random number}[0]]/td[@class="JobTitle"]/a
    \    Sleep    ${sleep_Time}
    \    #Apply for Job    ${LOB}    ${Job_Title}
    \    ${status}=    Wait until element visible LOB    //span[@class="apply-button-top"]/button[contains(text(),'Apply Now')]
    \    Run Keyword If    ${status}== 'False'    ObjectFail    Apply Now button    Job Page
    \    ...    ELSE    ObjectPass    Apply Now button
    \    Sleep    ${sleep_Time}
    \    Click Element    ${ApplyNowButton}
    \    Sleep    ${sleep_Time}
    \    ${eMail}=    AT_Full_Registration_CAN
    \    Teardown_test
    \    #DatabaseLibrary.Connect To Database Using Custom Params    cx_Oracle    ${dbUserName${ENV.upper()}},${dbPassword${ENV.upper()}},${dbName${ENV.upper()}}
    \    #sleep    10s
    \    #${queryResults}    Query    select count(*) from ${DB_Add}JOB_BOARD_CANDT_XACTN where candt_email_addr = '${eMail}'
    \    #Log    ${queryResults}    INFO
    \    #Run Keyword If    '${queryResults}'=='[(1,)]'    PassQ1    # ELSE    RepeatQuery1
    \    #sleep    40s
    \    #${queryResults}    Query    select PRCS_STTS_CODE from ${DB_Add}job_board_candt_xactn where candt_email_addr = '${eMail}'
    \    ##log    ${queryResults}    INFO
    \    #Run Keyword If    ${queryResults}==[('Y',)]    YFlag${ENV.upper()}    # ELSE IF    ${queryResults}==[('D',)]    PassQ2
    \    #Run Keyword If    ${queryResults}==[('E',)]    EFlag    # ELSE IF    ${queryResults}==[(None,)]    RepeatQuery2${ENV.upper()}

LOB Upload Resume
    [Arguments]    ${NumLines}    ${FileContents}
    : FOR    ${LineNumber}    IN RANGE    1    ${NumLines}
    \    ${Line}=    Get Line    ${FileContents}    ${LineNumber}
    \    @{Params}=    Split String    ${Line}    :
    \    ${LOB}=    Set Variable    @{Params}[0]
    \    ${keyword}=    Set Variable    @{Params}[1]
    \    ${TCAST_Username}=    Set Variable    @{Params}[2]
    \    ${TCAST_Password}=    Set Variable    @{Params}[3]
    \    #Comment    Run Keyword if    "${LOB.upper()}"=="TCG"    Click Element    xpath=//a[contains(text(),'Job Search')]
    \    Metro_Setup_LOB    ${LOB}
    \    #Run Keyword If    "${LOB.upper()}"=="RHT"    Click Element    xpath=//div[@id='home_search_jobs']/div/h5
    \    #Comment    ITMCC_Setup    ${LOB}
    \    #${KW_input_field}=    Set Variable if    "${LOB.upper()}"=="RHT"    id=hmjkey    "${LOB.upper()}"=="TCG"    id=dash_txtkeywords
    \    #...    id=txtkeywords
    \    #${Search_submit_btn}=    Set Variable if    "${LOB.upper()}"=="RHT"    css=#home_job_search > #form_quicksearch > #btn_search_submit    ${JS_submit}
    \    #wait until Page contains element    ${KW_input_field}
    \    #Input Text    ${KW_input_field}    ${keyword}
    \    ${status}=    Wait until element visible LOB    ${SearchJobs_button}
    \    Run Keyword If    ${status}== 'FAIL'    PageFail    ${LOB} - Home
    \    ...    ELSE    PagePass    ${LOB} - Home
    \    Click Element    //a[contains(text(),'Job Seekers')]
    \    Sleep    ${sleep_Time}
    \    ${status}=    Wait until element visible LOB    ${Submit_Your_Resume_button}
    \    Run Keyword If    ${status}== 'FAIL'    ObjectFail    Submit Your Resume button    ${LOB}/Search Jobs
    \    ...    ELSE    ObjectPass    Submit Your Resume button
    \    Run Keyword If    '${ENV.upper()}'=='PRD'    Click Element    ${Submit_Your_Resume_button}
    \    ...    ELSE    Go To    https://qs1.roberthalf.com/accountemps/submit-resume
    \    Sleep    ${sleep_Time}
    \    #Apply for Job    ${LOB}    ${Job_Title}
    \    ${status}=    Wait until element visible LOB    //div/h1[contains(text(),'Resume Upload')]
    \    Run Keyword If    ${status}== 'False'    PageFail    Resume Upload
    \    ...    ELSE    PagePass    Resume Upload
    \    Sleep    ${sleep_Time}
    \    ${eMail}=    AT_Resume_Upload
    \    sleep    ${sleep_Time}
    \    #Resume Upload DB Verify    ${WEB_${ENV.upper()}_env}    ${eMail}
    \    #Sleep    ${sleep_Time}
    \    Close all browsers

LOB Upload Resume CAN
    [Arguments]    ${NumLines}    ${FileContents}
    : FOR    ${LineNumber}    IN RANGE    1    ${NumLines}
    \    ${Line}=    Get Line    ${FileContents}    ${LineNumber}
    \    @{Params}=    Split String    ${Line}    :
    \    ${LOB}=    Set Variable    @{Params}[0]
    \    ${keyword}=    Set Variable    @{Params}[1]
    \    ${TCAST_Username}=    Set Variable    @{Params}[2]
    \    ${TCAST_Password}=    Set Variable    @{Params}[3]
    \    #Comment    Run Keyword if    "${LOB.upper()}"=="TCG"    Click Element    xpath=//a[contains(text(),'Job Search')]
    \    Metro_Setup_LOB_Canada    ${LOB}
    \    #Run Keyword If    "${LOB.upper()}"=="RHT"    Click Element    xpath=//div[@id='home_search_jobs']/div/h5
    \    #Comment    ITMCC_Setup    ${LOB}
    \    #${KW_input_field}=    Set Variable if    "${LOB.upper()}"=="RHT"    id=hmjkey    "${LOB.upper()}"=="TCG"    id=dash_txtkeywords
    \    #...    id=txtkeywords
    \    #${Search_submit_btn}=    Set Variable if    "${LOB.upper()}"=="RHT"    css=#home_job_search > #form_quicksearch > #btn_search_submit    ${JS_submit}
    \    #wait until Page contains element    ${KW_input_field}
    \    #Input Text    ${KW_input_field}    ${keyword}
    \    ${status}=    Wait until element visible LOB    ${SearchJobs_button}
    \    Run Keyword If    ${status}== 'FAIL'    PageFail    ${LOB} - Home
    \    ...    ELSE    PagePass    ${LOB} - Home
    \    Click Element    //a[contains(text(),'Job Seekers')]
    \    Sleep    ${sleep_Time}
    \    ${status}=    Wait until element visible LOB    ${Submit_Your_Resume_button}
    \    Run Keyword If    ${status}== 'FAIL'    ObjectFail    Submit Your Resume button    ${LOB}/Search Jobs
    \    ...    ELSE    ObjectPass    Submit Your Resume button
    \    Run Keyword If    '${ENV.upper()}'=='PRD'    Click Element    ${Submit_Your_Resume_button}
    \    ...    ELSE    Go To    https://qs1.roberthalf.ca/en/accountemps/submit-resume
    \    Sleep    ${sleep_Time}
    \    #Apply for Job    ${LOB}    ${Job_Title}
    \    ${status}=    Wait until element visible LOB    //div/a[contains(text(),'Upload your Resume')]
    \    Run Keyword If    ${status}== 'False'    PageFail    Resume Upload
    \    ...    ELSE    PagePass    Resume Upload
    \    Sleep    ${sleep_Time}
    \    ${eMail}=    AT_Resume_Upload_CAN
    \    sleep    ${sleep_Time}
    \    #Resume Upload DB Verify    ${WEB_${ENV.upper()}_env}    ${eMail}
    \    #Sleep    ${sleep_Time}
    \    Close all browsers

Fill in all required fields of Customer Feedback Form & Submit
    [Arguments]    ${StartNumLines}    ${NumLines}    ${FileContents}
    : FOR    ${LineNumber}    IN RANGE    ${StartNumLines}    ${NumLines}    #Start FOR loop delimeted by number of lines in the dataFile
    \    ${Line}=    Get Line    ${FileContents}    ${LineNumber}    # Get line from the dataFile
    \    @{DataWords}=    Split String    ${Line}    ;
    \    ${LOB}=    Set Variable    @{DataWords}[0]
    \    ${LOBVerify}=    Set Variable    @{DataWords}[1]
    \    Metro_Setup_LOB    ${LOB}
    \    sleep    ${sleep_Time}
    \    #####--->    Verify LOB page appears.
    \    ${testStatus}=    Wait until element visible LOB    ${LOBVerify}
    \    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    ${LOBVerify}
    \    ...    ELSE    PagePass    ${LOBVerify}
    \    sleep    ${sleep_Time}
    \    #####--->    Select Customer Feedback Form link.
    \    Click Element    ${About_us}
    \    Sleep    ${sleep_Time}
    \    Click Element    ${Customer_Feedback_Form_link}
    \    Sleep    ${sleep_Time}
    \    ${testStatus}=    Wait Until Text Is Detectable    Feedback Type
    \    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Customer Feedback Form
    \    ...    ELSE    PagePass    Customer Feedback Form
    \    ${eMail}=    Full_Customer_Feedback
    \    Teardown_test
    [Return]    ${eMail}

Fill in all required fields of Customer Feedback Form & Submit CA
    [Arguments]    ${StartNumLines}    ${NumLines}    ${FileContents}
    : FOR    ${LineNumber}    IN RANGE    ${StartNumLines}    ${NumLines}    #Start FOR loop delimeted by number of lines in the dataFile
    \    ${Line}=    Get Line    ${FileContents}    ${LineNumber}    # Get line from the dataFile
    \    @{DataWords}=    Split String    ${Line}    ;
    \    ${LOB}=    Set Variable    @{DataWords}[0]
    \    ${LOBVerify}=    Set Variable    @{DataWords}[1]
    \    Metro_Setup_LOB_Canada    ${LOB}
    \    sleep    ${sleep_Time}
    \    #####--->    Verify LOB page appears.
    \    ${testStatus}=    Wait until element visible LOB    ${LOBVerify}
    \    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    ${LOBVerify}
    \    ...    ELSE    PagePass    ${LOBVerify}
    \    sleep    ${sleep_Time}
    \    #####--->    Select Customer Feedback Form link.
    \    Click Element    ${About_us}
    \    Sleep    ${sleep_Time}
    \    Click Element    ${Customer_Feedback_Form_link}
    \    Sleep    ${sleep_Time}
    \    ${testStatus}=    Wait Until Text Is Detectable    Feedback Type
    \    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Customer Feedback Form
    \    ...    ELSE    PagePass    Customer Feedback Form
    \    ${eMail}=    Full_Customer_Feedback
    \    Teardown_test
    [Return]    ${eMail}

TCAST Login
    [Arguments]    ${NumLines}    ${FileContents}    ${URL}    ${TCAST_Username}    ${TCAST_Password}
    Open Browser    ${URL}    ${Browser}
    sleep    ${sleep_Time}
    Click Element    //a[contains(text(),'My Dashboard')]
    ${testStatus}=    Wait until element visible LOB    ${LOB_UserName_field}
    sleep    ${sleep_Time}
    Click Element    ${TIME_APPROVAL_BUTTON}
    sleep    2
    ${window_titles}=    Get WIndow Titles
    ${titles1}=    Set Variable    ${window_titles[0]}
    ${Is_Main_Window}=    Run Keyword and Return Status    Should contain    ${titles1}    ${Dashboard_title}
    ${Is_not_Main_Window}=    Run Keyword and Return Status    Should not contain    ${titles1}    ${Dashboard_title}
    ${main_window}=    Set Variable if    ${Is_Main_Window}    ${window_titles[0]}    ${window_titles[1]}
    Log    ${main_window}
    Select WIndow    title=${main_window}
    Title should be    ${main_window}
    ITMCC_Login    ${TCAST_Username}    ${TCAST_Password}
    sleep    2
    #    : FOR    ${LineNumber}    IN RANGE    1    ${NumLines}
    \    #${Line}=    Get Line    ${FileContents}    ${LineNumber}
    \    #@{Params}=    Split String    ${Line}    ,
    \    #${URL}=    Set Variable    @{Params}[0]
    \    #${TCAST_Username}=    Set Variable    @{Params}[1]
    \    #${TCAST_Password}=    Set Variable    @{Params}[2]
    \    #${Browser}=    Set Variable    @{Params}[3]
    \    #${Dashboard_title}=    Set Variable    @{Params}[4]
    \    #${TCAST_hp_message}=    Set Variable    @{Params}[5]
    \    #${Candt_section_title1}=    Set Variable    @{Params}[6]
    \    #${Candt_section_title2}=    Set Variable    @{Params}[7]
    \    #----Open Browser    ${URL}    ${Browser}
    \    #Click element    //*[@id='SignIn']
    \    #----sleep    ${sleep_Time}
    \    #----Click Element    //a[contains(text(),'My Dashboard')]
    \    #${testStatus}=    Wait until element visible LOB    ${LOB_UserName_field}
    \    #Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Accountemps    # ELSE    PagePass
    \    #...    Accountemps
    \    #----sleep    ${sleep_Time}
    \    #----Click Element    ${TIME_APPROVAL_BUTTON}
    \    #----sleep    2
    \    #${window_titles}=    Get WIndow Titles
    \    #${titles1}=    Set Variable    ${window_titles[0]}
    \    #${Is_Main_Window}=    Run Keyword and Return Status    Should contain    ${titles1}    ${Dashboard_title}
    \    #${main_window}=    Set Variable if    ${Is_Main_Window}    ${window_titles[0]}    ${window_titles[1]}
    \    #Log    ${main_window}
    \    #Select WIndow    title=Sign in
    \    #Title should be    Sign in
    \    ##${Desired_capabilities}=    Set Variable    browserName:IE,version:11,platform:WINDOWS
    \    ##Open Browser    ${URL}    ${Browser}    http://10.234.53.221/wd/hub
    \    ##Open Browser    ${URL}    remote_url=http://10.234.53.221:4444/wd/hub    desired_capabilities=${Desired_capabilities}
    \    #ITMCC_Login    ${TCAST_Username}    ${TCAST_Password}
    \    #sleep    2
    \    ##Run Keyword If    '${URL}' != 'https://www.benchmarkstaffingtime.com/'    SelectElement_TCAST
    \    ##sleep    2

TCAST Verify
    [Arguments]    ${TCAST_hp_message}    ${Candt_section_title1}    ${Candt_section_title2}
    Page should contain    ${TCAST_hp_message}
    Select Frame    id=ptifrmtgtframe
    Page should contain    ${Candt_section_title1}
    Page should contain    ${Candt_section_title2}
    Page should contain    My Profile
    sleep    2
    #Select Window    title=${main_window}
    Unselect Frame
    Close all Browsers

TCAST Authorize Login
    [Arguments]    ${NumLines}    ${FileContents}    ${URL}    ${TCAST_Username}    ${TCAST_Password}    ${TCAST_hp_message}
    Open Browser    ${URL}    ${Browser}
    ITMCC_Login_Authorize    ${TCAST_Username}    ${TCAST_Password}    ${TCAST_hp_message}
    sleep    2
    ${window_titles}=    Get WIndow Titles
    ${titles1}=    Set Variable    ${window_titles[0]}
    #: FOR    ${LineNumber}    IN RANGE    1    ${NumLines}
    \    #${Line}=    Get Line    ${FileContents}    ${LineNumber}
    \    #@{Params}=    Split String    ${Line}    ,
    \    #${URL}=    Set Variable    @{Params}[0]
    \    #${TCAST_Username}=    Set Variable    @{Params}[1]
    \    #${TCAST_Password}=    Set Variable    @{Params}[2]
    \    #${Browser}=    Set Variable    @{Params}[3]
    \    #${Dashboard_title}=    Set Variable    @{Params}[4]
    \    #${TCAST_hp_message}=    Set Variable    @{Params}[5]
    \    #${Candt_section_title1}=    Set Variable    @{Params}[6]
    \    #${Candt_section_title2}=    Set Variable    @{Params}[7]
    \    #Open Browser    ${URL}    ${Browser}
    \    ##${Desired_capabilities}=    Set Variable    browserName:IE,version:11,platform:WINDOWS
    \    ##Open Browser    ${URL}    ${Browser}    http://10.234.53.221/wd/hub
    \    ##Open Browser    ${URL}    remote_url=http://10.234.53.221:4444/wd/hub    desired_capabilities=${Desired_capabilities}
    \    #ITMCC_Login_Authorize    ${TCAST_Username}    ${TCAST_Password}    ${TCAST_hp_message}
    \    #sleep    2
    \    ##Run Keyword If    '${URL}' != 'https://www.benchmarkstaffingtime.com/'    SelectElement_TCAST
    \    ##sleep    2
    \    #${window_titles}=    Get WIndow Titles
    \    #${titles1}=    Set Variable    ${window_titles[0]}
    \    ##${Is_Main_Window}=    Run Keyword and Return Status    Should contain    ${titles1}    ${Dashboard_title}
    \    ##${main_window}=    Set Variable if    ${Is_Main_Window}    ${window_titles[0]}    ${window_titles[1]}
    \    ##Log    ${main_window}
    \    ##Select WIndow    title=TCAST Cand Client Access
    \    ##Title should be    TCAST Cand Client Access
    \    #Page should contain    ${TCAST_hp_message}
    \    #Select Frame    id=ptifrmtgtframe
    \    #Page should contain    ${Candt_section_title1}
    \    #Page should contain    ${Candt_section_title2}
    \    #Page should contain    My Profile
    \    #sleep    2
    \    ##Select Window    title=${main_window}
    \    ##Click Link    xpath=.//span[text()='Sign Out']
    \    ##Click Link    xpath=//a[@id='RH_TC_DERIVED_RH_TC_LOGOUT']
    \    #Close all Browsers

DB Extension
    ${DB_Add}=    Set Variable    JBOCA.
    [Return]    ${DB_Add}

DB Blank
    ${DB_Add}=    Set Variable
    [Return]    ${DB_Add}

CreateLine
    [Arguments]    @{DataWords}
    : FOR    ${element}    IN    @{DataWords}
    \    Run Keyword IF    '${element}' == '@{DataWords}[0]'    UpdateElement1    ${element}
    \    ...    ELSE IF    '${element}' == '@{DataWords}[5]'    UpdateElements    ${element}
    \    ...    ELSE IF    '${element}' == '@{DataWords}[7]'    UpdateElements    ${element}
    \    ...    ELSE IF    '${element}' == '@{DataWords}[8]'    UpdateElements    ${element}
    \    ...    ELSE    OtherElements    ${element}
    \    #Run Keyword IF    '${element}' == '@{DataWords}[15]'    UpdateElements    ${element}
    #log    This is How NewLine looks last ---> ${newLine}
    [Return]    ${newLine}

UpdateElement1
    [Arguments]    ${element}
    ${element}=    Catenate    SEPARATOR=    ${randString}    ${element}
    Set Global Variable    ${newLine}    ${element};
    [Return]    ${newLine}

UpdateElements
    [Arguments]    ${element}
    ${element}=    Catenate    SEPARATOR=    ${randString}    ${element}
    Set Global Variable    ${newLine}    ${newLine}${element};
    [Return]    ${newLine}

OtherElements
    [Arguments]    ${element}
    Set Global Variable    ${newLine}    ${newLine}${element};
    [Return]    ${newLine}

JointString
    [Arguments]    ${Line1}
    log    This is Line1 now ---> ${Line1}
    [Return]    ${Line1}

BenchMark_TCAST_Login
    Open Browser    http://www.benchmarkstaffingtime.com    ${Browser}
    wait until page contains element    id=username
    Input Text    id=username    dd20111103tcastLogin1
    Input Text    id=password    Tcast2011
    Click element    name=submit
    Comment    wait until page contains    Welcome, EmpfirstNm1 Emplastnm1
    Select WIndow    title=TCAST Cand Client Access
    Title should be    TCAST Cand Client Access
    Page should contain    Welcome, EmpfirstNm1 Emplastnm1
    Select Frame    id=ptifrmtgtframe
    Page should contain    Timesheets
    Page should contain    Payroll Center
    Page should contain    My Profile
    close all browsers
    Open Browser    http://www.benchmarkstaffingtime.com    Chrome
    wait until page contains element    id=username
    Input Text    id=username    dd20111103tcastLogin2
    Input Text    id=password    Tcast2011
    Click element    name=submit
    Comment    wait until page contains    Welcome, EmpfirstNm1 Emplastnm1
    Select WIndow    title=TCAST Cand Client Access
    Title should be    TCAST Cand Client Access
    Page should contain    Welcome, AprfirstNm1 Aprlastnm1
    Select Frame    id=ptifrmtgtframe
    Page should contain    Timesheets by Status
    Page should contain    Alternate Approver Setup
    Page should contain    My Profile
    Comment    Click Link    xpath=//a[contains(text(), 'Sign Out')]
    close all browsers

Time Date
    ${yyyy}    ${mm}    ${dd}    ${hour}    ${min}=    Get Time    year,month,day,hour,min
    [Return]    ${yyyy}${mm}${dd} ${hour}-${min}

Open File Pass
    [Arguments]    ${filename}
    Create File    ${CURDIR}\\Report\\${filename}_Pass.doc
    [Return]    ${CURDIR}\\Report\\${filename}_Pass.doc

Open File Fail
    [Arguments]    ${filename}
    Create File    ${CURDIR}\\Report\\${filename}_Fail.doc
    [Return]    ${CURDIR}\\Report\\${filename}_Fail.doc

Modal Global Variables
    Log    Keyword Function: *** Modal Global Variables ***
    ${if_exists}=    Set Variable    False
    Set Global Variable    ${if_exists}
    Set Global Variable    ${CITY}
    Set Global Variable    ${URL}
    Comment    ${ENV}=    Set Variable    ETE
    Set Global Variable    ${ENV}
    #Comment    Set Global Variable    ${sleep}    3

Security_Authorization
    [Arguments]    ${Browser}
    Log    Keyword Function: *** Security_Authorization ***
    #####---> Add Random Think Time to security window does not popup all at once when running multiple sessions
    ${random_think_time}=    Evaluate    random.randint(10,60)    random
    Log    Random Think Time ==> ${random_think_time}
    sleep    ${random_think_time}
    Run Keyword If    "${Browser.upper()}"=="IE"    IE Authenticate
    ...    ELSE IF    "${Browser.upper()}"=="FF"    FF Authenticate
    ...    ELSE    GC Authenticate

Metro_Setup
    [Arguments]    ${MetroArea}
    Log    Keyword Function: *** Metro_Setup ***
    Modal Global Variables
    #${MetroAreaName}=    Get_LOB    ${MetroArea}
    #Log    ${MetroAreaName}
    ${URL}=    Get_URL    ${MetroArea}    ${ENV}
    Log    ${URL}
    ${URL}=    catenate    SEPARATOR=    ${URL}    ${MetroArea}
    Comment    OpenBrowser    ${URL}    ${Browser}    remote_url=http://10.234.52.62:4444/wd/hub
    Run Keyword If    "${Security.upper()}" == "YES"    Security_Authorization    ${Browser}    #Run Keyword If    "${Browser.upper()}"=="IE"    IE Authenticate
    ...    # ELSE IF    "${Browser.upper()}"=="FF"    FF Authenticate    # ELSE
    #...    GC Authenticate
    sleep    10
    Open Browser    ${URL}    ${Browser}    ff_profile_dir=${FF_PROFILE}
    sleep    ${sleep_Time}
    Maximize Browser Window

Metro_Setup_Canada
    [Arguments]    ${MetroArea}
    Modal Global Variables
    #${MetroAreaName}=    Get_LOB    ${MetroArea}
    #Log    ${MetroAreaName}
    ${URL}=    Get_URL_Canada    ${MetroArea}    ${ENV}
    Log    ${URL}
    ${URL}=    catenate    SEPARATOR=    ${URL}    ${MetroArea}
    Comment    OpenBrowser    ${URL}    ${Browser}    remote_url=http://10.234.52.62:4444/wd/hub
    Run Keyword If    "${Security.upper()}" == "YES"    Security_Authorization    ${Browser}    #Run Keyword If    "${Browser.upper()}"=="IE"    IE Authenticate
    ...    # ELSE IF    "${Browser.upper()}"=="FF"    FF Authenticate    # ELSE
    #...    GC Authenticate
    sleep    10
    Open Browser    ${URL}    ${Browser}    ff_profile_dir=${FF_PROFILE}
    sleep    ${sleep_Time}
    Maximize Browser Window

Metro_Setup_LOB
    [Arguments]    ${MetroArea}
    Modal Global Variables
    ${MetroAreaName}=    Get_LOB    ${MetroArea}
    Log    ${MetroAreaName}
    ${URL}=    Get_URL    ${MetroArea}    ${ENV}
    Log    ${URL}
    ${URL}=    catenate    SEPARATOR=    ${URL}    ${MetroAreaName}
    Comment    OpenBrowser    ${URL}    ${Browser}    remote_url=http://10.234.52.62:4444/wd/hub
    Run Keyword If    "${Security.upper()}" == "YES"    Security_Authorization    ${Browser}    #Run Keyword If    "${Browser.upper()}"=="IE"    IE Authenticate
    ...    # ELSE IF    "${Browser.upper()}"=="FF"    FF Authenticate    # ELSE
    #...    GC Authenticate
    sleep    10
    Open Browser    ${URL}    ${Browser}    ff_profile_dir=${FF_PROFILE}
    sleep    ${sleep_Time}
    Maximize Browser Window

Metro_Setup_LOB_Canada
    [Arguments]    ${MetroArea}
    Modal Global Variables
    ${MetroAreaName}=    Get_LOB    ${MetroArea}
    Log    ${MetroAreaName}
    ${URL}=    Get_URL_Canada    ${MetroArea}    ${ENV}
    Log    ${URL}
    ${URL}=    catenate    SEPARATOR=    ${URL}    ${MetroAreaName}
    Comment    OpenBrowser    ${URL}    ${Browser}    remote_url=http://10.234.52.62:4444/wd/hub
    Run Keyword If    "${Security.upper()}" == "YES"    Security_Authorization    ${Browser}    #Run Keyword If    "${Browser.upper()}"=="IE"    IE Authenticate
    ...    # ELSE IF    "${Browser.upper()}"=="FF"    FF Authenticate    # ELSE
    #...    GC Authenticate
    sleep    10
    Open Browser    ${URL}    ${Browser}    ff_profile_dir=${FF_PROFILE}
    sleep    ${sleep_Time}
    Maximize Browser Window

Get_LOB
    [Arguments]    ${LOB}
    ${LOBname}=    Set Variable If    "${LOB.upper()}"=="AT"    accountemps    "${LOB.upper()}"=="OT"    officeteam    "${LOB.upper()}"=="RHT"
    ...    technology    "${LOB.upper()}"=="TCG"    creativegroup    "${LOB.upper()}"=="RHMR"    management-resources    "${LOB.upper()}"=="RHL"
    ...    legal    "${LOB.upper()}"=="RHF"    finance    Invalid LOB
    [Return]    ${LOBname}

Get_URL
    [Arguments]    ${LOB}    ${ENV}
    ${URL}=    Set Variable If    "${ENV.upper()}"=="QA"    https://qs1.roberthalf.com/    "${ENV.upper()}"=="STG"    http://origin-stg.roberthalf.com/    "${ENV.upper()}"=="PRD"
    ...    http://www.roberthalf.com/    "${ENV.upper()}"=="QA2"    https://qs2.roberthalf.com/    Invalid LOB or ENV
    [Return]    ${URL}

Get_URL_Canada
    [Arguments]    ${LOB}    ${ENV}
    ${URL}=    Set Variable If    "${ENV.upper()}"=="QA"    http://qs1.roberthalf.ca/    "${ENV.upper()}"=="STG"    http://origin-stg.roberthalf.ca/    "${ENV.upper()}"=="PRD"
    ...    http://www.roberthalf.ca/    Invalid LOB or ENV
    [Return]    ${URL}

IE Authenticate
    Log    Keyword Function: *** IE Authenticate ***
    ${handle} =    Run Keyword If    '${ENV.upper()}'== 'QA'    AuthenticateIE    bob    b0bb*#q4
    ...    ELSE IF    '${ENV.upper()}'== 'DEV'    AuthenticateIE    bob    b0bb*#d3v
    ...    ELSE    AuthenticateIE    bob    halfTime^15

FF Authenticate
    Log    Keyword Function: *** FF Authenticate ***
    ${handle} =    Run Keyword If    '${ENV.upper()}'== 'QA'    AuthenticateFF    bob    b0bb*#q4
    ...    ELSE IF    '${ENV.upper()}'== 'STG'    AuthenticateFF    bob    b0bb*#d3v
    ...    ELSE    AuthenticateFF    bob    halfTime^15

GC Authenticate
    Log    Keyword Function: *** GC Authenticate ***
    ${handle} =    Run Keyword If    '${ENV.upper()}'== 'QA'    AuthenticateGC    bob    b0bb*#q4
    ...    ELSE IF    '${ENV.upper()}'== 'STG'    AuthenticateGC    bob    b0bb*#d3v
    ...    ELSE    AuthenticateGC    bob    halfTime^15

AuthenticateIE
    [Arguments]    ${userName}    ${Password}
    Log    Keyword Function: *** Authenticate IE ***
    Log    User Name ---> ${userName} Password ---> ${Password}
    #####---> Add Random Think Time to security window does not popup all at once when running multiple sessions
    ${random_think_time}=    Evaluate    random.randint(10,60)    random
    Log    Random Think Time ==> ${random_think_time}
    sleep    ${random_think_time}
    ${handle} =    Process.Start Process    ${CURDIR}\\Datafiles\\WindowSecurity.exe    ${userName}    ${Password}
    [Return]    ${handle}

AuthenticateFF
    [Arguments]    ${userName}    ${Password}
    Log    Keyword Function: *** AuthenticateFF ***
    Log    User Name ---> ${userName} Password ---> ${Password}
    #####---> Add Random Think Time to security window does not popup all at once when running multiple sessions
    ${random_think_time}=    Evaluate    random.randint(10,20)    random
    Log    Random Think Time ==> ${random_think_time}
    sleep    ${random_think_time}
    ${handle} =    Process.Start Process    ${CURDIR}\\Datafiles\\BrowserAuthentication.exe    ${userName}    ${Password}
    [Return]    ${handle}

AuthenticateGC
    [Arguments]    ${userName}    ${Password}
    Log    Keyword Function: *** AuthenticateGC ***
    Log    User Name ---> ${userName} Password ---> ${Password}
    #####---> Add Random Think Time to security window does not popup all at once when running multiple sessions
    ${random_think_time}=    Evaluate    random.randint(10,60)    random
    Log    Random Think Time ==> ${random_think_time}
    sleep    ${random_think_time}
    ${handle} =    Process.Start Process    ${CURDIR}\\Datafiles\\Chrome.exe    ${userName}    ${Password}
    [Return]    ${handle}

IE Security Login
    Wait until element visible    //a[contains(text(),'(not recommended).')]
    Click Element    //a[contains(text(),'(not recommended).')]

ITMCC_Login
    [Arguments]    ${Username}    ${Password}
    Maximize Browser Window
    sleep    3
    #Run Keyword If    '${URL}' != 'https://www.benchmarkstaffingtime.com/'    ClickRegister
    Wait Until Page Contains Element    //input[contains(@name,'username')]    timeout=40
    Input Text    xpath=//input[contains(@name,'username')]    ${Username}
    Input Text    xpath=//input[contains(@name,'password')]    ${Password}
    Click Element    xpath=//input[contains(@value,'Sign in')]
    #Reload page
    #Wait Until Page Contains Element    xpath=(//a[contains(text(),'edit')])[3]    timeout=40
    #Run Keyword If    '${URL}' != 'https://www.benchmarkstaffingtime.com/'    Wait Until Text Is Detectable    Payroll Center
    Run Keyword If    '${URL}' != 'https://www.benchmarkstaffingtime.com/'    Wait Until Text Is Detectable    My Home    #${value}=    Wait Until Text Is Detectable    ${Username}
    ...    #Run Keyword If    ${value}=='PASS'    LoginPASS    # ELSE    LoginFAIL

ITMCC_Login_Authorize
    [Arguments]    ${Username}    ${Password}    ${Candt_section_title1}
    Maximize Browser Window
    sleep    2
    #Run Keyword If    '${URL}' != 'https://www.benchmarkstaffingtime.com/'    ClickRegister
    Wait Until Page Contains Element    //input[contains(@name,'username')]    timeout=40
    Input Text    //input[contains(@name,'username')]    ${Username}
    Input Text    //input[contains(@name,'password')]    ${Password}
    Click Element    xpath=//input[@value='Sign in']
    #Reload page
    #Wait Until Page Contains Element    xpath=(//a[contains(text(),'edit')])[3]    timeout=40
    Run Keyword If    '${URL}' != 'https://www.benchmarkstaffingtime.com/'    Wait Until Text Is Detectable    ${Candt_section_title1}    #${value}=    Wait Until Text Is Detectable    ${Username}
    ...    #Run Keyword If    ${value}=='PASS'    LoginPASS    # ELSE    LoginFAIL

Find City Data
    [Arguments]    ${CITY}    ${FileName}
    ${FileContents}    Get File    ${CURDIR}\\Datafiles\\${FileName}    #Specify dataFile location
    ${NumLines}    Get Line Count    ${FileContents}    # Count lines in the dataFile
    : FOR    ${LineNumber}    IN RANGE    1    ${NumLines}    #Start FOR loop delimeted by number of lines in the dataFile
    \    ${Line}=    Get Line    ${FileContents}    ${LineNumber}    # Get line from the dataFile
    \    @{DataWords}=    Split String    ${Line}    ;
    \    #log    MetroArea is: @{DataWords}[0]
    \    ${MetroArea}=    Set Variable    @{DataWords}[0]
    \    Exit For Loop If    '${MetroArea.upper()}'=='${CITY}'
    [Return]    ${LineNumber}

Set Data City
    [Arguments]    ${CityLineNumber}
    ${CityLineNumber1}=    Evaluate    ${CityLineNumber}+${1}
    [Return]    ${CityLineNumber}    ${CityLineNumber1}

Set Data All Cities
    [Arguments]    ${CityLineNumber}
    ${StartLineNumber}=    Set Variable    1
    [Return]    ${StartLineNumber}    ${CityLineNumber}

Set Data All Cities XLS
    [Arguments]    ${CityLineNumber}
    ${StartLineNumber}=    Set Variable    2
    [Return]    ${StartLineNumber}    ${CityLineNumber}

ExitMapPass
    [Arguments]    ${Text_To_Wait}
    log    ++ Agency Office Locations for ${Text_To_Wait} on the Map Page ++ successfully loaded    INFO
    Append to File    ${filePass}    ++ Agency Office Locations for ${Text_To_Wait} on the Map Page ++ successfully loaded\r\n

PagePass
    [Arguments]    ${Text_To_Wait}
    log    ++++ ${Text_To_Wait} page was loaded successfully ++++    INFO
    Append to File    ${filePass}    <<+++++|| ${Text_To_Wait} page was loaded successfully ||+++++>>\r\n

PageFail
    [Arguments]    ${Text_To_Wait}
    log    -- ${Text_To_Wait} was not loaded --
    Append to File    ${fileFail}    --- ${Text_To_Wait} page was not loaded ---\r\n
    #Capture Page Screenshot    ${CURDIR}\\Report\\ErrorPic_${Text_To_Wait}
    ${url} =    Get location
    Append to File    ${fileFail}    --- ${url} ---\r\n
    Teardown_test
    Continue For Loop

PageNotFound
    log    ---- Error Error ** Page not found ** Error Error ----
    Append to File    ${fileFail}    -- Error Error ** Page not found ** Error Error --\r\n

FatalError
    log    !!!-- FATAL ERROR OCCURED --!!!
    Append to File    ${fileFail}    !!!-- FATAL ERROR OCCURED --!!!\r\n

ObjectPass
    [Arguments]    ${Text_To_Wait}
    log    ++> **${Text_To_Wait}** object was loaded successfully <++    INFO
    Append to File    ${filePass}    ++> **${Text_To_Wait}** object was loaded successfully <++\r\n

ObjectFail
    [Arguments]    ${Text_To_Wait}    ${Page}
    log    --> ${Page} **${Text_To_Wait}** object was not loaded <--
    Append to File    ${fileFail}    --> ${Page} **${Text_To_Wait}** object was not loaded <--\r\n
    ${url} =    Get location
    Append to File    ${fileFail}    --- ${url} ---\r\n
    #Capture Page Screenshot    ${CURDIR}\\Report\\ErrorPic_${Page}_${Text_To_Wait}

Teardown_test
    Close all Browsers
    Terminate All Processes

Wait until element does not exist
    [Arguments]    ${xpath}
    : FOR    ${index}    IN RANGE    1    5
    \    ${element_not_exists}=    Run Keyword and Return Status    Page should not contain element    ${xpath}
    \    Run Keyword if    ${element_not_exists}    exit for loop
    \    Sleep    3

Wait until element exist
    [Arguments]    ${xpath}
    #log    The XPath that i am looking for ----->>>>>${xpath}
    : FOR    ${index}    IN RANGE    1    3
    \    ${element_exists}=    Run Keyword and Return Status    Page should contain element    ${${xpath}}
    \    Run Keyword if    ${element_exists}    exit for loop
    \    Sleep    3
    [Return]    '${element_exists}'

Wait until element exist2
    [Arguments]    ${xpath}
    #log    The XPath that i am looking for ----->>>>>${xpath}
    : FOR    ${index}    IN RANGE    1    3
    \    ${element_exists}=    Run Keyword and Return Status    Page should contain element    ${xpath}
    \    Run Keyword if    ${element_exists}    exit for loop
    \    Sleep    3
    [Return]    '${element_exists}'

Wait until element visible
    [Arguments]    ${xpath}
    #log    The XPath that i am looking for ----->>>>>${xpath}
    : FOR    ${index}    IN RANGE    1    3
    \    ${element_exists}=    Run Keyword and Return Status    Element Should Be Visible    ${${xpath}}
    \    Run Keyword if    ${element_exists}    exit for loop
    \    Sleep    3
    [Return]    '${element_exists}'

Wait until element visible LOB
    [Arguments]    ${xpath}
    #log    The XPath that i am looking for ----->>>>>${xpath}
    : FOR    ${index}    IN RANGE    1    3
    \    ${element_exists}=    Run Keyword and Return Status    Element Should Be Visible    ${xpath}
    \    Run Keyword if    ${element_exists}    exit for loop
    \    Sleep    5
    [Return]    '${element_exists}'

Wait until tab elements visible
    [Arguments]    ${xpath}
    #log    The XPath that i am looking for ----->>>>>${xpath}
    : FOR    ${index}    IN RANGE    1    3
    \    ${element_exists}=    Run Keyword and Return Status    Element Should Be Visible    ${xpath}
    \    Run Keyword if    ${element_exists}    exit for loop
    \    Sleep    3
    [Return]    '${element_exists}'

Wait Until Text Is Detectable
    [Arguments]    ${Text_To_Wait}
    : FOR    ${Attempt}    IN RANGE    0    3
    \    #Select Window
    \    @{Found}=    Run Keyword And Ignore Error    Page Should Contain    ${Text_To_Wait}
    \    Exit For Loop If    '@{Found}[0]'=='PASS'
    \    sleep    ${sleep_Time}
    [Return]    '@{Found}[0]'

Wait Until Text Is Not Detectable
    [Arguments]    ${Text_To_Wait}
    : FOR    ${Attempt}    IN RANGE    0    3
    \    #Select Window
    \    @{Found}=    Run Keyword And Ignore Error    Page Should Not Contain    ${Text_To_Wait}
    \    Exit For Loop If    '@{Found}[0]'=='PASS'
    \    Sleep    10s
    [Return]    '@{Found}[0]'

Select Staffing Service
    [Arguments]    ${ServiceName}    ${Page}
    Run Keyword And Continue On Failure    Click Element    xpath=//a[text()='${ServiceName}']
    sleep    ${sleep_Time}
    ${ServiceNameVerifyInternal}=    Run Keyword If    '${ServiceName}'== 'Accounting & Finance'    Staffing Service Verify Finance    ${ServiceName}
    ...    ELSE IF    '${ServiceName}'== 'Technology & IT'    Staffing Service Verify Technology&Creative    ${ServiceName}
    ...    ELSE IF    '${ServiceName}'== 'Creative & Marketing'    Staffing Service Verify Technology&Creative    ${ServiceName}
    ...    ELSE IF    '${ServiceName}'== 'Office & Administrative'    Staffing Service Verify Finance    ${ServiceName}
    ...    ELSE    Staffing Service Verify Other    ${ServiceName}
    #${testStatus}=    Wait Until Text Is Detectable    Find ${ServiceNameVerifyInternal} Jobs
    ${testStatus}=    Run Keyword and Return Status    Element Should Be Visible    xpath=//a[contains(text(),'Find ${ServiceNameVerifyInternal} Jobs')]
    Run Keyword If    '${testStatus}'== 'FAIL'    PageFail    ${Page}/${ServiceName} Service
    ...    ELSE    PagePass    ${ServiceName} Service
    [Return]    ${ServiceNameVerifyInternal}

Select Staffing Service FR
    [Arguments]    ${ServiceName}    ${Page}
    Run Keyword And Continue On Failure    Click Element    xpath=//a[text()='${ServiceName}']
    sleep    ${sleep_Time}
    ${ServiceNameVerifyInternal}=    Run Keyword If    '${ServiceName}'== 'Comptabilité et finance'    Staffing Service Verify Finance FR    ${ServiceName}
    ...    ELSE IF    '${ServiceName}'== 'Technologie et TI'    Staffing Service Verify Technology&Creative FR    ${ServiceName}
    ...    ELSE IF    '${ServiceName}'== 'Creative & Marketing'    Staffing Service Verify Technology&Creative    ${ServiceName}
    ...    ELSE IF    '${ServiceName}'== 'Office & Administrative'    Staffing Service Verify Finance    ${ServiceName}
    ...    ELSE    Staffing Service Verify Other    ${ServiceName}
    #${testStatus}=    Wait Until Text Is Detectable    Find ${ServiceNameVerifyInternal} Jobs
    Run Keyword If    '${ServiceNameVerifyInternal}'== 'Emplois en finance'    VerifyFinanceTabPresentFR
    [Return]    ${ServiceNameVerifyInternal}

VerifyFinanceTabPresentFR
    ${testStatus}=    Run Keyword and Return Status    Element Should Be Visible    xpath=//a[contains(text(),'Emplois en finance')]
    Run Keyword If    '${testStatus}'== 'FAIL'    PageFail    ${Page}/${ServiceName} Service
    ...    ELSE    PagePass    ${ServiceName} Service

Select Staffing Service_JobApply
    [Arguments]    ${ServiceName}
    Run Keyword And Continue On Failure    Click Element    xpath=//a[text()='${ServiceName}']
    sleep    ${sleep_Time}
    ${ServiceNameVerify}=    Run Keyword If    '${ServiceName}'== 'Accounting & Finance'    Staffing Service Verify Finance    ${ServiceName}
    ...    ELSE IF    '${ServiceName}'== 'Technology & IT'    Staffing Service Verify Technology&Creative    ${ServiceName}
    ...    ELSE IF    '${ServiceName}'== 'Creative & Marketing'    Staffing Service Verify Technology&Creative    ${ServiceName}
    ...    ELSE IF    '${ServiceName}'== 'Office & Administrative'    Staffing Service Verify Finance    ${ServiceName}
    ...    ELSE    Staffing Service Verify Other    ${ServiceName}
    ${testStatus}=    Wait Until Text Is Detectable    Find ${ServiceNameVerify} Jobs
    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    ${ServiceName} Service
    ...    ELSE    PagePass    ${ServiceName} Service
    [Return]    ${ServiceNameVerify}

Loop for Staffing Services
    [Arguments]    @{DataWords}
    Remove From List    ${DataWords}    0
    ${forCity}=    Remove From List    ${DataWords}    0
    #log    DataWords value is --->>>> @{DataWords}
    : FOR    ${StaffingService}    IN    @{DataWords}
    \    #log    The Staffing Service to verify is --->>> ${StaffingService}
    \    ${testStatus}=    Run Keyword and Return Status    Element Should Be Visible    xpath=//a[text()='${StaffingService}']
    \    Run Keyword If    '${testStatus}'== 'True'    ObjectPass    ${StaffingService}
    \    ...    ELSE    ObjectFail    ${StaffingService}    ${forCity}
    \    ${ServiceNameVerify}=    Select Staffing Service    ${StaffingService}    ${forCity}
    \    log    --- Service Name to Verify ---- > ${ServiceNameVerify}
    \    ${elementStatus}=    Verify Staffing Service Tabs Exist    Overview
    \    Run Keyword If    '${elementStatus}'== 'True'    Overview Tab Objects Verification    ${forCity}
    \    ${elementStatus}=    Verify Staffing Service Tabs Exist    Employers
    \    Run Keyword If    '${elementStatus}'=='True'    Employers Tab Objects Verification    ${forCity}
    \    ${elementStatus}=    Verify Staffing Service Tabs Exist    Find ${ServiceNameVerify} Jobs
    \    Run Keyword If    '${elementStatus}'=='True'    Find Jobs Tab Objects Verification    ${ServiceNameVerify}    ${forCity}

Loop for Staffing Services CAN
    [Arguments]    @{DataWords}
    Remove From List    ${DataWords}    0
    ${forCity}=    Remove From List    ${DataWords}    0
    #log    DataWords value is --->>>> @{DataWords}
    : FOR    ${StaffingService}    IN    @{DataWords}
    \    #log    The Staffing Service to verify is --->>> ${StaffingService}
    \    Run Keyword If    '${StaffingService}'==''    Exit For Loop
    \    ${testStatus}=    Run Keyword and Return Status    Element Should Be Visible    xpath=//a[text()='${StaffingService}']
    \    Run Keyword If    '${testStatus}'== 'True'    ObjectPass    ${StaffingService}
    \    ...    ELSE    ObjectFail    ${StaffingService}    ${forCity}
    \    ${ServiceNameVerify}=    Select Staffing Service    ${StaffingService}    ${forCity}
    \    log    --- Service Name to Verify ---- > ${ServiceNameVerify}
    \    ${elementStatus}=    Verify Staffing Service Tabs Exist    Overview
    \    Run Keyword If    '${elementStatus}'== 'True'    Overview Tab Objects Verification    ${forCity}
    \    ${elementStatus}=    Verify Staffing Service Tabs Exist    Employers
    \    Run Keyword If    '${elementStatus}'=='True'    Employers Tab Objects Verification    ${forCity}
    \    ${elementStatus}=    Verify Staffing Service Tabs Exist    Find ${ServiceNameVerify} Jobs
    \    Run Keyword If    '${elementStatus}'=='True'    Find Jobs Tab Objects Verification    ${ServiceNameVerify}    ${forCity}

Loop for Staffing Services FR
    [Arguments]    @{Line}
    log    Hello From France
    ${forCity}=    Remove From List    ${Line}    0
    Remove From List    ${Line}    0
    #log    DataWords value is --->>>> @{DataWords}
    : FOR    ${StaffingService}    IN    @{Line}
    \    #log    The Staffing Service to verify is --->>> ${StaffingService}
    \    Run Keyword If    '${StaffingService}'==''    Exit For Loop
    \    ${testStatus}=    Run Keyword and Return Status    Element Should Be Visible    xpath=//a[text()='${StaffingService}']
    \    Run Keyword If    '${testStatus}'== 'True'    ObjectPass    ${StaffingService}
    \    ...    ELSE    ObjectFail    ${StaffingService}    ${forCity}
    \    ${ServiceNameVerify}=    Select Staffing Service FR    ${StaffingService}    ${forCity}
    \    log    --- Service Name to Verify ---- > ${ServiceNameVerify}
    \    ${elementStatus}=    Verify Staffing Service Tabs Exist    Aperçu
    \    Run Keyword If    '${elementStatus}'== 'True'    Overview Tab Objects Verification FR    ${forCity}
    \    ${elementStatus}=    Verify Staffing Service Tabs Exist    Employeurs
    \    Run Keyword If    '${elementStatus}'=='True'    Employers Tab Objects Verification FR    ${forCity}
    \    ${elementStatus}=    Verify Staffing Service Tabs Exist    ${ServiceNameVerify}
    \    Run Keyword If    '${elementStatus}'=='True'    Find Jobs Tab Objects Verification FR    ${ServiceNameVerify}    ${forCity}

Loop for Home Page Objects Verification
    [Arguments]    @{DataWords}
    Log    Keyword Function: *** Loop for Home Page Objects Verification ***
    Remove From List    ${DataWords}    0
    ${forCity}=    Remove From List    ${DataWords}    0
    #log    DataWords value is --->>>> @{DataWords}
    : FOR    ${ElementNameToVerify}    IN    @{DataWords}
    \    ${testStatus}=    Wait until element visible    ${ElementNameToVerify}
    \    Run Keyword If    ${testStatus}!= 'True'    ObjectFail    ${ElementNameToVerify}    ${forCity}
    \    ...    ELSE    ObjectPass    ${ElementNameToVerify}
    \    Sleep    5s

Loop for Blog Page
    [Arguments]    @{DataWords}
    Remove From List    ${DataWords}    0
    ${forCity}=    Remove From List    ${DataWords}    0
    ${testStatus}=    Wait until tab elements visible    //p[text()='No results found.']
    Run Keyword If    ${testStatus}== 'True'    PageFail    No Blog Entries
    ...    ELSE    ObjectPass    ${Posts_per_page}
    ${PostsPerPage_items_count}=    Get Matching Xpath Count    //select[@id='edit-items-per-page']/option
    Run Keyword If    ${PostsPerPage_items_count} >= 2    Select Post Per Page    1
    ...    ELSE    ObjectFail    Post Per Page droplist    ${forCity}
    ${PagesButtons_count}=    Get Matching Xpath Count    //li[contains(@class,'pager__item')]//a[starts-with(@title,'Go')]
    Run Keyword If    ${PagesButtons_count} == 0    ObjectFail    Blogs Pages Buttons    ${forCity}
    Run Keyword If    ${PagesButtons_count} > 3    Select Page    3    ${forCity}
    Run Keyword If    ${PagesButtons_count} == 3    Select Page    2    ${forCity}
    Run Keyword If    ${PagesButtons_count} == 2    Verify Buttons For 1 and 2 Pages    ${PagesButtons_count}    ${forCity}
    log    DataWords value is --->>>> @{DataWords}
    : FOR    ${BlogObject}    IN    @{DataWords}
    \    log    The Blog Page to verify is --->>> ${BlogObject}
    \    ${testStatus}=    Wait until element visible    ${BlogObject}
    \    Run Keyword If    ${testStatus}!= 'True'    ObjectFail    ${BlogObject}    ${forCity}
    \    ...    ELSE    ObjectPass    ${BlogObject}
    \    Sleep    5s

Loop for Customer Feedback Page
    [Arguments]    @{DataWords}
    Log    Keyword Function: *** Loop for Customer Feedback Objects Verification ***
    Remove From List    ${DataWords}    0
    ${forLOB}=    Remove From List    ${DataWords}    0
    #log    DataWords value is --->>>> @{DataWords}
    : FOR    ${ElementNameToVerify}    IN    @{DataWords}
    \    ${testStatus}=    Wait until element visible    ${ElementNameToVerify}
    \    Run Keyword If    ${testStatus}!= 'True'    ObjectFail    ${ElementNameToVerify}    ${forLOB}
    \    ...    ELSE    ObjectPass    ${ElementNameToVerify}
    \    Sleep    5s

Staffing Service Verify Finance
    [Arguments]    ${ServiceName}
    ${ServiceNameVerify}=    Fetch From Right    ${ServiceName}    &
    ${ServiceNameVerify}=    Get Substring    ${ServiceNameVerify}    1
    [Return]    ${ServiceNameVerify}

Staffing Service Verify Finance FR
    [Arguments]    ${ServiceName}
    ${ServiceNameVerify}=    Set Variable    Emplois en finance
    [Return]    ${ServiceNameVerify}

Staffing Service Verify Office&Finance
    [Arguments]    ${ServiceName}
    ${ServiceNameVerify}=    Fetch From Right    ${ServiceName}    &
    ${ServiceNameVerify}=    Get Substring    ${ServiceNameVerify}    1
    [Return]    ${ServiceNameVerify}

Staffing Service Verify Technology&Creative
    [Arguments]    ${ServiceName}
    ${ServiceNameVerify}=    Fetch From Left    ${ServiceName}    &
    ${ServiceNameVerify}=    Get Substring    ${ServiceNameVerify}    \    -1
    [Return]    ${ServiceNameVerify}

Staffing Service Verify Technology&Creative FR
    [Arguments]    ${ServiceName}
    ${ServiceNameVerify}=    Set Variable    Trouver un emploi en TI
    [Return]    ${ServiceNameVerify}

Staffing Service Verify Other
    [Arguments]    ${ServiceName}
    ${ServiceNameVerify}=    Set Variable    ${ServiceName}
    [Return]    ${ServiceNameVerify}

Overview Tab Objects Verification
    [Arguments]    ${forCity}
    Select Staffing Service Tabs    Overview
    ${testStatus}=    Wait until tab elements visible    ${Marketing_blurb}
    Run Keyword If    ${testStatus}!= 'True'    ObjectFail    ${Marketing_blurb}    ${forCity}/@{DataWords}[1]
    ...    ELSE    ObjectPass    Marketing Blurb
    Sleep    5s
    ${testStatus}=    Wait until tab elements visible    ${Specialties}
    Run Keyword If    ${testStatus}!= 'True'    ObjectFail    ${Specialties}    ${forCity}/@{DataWords}[1]
    ...    ELSE    ObjectPass    Specialties Section
    Sleep    5s

Overview Tab Objects Verification FR
    [Arguments]    ${forCity}
    Select Staffing Service Tabs    Aperçu
    ${testStatus}=    Wait until tab elements visible    ${Marketing_blurb}
    Run Keyword If    ${testStatus}!= 'True'    ObjectFail    ${Marketing_blurb}    ${forCity}/@{DataWords}[1]
    ...    ELSE    ObjectPass    Marketing Blurb
    Sleep    5s
    ${testStatus}=    Wait until tab elements visible    ${Specialties}
    Run Keyword If    ${testStatus}!= 'True'    ObjectFail    ${Specialties}    ${forCity}/@{DataWords}[1]
    ...    ELSE    ObjectPass    Specialties Section
    Sleep    5s

Employers Tab Objects Verification
    [Arguments]    ${forCity}
    Select Staffing Service Tabs    Employers
    ${testStatus}=    Wait until tab elements visible    ${Employers_section}
    Run Keyword If    ${testStatus}!= 'True'    ObjectFail    ${Employers_section}    ${forCity}/@{DataWords}[1]
    ...    ELSE    ObjectPass    Employer Section
    Sleep    5s

Employers Tab Objects Verification FR
    [Arguments]    ${forCity}
    Select Staffing Service Tabs    Employeurs
    ${testStatus}=    Wait until tab elements visible    ${Employers_section}
    Run Keyword If    ${testStatus}!= 'True'    ObjectFail    ${Employers_section}    ${forCity}/@{DataWords}[1]
    ...    ELSE    ObjectPass    Employeurs Section
    Sleep    5s

Find Jobs Tab Objects Verification
    [Arguments]    ${ServiceNameVerify}    ${forCity}
    Select Staffing Service Tabs    Find ${ServiceNameVerify} Jobs
    ${testStatus}=    Wait until tab elements visible    ${Job_list}
    Run Keyword If    ${testStatus}!= 'True'    ObjectFail    ${Job_list}    ${forCity}/${ServiceNameVerify}
    ...    ELSE    ObjectPass    Job List
    sleep    ${sleep_Time}
    ${testStatus}=    Wait until tab elements visible    ${FirstJobInListTitle}
    Run Keyword If    ${testStatus}!= 'True'    ObjectFail    ${FirstJobInListTitle}    ${forCity}/${ServiceNameVerify}
    ...    ELSE    ObjectPass    Job Title
    sleep    ${sleep_Time}
    ${testStatus}=    Wait until tab elements visible    ${Search_job_button}
    Run Keyword If    ${testStatus}!= 'True'    ObjectFail    ${Search_job_button}    ${forCity}/${ServiceNameVerify}
    ...    ELSE    ObjectPass    Search Job button
    sleep    ${sleep_Time}
    ${testStatus}=    Wait until tab elements visible    ${JobListDate}
    Run Keyword If    ${testStatus}!= 'True'    ObjectFail    ${JobListDate}    ${forCity}/${ServiceNameVerify}
    ...    ELSE    ObjectPass    Posting Jobs date
    sleep    ${sleep_Time}
    ${testStatus}=    Wait until tab elements visible    ${JobListLocation}
    Run Keyword If    ${testStatus}!= 'True'    ObjectFail    ${JobListLocation}    ${forCity}/${ServiceNameVerify}
    ...    ELSE    ObjectPass    Posting Jobs City
    sleep    ${sleep_Time}
    ${testStatus}=    Wait until tab elements visible    ${Job_short_description}
    Run Keyword If    ${testStatus}!= 'True'    ObjectFail    ${Job_short_description}    ${forCity}/${ServiceNameVerify}
    ...    ELSE    ObjectPass    Posting Jobs Short Description
    sleep    ${sleep_Time}
    Run Keyword If    '${ServiceNameVerify}'=='Finance'    Verify Finance Jobs buttons    ${ServiceNameVerify}    ${forCity}
    #---> Removed due to error during apply for a job <-- Run Keyword If    "${forCity}"== "Robert Half San Francisco Bay Area" and "${ServiceNameVerify}"== "Finance"    Apply for Job

Find Jobs Tab Objects Verification FR
    [Arguments]    ${ServiceNameVerify}    ${forCity}
    Select Staffing Service Tabs    ${ServiceNameVerify}
    ${testStatus}=    Wait until tab elements visible    ${Job_list}
    Run Keyword If    ${testStatus}!= 'True'    ObjectFail    ${Job_list}    ${forCity}/${ServiceNameVerify}
    ...    ELSE    ObjectPass    Job List
    sleep    ${sleep_Time}
    ${testStatus}=    Wait until tab elements visible    ${FirstJobInListTitle}
    Run Keyword If    ${testStatus}!= 'True'    ObjectFail    ${FirstJobInListTitle}    ${forCity}/${ServiceNameVerify}
    ...    ELSE    ObjectPass    Job Title
    sleep    ${sleep_Time}
    ${testStatus}=    Wait until tab elements visible    ${Search_job_button}
    Run Keyword If    ${testStatus}!= 'True'    ObjectFail    ${Search_job_button}    ${forCity}/${ServiceNameVerify}
    ...    ELSE    ObjectPass    Search Job button
    sleep    ${sleep_Time}
    ${testStatus}=    Wait until tab elements visible    ${JobListDate}
    Run Keyword If    ${testStatus}!= 'True'    ObjectFail    ${JobListDate}    ${forCity}/${ServiceNameVerify}
    ...    ELSE    ObjectPass    Posting Jobs date
    sleep    ${sleep_Time}
    ${testStatus}=    Wait until tab elements visible    ${JobListLocation}
    Run Keyword If    ${testStatus}!= 'True'    ObjectFail    ${JobListLocation}    ${forCity}/${ServiceNameVerify}
    ...    ELSE    ObjectPass    Posting Jobs City
    sleep    ${sleep_Time}
    ${testStatus}=    Wait until tab elements visible    ${Job_short_description}
    Run Keyword If    ${testStatus}!= 'True'    ObjectFail    ${Job_short_description}    ${forCity}/${ServiceNameVerify}
    ...    ELSE    ObjectPass    Posting Jobs Short Description
    sleep    ${sleep_Time}
    Run Keyword If    '${ServiceNameVerify}'=='Emplois en finance'    Verify Finance Jobs buttons FR    ${ServiceNameVerify}    ${forCity}
    #---> Removed due to error during apply for a job <-- Run Keyword If    "${forCity}"== "Robert Half San Francisco Bay Area" and "${ServiceNameVerify}"== "Finance"    Apply for Job

Apply for Job
    ${url} =    Get location
    sleep    ${sleep_Time}
    Click Element    ${FirstJobInListTitle}
    ${testStatus}=    Wait until tab elements visible    ${Button_Apply_now}
    Run Keyword If    '${testStatus}'!= 'True'    ObjectFail    Button Apply Now    ${forCity}_${ServiceNameVerify}
    ...    ELSE    ObjectPass    Button Apply Now
    sleep    ${sleep_Time}
    Click Button    ${Button_Apply_now}
    sleep    ${sleep_Time}
    ${testStatus}=    Wait Until Text Is Detectable    Resume Upload
    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Resume Upoad
    ...    ELSE    PagePass    Resume Upload
    #####--->    Populate Data in Create your Account page and Select Save    & Continue button
    ${Year}=    Get Time    year
    ${mon}=    Get Time    month
    ${dd}=    Get Time    day
    ${hh}=    Get Time    hour
    ${mm}=    Get Time    min
    ${Sec}=    Get Time    Sec
    ${username1}=    Catenate    SEPARATOR=    test    ${ENV}    ${LOB}    ${Year}
    ...    ${mon}    ${dd}    ${hh}    ${mm}    ${Sec}
    ${email}=    Catenate    SEPARATOR=    ${username1}    @rhi.com
    ${firstName}=    Catenate    SEPARATOR=    ${username1}    _f
    ${lastName}=    Catenate    SEPARATOR=    ${username1}    _l
    inputText    ${First_name_locator}    ${firstName}
    inputText    ${Last_name_locator}    ${lastName}
    inputText    ${Email_locator}    ${email}
    inputText    ${Phone_no_locator}    9259658844
    inputText    ${Primary_addr_locator}    1218 robot drive
    inputText    ${Primary_city_locator}    San Ramon
    Select From List    ${Primary_state_locator}    California
    inputText    ${Zip_code_locator}    ${Registration_Zip}
    Click Element    ${Termsofuse_locator}
    sleep    ${sleep_Time}
    #####--->    Choose Resume File and upload it
    Choose File    ${Resume_file_locator}    ${CURDIR}\\Datafiles\\UploadFiles\\Resume_doc.doc
    sleep    ${sleep_Time}
    #Click Button    name=submit_btn
    Click Element    xpath=//input[@id='edit-submit']
    ${testStatus}=    Wait Until Text Is Detectable    Thank you for applying
    Run Keyword If    ${testStatus}== 'FAIL'    ObjectFail    Thank you for applying    San Francisco job apply
    ...    ELSE    PagePass    Thank you for applying
    sleep    ${sleep_Time}
    Go To    ${url}
    sleep    ${sleep_Time}

Verify Finance Jobs buttons
    [Arguments]    ${ServiceNameVerify}    ${forCity}
    ${testStatus}=    Wait until tab elements visible    ${All_project_jobs_button}
    Run Keyword If    ${testStatus}!= 'True'    ObjectFail    ${All_project_jobs_button}    ${forCity}/${ServiceNameVerify}
    ...    ELSE    ObjectPass    All Project Jobs button
    sleep    ${sleep_Time}
    ${testStatus}=    Wait until tab elements visible    ${All_temporary_jobs_button}
    Run Keyword If    ${testStatus}!= 'True'    ObjectFail    ${All_temporary_jobs_button}    ${forCity}/${ServiceNameVerify}
    ...    ELSE    ObjectPass    All Temporary Jobs button
    sleep    ${sleep_Time}
    ${testStatus}=    Wait until tab elements visible    ${All_full_time_jobs_button}
    Run Keyword If    ${testStatus}!= 'True'    ObjectFail    ${All_full_time_jobs_button}    ${forCity}/${ServiceNameVerify}
    ...    ELSE    ObjectPass    All Full-Time Jobs button
    sleep    ${sleep_Time}
    ${testStatus}=    Wait until tab elements visible    ${All_banking_jobs_button}
    Run Keyword If    ${testStatus}!= 'True'    ObjectFail    ${All_banking_jobs_button}    ${forCity}/${ServiceNameVerify}
    ...    ELSE    ObjectPass    All Banking Jobs button
    sleep    ${sleep_Time}

Verify Finance Jobs buttons FR
    [Arguments]    ${ServiceNameVerify}    ${forCity}
    ${testStatus}=    Wait until tab elements visible    ${All_project_jobs_button_FR}
    Run Keyword If    ${testStatus}!= 'True'    ObjectFail    ${All_project_jobs_button_FR}    ${forCity}/${ServiceNameVerify}
    ...    ELSE    ObjectPass    All Project Jobs button
    sleep    ${sleep_Time}
    ${testStatus}=    Wait until tab elements visible    ${All_temporary_jobs_button_FR}
    Run Keyword If    ${testStatus}!= 'True'    ObjectFail    ${All_temporary_jobs_button_FR}    ${forCity}/${ServiceNameVerify}
    ...    ELSE    ObjectPass    All Temporary Jobs button
    sleep    ${sleep_Time}
    ${testStatus}=    Wait until tab elements visible    ${All_full_time_jobs_button_FR}
    Run Keyword If    ${testStatus}!= 'True'    ObjectFail    ${All_full_time_jobs_button_FR}    ${forCity}/${ServiceNameVerify}
    ...    ELSE    ObjectPass    All Full-Time Jobs button
    sleep    ${sleep_Time}
    ${testStatus}=    Wait until tab elements visible    ${All_banking_jobs_button_FR}
    Run Keyword If    ${testStatus}!= 'True'    ObjectFail    ${All_banking_jobs_button_FR}    ${forCity}/${ServiceNameVerify}
    ...    ELSE    ObjectPass    All Banking Jobs button
    sleep    ${sleep_Time}

Select Post Per Page
    [Arguments]    ${PostsPerPage}
    Sleep    5s
    Select From list    //span[@class='posts-per-page']/preceding-sibling::select[@id='edit-items-per-page']    ${PostsPerPage}
    sleep    ${sleep_Time}

Verify Buttons For 1 and 2 Pages
    [Arguments]    ${PagesButtons_count}    ${forCity}
    Run Keyword If    ${PagesButtons_count}== 2    Select Page 1and2    2    ${forCity}
    ${testStatus2}=    Run Keyword and Continue on Failure    Wait until element visible    Previous_page_button
    Run Keyword If    ${testStatus2}!= 'True'    ObjectFail    ${Previous_page_button}    ${forCity}
    ...    ELSE    ObjectPass    Previous Page button
    sleep    ${sleep_Time}
    Run Keyword If    ${PagesButtons_count}== 2    Select Page 1and2    1    ${forCity}
    ${testStatus3}=    Run Keyword and Continue on Failure    Wait until element visible    Next_page_button
    Run Keyword If    ${testStatus3}!= 'True'    ObjectFail    ${Next_page_button}    ${forCity}
    ...    ELSE    ObjectPass    Next Page button
    sleep    ${sleep_Time}
    ${testStatus4}=    Run Keyword and Continue on Failure    Wait until element visible    Pages
    Run Keyword If    ${testStatus4}!= 'True'    ObjectFail    ${Pages}    ${forCity}
    ...    ELSE    ObjectPass    Page(s) button(s)
    sleep    ${sleep_Time}

Verify Blog Buttons
    [Arguments]    ${forCity}
    ${testStatus10}=    Run Keyword and Continue on Failure    Wait until element visible    Previous_page_button
    Run Keyword If    ${testStatus10}!= 'True'    ObjectFail    ${Previous_page_button}    ${forCity}/Blog
    ...    ELSE    ObjectPass    Previous Page button
    sleep    ${sleep_Time}
    #Run Keyword If    ${PagesButtons_count}== 2    Select Page    1    ${forCity}
    ${testStatus10}=    Run Keyword and Continue on Failure    Wait until element visible    Next_page_button
    Run Keyword If    ${testStatus10}!= 'True'    ObjectFail    ${Next_page_button}    ${forCity}/Blog
    ...    ELSE    ObjectPass    Next Page button
    sleep    ${sleep_Time}
    ${testStatus10}=    Run Keyword and Continue on Failure    Wait until element visible    Pages
    Run Keyword If    ${testStatus10}!= 'True'    ObjectFail    ${Pages}    ${forCity}/Blog
    ...    ELSE    ObjectPass    Page(s) button(s)
    sleep    ${sleep_Time}

Select Staffing Service Tabs
    [Arguments]    ${ServiceName}
    Click Element    xpath=//a[text()='${ServiceName}']
    sleep    ${sleep_Time}

Select Page
    [Arguments]    ${PageNumber}    ${forCity}
    Click Element    xpath=//li[contains(@class,'pager__item')]//a[contains(@title,'page ${PageNumber}')]
    sleep    ${sleep_Time}
    Verify Blog Buttons    ${forCity}

Select Page 1and2
    [Arguments]    ${PageNumber}    ${forCity}
    Click Element    xpath=//li[contains(@class,'pager__item')]//a[contains(@title,'page ${PageNumber}')]
    sleep    ${sleep_Time}

Verify Staffing Service Tabs Exist
    [Arguments]    ${ServiceName}
    sleep    ${sleep_Time}
    ${elementStatus}=    Run Keyword and Return Status    Element Should Be Visible    xpath=//a[text()='${ServiceName}']
    [Return]    ${elementStatus}

Loop for Apply Job
    [Arguments]    @{DataWords}
    Remove From List    ${DataWords}    0
    Remove From List    ${DataWords}    0
    log    DataWords value is --->>>> @{DataWords}
    : FOR    ${StaffingService}    IN    @{DataWords}
    \    log    The Staffing Service to verify is --->>> ${StaffingService}
    \    ${testStatus}=    Run Keyword and Return Status    Element Should Be Visible    xpath=//a[text()='${StaffingService}']
    \    Run Keyword If    '${testStatus}'== 'True'    ObjectPass    ${StaffingService}
    \    ...    ELSE    ObjectFail    ${StaffingService}    @{DataWords}[0]
    \    ${ServiceNameVerify}=    Select Staffing Service_JobApply    ${StaffingService}
    \    ${elementStatus}=    Verify Staffing Service Tabs Exist    Find ${ServiceNameVerify} Jobs
    \    ${email}=    Run Keyword If    '${elementStatus}'=='True'    Find Jobs Tab Job Apply    ${ServiceNameVerify}    @{DataWords}[0]
    [Return]    ${email}

Loop for Apply Job CA
    [Arguments]    @{DataWords}
    Remove From List    ${DataWords}    0
    Remove From List    ${DataWords}    0
    log    DataWords value is --->>>> @{DataWords}
    : FOR    ${StaffingService}    IN    @{DataWords}
    \    log    The Staffing Service to verify is --->>> ${StaffingService}
    \    ${testStatus}=    Run Keyword and Return Status    Element Should Be Visible    xpath=//a[text()='${StaffingService}']
    \    Run Keyword If    '${testStatus}'== 'True'    ObjectPass    ${StaffingService}
    \    ...    ELSE    ObjectFail    ${StaffingService}    @{DataWords}[0]
    \    ${ServiceNameVerify}=    Select Staffing Service_JobApply    ${StaffingService}
    \    ${elementStatus}=    Verify Staffing Service Tabs Exist    Find ${ServiceNameVerify} Jobs
    \    ${email}=    Run Keyword If    '${elementStatus}'=='True'    Find Jobs Tab Job Apply CA    ${ServiceNameVerify}    @{DataWords}[0]
    [Return]    ${email}

Find Jobs Tab Job Apply
    [Arguments]    ${ServiceNameVerify}    ${city}
    Select Staffing Service Tabs    Find ${ServiceNameVerify} Jobs
    # Verify Job list appears
    ${testStatus}=    Wait until tab elements visible    ${Job_list}
    Run Keyword If    ${testStatus}!= 'True'    ObjectFail    Job List    ${city}
    ...    ELSE    ObjectPass    Job List
    # Select the first job position in the list
    Click Element    ${FirstJobInList}
    Sleep    5s
    # Wait for job description appears
    ${testStatus}=    Wait until tab elements visible    ${ApplyNowButton}
    Run Keyword If    ${testStatus}!= 'True'    ObjectFail    Selected Job page    ${city}
    ...    ELSE    ObjectPass    Selected Job page
    Sleep    5s
    Click Element    ${ApplyNowButton}
    ${email}=    Run Keyword If    '${ServiceNameVerify}'=='Finance'    AT_Full_Registration
    [Return]    ${email}

Find Jobs Tab Job Apply CA
    [Arguments]    ${ServiceNameVerify}    ${city}
    Select Staffing Service Tabs    Find ${ServiceNameVerify} Jobs
    # Verify Job list appears
    ${testStatus}=    Wait until tab elements visible    ${Job_list}
    Run Keyword If    ${testStatus}!= 'True'    ObjectFail    Job List    ${city}
    ...    ELSE    ObjectPass    Job List
    # Select the first job position in the list
    Click Element    ${FirstJobInList}
    Sleep    5s
    # Wait for job description appears
    ${testStatus}=    Wait until tab elements visible    ${ApplyNowButton}
    Run Keyword If    ${testStatus}!= 'True'    ObjectFail    Selected Job page    ${city}
    ...    ELSE    ObjectPass    Selected Job page
    Sleep    5s
    Click Element    ${ApplyNowButton}
    ${email}=    Run Keyword If    '${ServiceNameVerify}'=='Finance'    AT_Full_Registration_CA
    [Return]    ${email}

AT_Full_Registration
    #[Documentation]    Testcase to Register a candidate in AT for US.
    #[Tags]    AT    registration    ETE
    #[Setup]    ITMCC_Setup    AT
    sleep    ${sleep_Time}
    #${ENV}=    Set Variable    ETE
    #####---> Verify that Accountemps page successuly loadrd
    #Wait Until Page Contains Element    ${Login_Register_locator}
    #Wait until element is visible    ${Login_Register_locator}
    ${testStatus}=    Wait Until Text Is Detectable    Resume Upload
    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Resume Upload
    ...    ELSE    PagePass    Resume Upload
    sleep    ${sleep_Time}
    ${Year}=    Get Time    year
    ${mon}=    Get Time    month
    ${dd}=    Get Time    day
    ${hh}=    Get Time    hour
    ${mm}=    Get Time    min
    ${Sec}=    Get Time    Sec
    #####--> Enter mandatory data and select Submit button
    ${fName}=    Catenate    SEPARATOR=    QAUStst    ${ENV.upper()}    ${Year}    ${mon}
    ...    ${dd}    ${hh}    ${mm}    ${Sec}
    ${lName}=    Catenate    SEPARATOR=    QATestSN    ${ENV.upper()}    ${Year}    ${mon}
    ...    ${dd}    ${hh}    ${mm}    ${Sec}
    ${firstName}=    Catenate    SEPARATOR=    ${fName}    _f
    ${lastName}=    Catenate    SEPARATOR=    ${lName}    _l
    inputText    ${First_name_locator}    ${firstName}
    sleep    ${sleep_Time}
    inputText    ${Last_name_locator}    ${lastName}
    sleep    ${sleep_Time}
    inputText    ${Phone_no_locator}    9259${hh}88${mm}
    sleep    ${sleep_Time}
    ${email}=    Catenate    SEPARATOR=    ${fName}    @rhi.com
    inputText    ${Email_locator}    ${email}
    sleep    ${sleep_Time}
    inputText    ${Primary_addr_locator}    ${hh}${mm} robot drive
    sleep    ${sleep_Time}
    inputText    ${Primary_city_locator}    San Ramon
    sleep    ${sleep_Time}
    Select From List    ${Primary_state_locator}    California
    sleep    ${sleep_Time}
    inputText    ${Zip_code_locator}    ${Registration_Zip}
    sleep    ${sleep_Time}
    #####--->    Choose Resume File and upload it
    Click Element    ${Termsofuse_locator}
    sleep    ${sleep_Time}
    Execute Javascript    window.scrollTo(0,0);
    sleep    ${sleep_Time}
    Focus    xpath=//a[contains(text(),'Upload your Resume')]
    sleep    7
    Click Element    xpath=//a[contains(text(),'Upload your Resume')]
    #Press Key    xpath=//a[contains(text(),'Upload your Resume')]    \\13
    #Click Element    xpath=//div[@id="upload_section_title"]
    sleep    ${sleep_Time}
    #Choose File    ${Resume_file_locator}    C:\\ITMCC\\MarvinScripts\\ITMCC_Smoke_test_ETE\\Datafiles\\ETE\\Resume_doc.doc
    Choose File    ${Resume_file_locator}    ${CURDIR}\\Datafiles\\UploadFiles\\Resume_doc.doc    #Click Button    ${Submit_button_locator}    #${testStatus}=    Wait Until Text Is Detectable
    ...    # Create Your Account    #Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Create Your Account    # ELSE
    ...    # PagePass    Create Your Account
    #Wait Until Page Contains    Create Your Account    timeout=30
    #### ----> Verify Thank you page appears
    #Click Button    name=submit_btn
    Click Button    xpath=//input[@id='edit-submit']
    ${testStatus}=    Wait Until Text Is Detectable    Thank you!
    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Thank you
    ...    ELSE    PagePass    Thank you
    sleep    ${sleep_Time}
    ####    ----> Verify Apply button disabled
    ${testStatus}=    Run Keyword and Return Status    Element Should Be Disabled    ${ApplyNowButton}
    Run Keyword If    '${testStatus}'!= 'True'    ObjectFail    Apply Now button is Enable    Thank you page
    ...    ELSE    ObjectPass    Apply Now button disable
    [Return]    ${email}

AT_Full_Registration_CA
    #[Documentation]    Testcase to Register a candidate in AT for CA.
    #[Tags]    AT    registration    ETE
    #[Setup]    ITMCC_Setup    AT
    sleep    ${sleep_Time}
    #${ENV}=    Set Variable    ETE
    #####---> Verify that Accountemps page successuly loadrd
    #Wait Until Page Contains Element    ${Login_Register_locator}
    #Wait until element is visible    ${Login_Register_locator}
    ${testStatus}=    Wait Until Text Is Detectable    Resume Upload
    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Resume Upload
    ...    ELSE    PagePass    Resume Upload
    sleep    ${sleep_Time}
    ${Year}=    Get Time    year
    ${mon}=    Get Time    month
    ${dd}=    Get Time    day
    ${hh}=    Get Time    hour
    ${mm}=    Get Time    min
    ${Sec}=    Get Time    Sec
    #####--> Enter mandatory data and select Submit button
    ${fName}=    Catenate    SEPARATOR=    QACAUStst    ${ENV.upper()}    ${Year}    ${mon}
    ...    ${dd}    ${hh}    ${mm}    ${Sec}
    ${lName}=    Catenate    SEPARATOR=    QATestSN    ${ENV.upper()}    ${Year}    ${mon}
    ...    ${dd}    ${hh}    ${mm}    ${Sec}
    ${firstName}=    Catenate    SEPARATOR=    ${fName}    _f
    ${lastName}=    Catenate    SEPARATOR=    ${lName}    _l
    inputText    ${First_name_locator}    ${firstName}
    sleep    ${sleep_Time}
    inputText    ${Last_name_locator}    ${lastName}
    sleep    ${sleep_Time}
    inputText    ${Phone_no_locator}    9259${hh}88${mm}
    sleep    ${sleep_Time}
    ${email}=    Catenate    SEPARATOR=    ${lName}    @rhi.com
    inputText    ${Email_locator}    ${email}
    sleep    ${sleep_Time}
    inputText    ${Primary_addr_locator}    ${hh}${mm} robot drive
    sleep    ${sleep_Time}
    inputText    ${Primary_city_locator}    San Ramon
    sleep    ${sleep_Time}
    Select From List    ${Primary_state_locator}    California
    sleep    ${sleep_Time}
    inputText    ${Zip_code_locator}    ${Registration_Zip}
    sleep    ${sleep_Time}
    #####--->    Choose Resume File and upload it
    Click Element    ${Termsofuse_locator}
    sleep    ${sleep_Time}
    Execute Javascript    window.scrollTo(0,0);
    sleep    ${sleep_Time}
    Focus    xpath=//a[contains(text(),'Upload your Resume')]
    sleep    7
    Click Element    xpath=//a[contains(text(),'Upload your Resume')]
    #Press Key    xpath=//a[contains(text(),'Upload your Resume')]    \\13
    #Click Element    xpath=//div[@id="upload_section_title"]
    sleep    ${sleep_Time}
    #Choose File    ${Resume_file_locator}    C:\\ITMCC\\MarvinScripts\\ITMCC_Smoke_test_ETE\\Datafiles\\ETE\\Resume_doc.doc
    Choose File    ${Resume_file_locator}    ${CURDIR}\\Datafiles\\UploadFiles\\Resume_doc.doc    #Click Button    ${Submit_button_locator}    #${testStatus}=    Wait Until Text Is Detectable
    ...    # Create Your Account    #Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Create Your Account    # ELSE
    ...    # PagePass    Create Your Account
    #Wait Until Page Contains    Create Your Account    timeout=30
    #### ----> Verify Thank you page appears
    #Click Button    name=submit_btn
    Click Button    xpath=//input[@id='edit-submit']
    ${testStatus}=    Wait Until Text Is Detectable    Thank you!
    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Thank you
    ...    ELSE    PagePass    Thank you
    sleep    ${sleep_Time}
    ####    ----> Verify Apply button disabled
    ${testStatus}=    Run Keyword and Return Status    Element Should Be Disabled    ${ApplyNowButton}
    Run Keyword If    '${testStatus}'!= 'True'    ObjectFail    Apply Now button is Enable    Thank you page
    ...    ELSE    ObjectPass    Apply Now button disable
    [Return]    ${email}

AT_Full_Registration_With_LinkedIn
    #[Documentation]    Testcase to Register a candidate in AT for US using LinkedIn account.
    sleep    ${sleep_Time}
    ${window_titles}=    Get WIndow Titles
    ${titles1}=    Set Variable    ${window_titles[0]}
    ${Is_Main_Window}=    Run Keyword and Return Status    Should contain    ${titles1}    Authorize | LinkedIn
    ${Is_not_Main_Window}=    Run Keyword and Return Status    Should not contain    ${titles1}    Authorize | LinkedIn
    ${main_window}=    Set Variable if    ${Is_Main_Window}    ${window_titles[0]}    ${window_titles[1]}
    Log    ${main_window}
    Select WIndow    title=${main_window}
    #####---> Verify that pre-login LinkedIn page successuly loaded
    ${testStatus}=    Wait Until Text Is Detectable    your LinkedIn info
    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    LinkedIn pre-login
    ...    ELSE    PagePass    LinkedIn pre-login
    Input Text    ${LinkedIn_UserName_field}    ${LinkedIn_Username}
    Input Text    ${LinkedIn_Password_field}    ${LinkedIn_Password}
    Click Button    ${LinkedIn_AllowAccess_button}
    #####---> Verify that Accountemps page successuly loaded
    sleep    10s
    ${window_titles}=    Get WIndow Titles
    Select WIndow    title=${window_titles[0]}
    #####---> Verify that Accountemps page successuly loadrd
    ${testStatus}=    Wait Until Text Is Detectable    Resume Upload
    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Resume Upload
    ...    ELSE    PagePass    Resume Upload
    sleep    ${sleep_Time}
    ${Year}=    Get Time    year
    ${mon}=    Get Time    month
    ${dd}=    Get Time    day
    ${hh}=    Get Time    hour
    ${mm}=    Get Time    min
    ${Sec}=    Get Time    Sec
    #####--> Enter mandatory data and select Submit button
    ${fName}=    Catenate    SEPARATOR=    QAUStst    ${ENV.upper()}    ${Year}    ${mon}
    ...    ${dd}    ${hh}    ${mm}    ${Sec}
    ${lName}=    Catenate    SEPARATOR=    QATestSN    ${ENV.upper()}    ${Year}    ${mon}
    ...    ${dd}    ${hh}    ${mm}    ${Sec}
    ${firstName}=    Catenate    SEPARATOR=    ${fName}    _f
    ${lastName}=    Catenate    SEPARATOR=    ${lName}    _l
    inputText    ${First_name_locator}    ${firstName}
    sleep    ${sleep_Time}
    inputText    ${Last_name_locator}    ${lastName}
    sleep    ${sleep_Time}
    inputText    ${Phone_no_locator}    9259${hh}88${mm}
    sleep    ${sleep_Time}
    ${email}=    Catenate    SEPARATOR=    ${fName}    @mailinator.com
    inputText    ${Email_locator}    ${email}
    sleep    ${sleep_Time}
    inputText    ${Primary_addr_locator}    ${hh}${mm} robot drive
    sleep    ${sleep_Time}
    inputText    ${Primary_city_locator}    San Ramon
    sleep    ${sleep_Time}
    Select From List    ${Primary_state_locator}    California
    sleep    ${sleep_Time}
    inputText    ${Zip_code_locator}    ${Registration_Zip}
    sleep    ${sleep_Time}
    #####--->    Choose Resume File and upload it
    Click Element    ${Termsofuse_locator}
    sleep    ${sleep_Time}
    #### ----> Verify Thank you page appears
    Click Button    xpath=//input[@id='edit-submit']
    ${testStatus}=    Wait Until Text Is Detectable    Thank you!
    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Thank you
    ...    ELSE    PagePass    Thank you
    sleep    ${sleep_Time}
    ####    ----> Verify Apply button disabled
    ${testStatus}=    Run Keyword and Return Status    Element Should Be Disabled    ${Apply_withLinkedIN_Button}
    Run Keyword If    '${testStatus}'!= 'True'    ObjectFail    Apply with LinkedIn button is Enable    Thank you page
    ...    ELSE    ObjectPass    Apply with LinkedIn button disable
    [Return]    ${email}

AT_Full_Registration_FR_CAN
    #[Documentation]    Testcase to Register a candidate in AT for US.
    #[Tags]    AT    registration    ETE
    #[Setup]    ITMCC_Setup    AT
    sleep    ${sleep_Time}
    #${ENV}=    Set Variable    ${ENV.upper()}
    #####---> Verify that Accountemps page successuly loadrd
    #Wait Until Page Contains Element    ${Login_Register_locator}
    #Wait until element is visible    ${Login_Register_locator}
    ${testStatus}=    Wait Until Text Is Detectable    Resume Upload
    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Resume Upload
    ...    ELSE    PagePass    Resume Upload
    sleep    ${sleep_Time}
    ${Year}=    Get Time    year
    ${mon}=    Get Time    month
    ${dd}=    Get Time    day
    ${hh}=    Get Time    hour
    ${mm}=    Get Time    min
    ${Sec}=    Get Time    Sec
    #####--> Enter mandatory data and select Submit button
    ${fName}=    Catenate    SEPARATOR=    QACAFRtst    ${ENV.upper()}    ${Year}    ${mon}
    ...    ${dd}    ${hh}    ${mm}    ${Sec}
    ${lName}=    Catenate    SEPARATOR=    QATestSN    ${ENV.upper()}    ${Year}    ${mon}
    ...    ${dd}    ${hh}    ${mm}    ${Sec}
    ${firstName}=    Catenate    SEPARATOR=    ${fName}    _f
    ${lastName}=    Catenate    SEPARATOR=    ${lName}    _l
    inputText    ${First_name_locator}    ${firstName}
    sleep    ${sleep_Time}
    inputText    ${Last_name_locator}    ${lastName}
    sleep    ${sleep_Time}
    inputText    ${Phone_no_locator}    4169${hh}88${mm}
    sleep    ${sleep_Time}
    ${email}=    Catenate    SEPARATOR=    ${fName}    @rhi.com
    inputText    ${Email_locator}    ${email}
    sleep    ${sleep_Time}
    inputText    ${Primary_addr_locator}    ${hh}${mm} robot drive
    sleep    ${sleep_Time}
    inputText    ${Primary_city_locator}    Toronto
    sleep    ${sleep_Time}
    Select From List    ${Primary_state_locator}    ON
    sleep    ${sleep_Time}
    inputText    ${Zip_code_locator}    M6K 1V2
    sleep    ${sleep_Time}
    #####--->    Choose Resume File and upload it
    Click Element    ${Termsofuse_locator}
    sleep    ${sleep_Time}
    Execute Javascript    window.scrollTo(0,0);
    sleep    ${sleep_Time}
    Focus    xpath=//a[contains(text(),'Upload your Resume')]
    sleep    7
    Click Element    xpath=//a[contains(text(),'Upload your Resume')]
    #Press Key    xpath=//a[contains(text(),'Upload your Resume')]    \\13
    #Click Element    xpath=//div[@id="upload_section_title"]
    sleep    ${sleep_Time}
    #Choose File    ${Resume_file_locator}    C:\\ITMCC\\MarvinScripts\\ITMCC_Smoke_test_ETE\\Datafiles\\ETE\\Resume_doc.doc
    Choose File    ${Resume_file_locator}    ${CURDIR}\\Datafiles\\UploadFiles\\Resume_doc.doc    #Click Button    ${Submit_button_locator}    #${testStatus}=    Wait Until Text Is Detectable
    ...    # Create Your Account    #Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Create Your Account    # ELSE
    ...    # PagePass    Create Your Account
    #Wait Until Page Contains    Create Your Account    timeout=30
    #### ----> Verify Thank you page appea
    #Click Button    name=submit_btn
    Click Button    xpath=//input[@id='edit-submit']
    ${testStatus}=    Wait Until Text Is Detectable    Thank you!
    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Thank you
    ...    ELSE    PagePass    Thank you
    sleep    ${sleep_Time}
    ####    ----> Verify Apply button disabled
    ${testStatus}=    Run Keyword and Return Status    Element Should Be Disabled    ${ApplyNowButton}
    Run Keyword If    '${testStatus}'!= 'True'    ObjectFail    Apply Now button is Enable    Thank you page
    ...    ELSE    ObjectPass    Apply Now button disable
    [Return]    ${email}

AT_Full_Registration_CAN
    #[Documentation]    Testcase to Register a candidate in AT for US.
    #[Tags]    AT    registration    ETE
    #[Setup]    ITMCC_Setup    AT
    sleep    ${sleep_Time}
    #${ENV}=    Set Variable    ETE
    #####---> Verify that Accountemps page successuly loadrd
    #Wait Until Page Contains Element    ${Login_Register_locator}
    #Wait until element is visible    ${Login_Register_locator}
    ${testStatus}=    Wait Until Text Is Detectable    Resume Upload
    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Resume Upload
    ...    ELSE    PagePass    Resume Upload
    sleep    ${sleep_Time}
    ${Year}=    Get Time    year
    ${mon}=    Get Time    month
    ${dd}=    Get Time    day
    ${hh}=    Get Time    hour
    ${mm}=    Get Time    min
    ${Sec}=    Get Time    Sec
    #####--> Enter mandatory data and select Submit button
    ${fName}=    Catenate    SEPARATOR=    QACAtst    ${ENV.upper()}    ${Year}    ${mon}
    ...    ${dd}    ${hh}    ${mm}    ${Sec}
    ${lName}=    Catenate    SEPARATOR=    QATestSN    ${ENV.upper()}    ${Year}    ${mon}
    ...    ${dd}    ${hh}    ${mm}    ${Sec}
    ${firstName}=    Catenate    SEPARATOR=    ${fName}    _f
    ${lastName}=    Catenate    SEPARATOR=    ${lName}    _l
    inputText    ${First_name_locator}    ${firstName}
    sleep    ${sleep_Time}
    inputText    ${Last_name_locator}    ${lastName}
    sleep    ${sleep_Time}
    inputText    ${Phone_no_locator}    9259${hh}88${mm}
    sleep    ${sleep_Time}
    ${email}=    Catenate    SEPARATOR=    ${fName}    @rhi.com
    inputText    ${Email_locator}    ${email}
    sleep    ${sleep_Time}
    inputText    ${Primary_addr_locator}    ${hh}${mm} robot drive
    sleep    ${sleep_Time}
    inputText    ${Primary_city_locator}    Toronto
    sleep    ${sleep_Time}
    Select From List    ${Primary_state_locator}    ON
    sleep    ${sleep_Time}
    inputText    ${Zip_code_locator}    M6K 1V2
    sleep    ${sleep_Time}
    #####--->    Choose Resume File and upload it
    Click Element    ${Termsofuse_locator}
    sleep    ${sleep_Time}
    Execute Javascript    window.scrollTo(0,0);
    sleep    ${sleep_Time}
    Focus    xpath=//a[contains(text(),'Upload your Resume')]
    sleep    7
    Click Element    xpath=//a[contains(text(),'Upload your Resume')]
    #Press Key    xpath=//a[contains(text(),'Upload your Resume')]    \\13
    #Click Element    xpath=//div[@id="upload_section_title"]
    sleep    ${sleep_Time}
    #Choose File    ${Resume_file_locator}    C:\\ITMCC\\MarvinScripts\\ITMCC_Smoke_test_ETE\\Datafiles\\ETE\\Resume_doc.doc
    Choose File    ${Resume_file_locator}    ${CURDIR}\\Datafiles\\UploadFiles\\Resume_doc.doc    #Click Button    ${Submit_button_locator}    #${testStatus}=    Wait Until Text Is Detectable
    ...    # Create Your Account    #Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Create Your Account    # ELSE
    ...    # PagePass    Create Your Account
    #Wait Until Page Contains    Create Your Account    timeout=30
    #### ----> Verify Thank you page appears
    #Click Button    name=submit_btn
    Click Button    xpath=//input[@id='edit-submit']
    ${testStatus}=    Wait Until Text Is Detectable    Thank you!
    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Thank you
    ...    ELSE    PagePass    Thank you
    sleep    ${sleep_Time}
    ####    ----> Verify Apply button disabled
    ${testStatus}=    Run Keyword and Return Status    Element Should Be Disabled    ${ApplyNowButton}
    Run Keyword If    '${testStatus}'!= 'True'    ObjectFail    Apply Now button is Enable    Thank you page
    ...    ELSE    ObjectPass    Apply Now button disable
    [Return]    ${email}

AT_Full_Registration_WithLinkedIn_CAN
    #[Documentation]    Testcase to Register a candidate in AT for CAN using LinkedIn account.
    #[Tags]    AT    registration    ETE
    #[Setup]    ITMCC_Setup    AT
    sleep    ${sleep_Time}
    ${window_titles}=    Get WIndow Titles
    ${titles1}=    Set Variable    ${window_titles[0]}
    ${Is_Main_Window}=    Run Keyword and Return Status    Should contain    ${titles1}    Authorize | LinkedIn
    ${Is_not_Main_Window}=    Run Keyword and Return Status    Should not contain    ${titles1}    Authorize | LinkedIn
    ${main_window}=    Set Variable if    ${Is_Main_Window}    ${window_titles[0]}    ${window_titles[1]}
    Log    ${main_window}
    Select WIndow    title=${main_window}
    #####---> Verify that pre-login LinkedIn page successuly loaded
    ${testStatus}=    Wait Until Text Is Detectable    your LinkedIn info
    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    LinkedIn pre-login
    ...    ELSE    PagePass    LinkedIn pre-login
    Input Text    ${LinkedIn_UserName_field}    ${LinkedIn_Username}
    Input Text    ${LinkedIn_Password_field}    ${LinkedIn_Password}
    Click Button    ${LinkedIn_AllowAccess_button}
    #Comment    Reload page
    #####---> Verify that Accountemps page successuly loaded
    sleep    10s
    ${window_titles}=    Get WIndow Titles
    Select WIndow    title=${window_titles[0]}
    ${testStatus}=    Wait Until Text Is Detectable    Resume Upload
    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Resume Upload
    ...    ELSE    PagePass    Resume Upload
    sleep    ${sleep_Time}
    ${Year}=    Get Time    year
    ${mon}=    Get Time    month
    ${dd}=    Get Time    day
    ${hh}=    Get Time    hour
    ${mm}=    Get Time    min
    ${Sec}=    Get Time    Sec
    #####--> Enter mandatory data and select Submit button
    ${fName}=    Catenate    SEPARATOR=    QACAtst    ${ENV.upper()}    ${Year}    ${mon}
    ...    ${dd}    ${hh}    ${mm}    ${Sec}
    ${lName}=    Catenate    SEPARATOR=    QATestSN    ${ENV.upper()}    ${Year}    ${mon}
    ...    ${dd}    ${hh}    ${mm}    ${Sec}
    ${firstName}=    Catenate    SEPARATOR=    ${fName}    _f
    ${lastName}=    Catenate    SEPARATOR=    ${lName}    _l
    inputText    ${First_name_locator}    ${firstName}
    sleep    ${sleep_Time}
    inputText    ${Last_name_locator}    ${lastName}
    sleep    ${sleep_Time}
    inputText    ${Phone_no_locator}    4169${hh}88${mm}
    sleep    ${sleep_Time}
    ${email}=    Catenate    SEPARATOR=    ${fName}    @mailinator.com
    inputText    ${Email_locator}    ${email}
    sleep    ${sleep_Time}
    inputText    ${Primary_addr_locator}    ${hh}${mm} robot drive
    sleep    ${sleep_Time}
    inputText    ${Primary_city_locator}    Toronto
    sleep    ${sleep_Time}
    Select From List    ${Primary_state_locator}    ON
    sleep    ${sleep_Time}
    inputText    ${Zip_code_locator}    M6K 1V2
    sleep    ${sleep_Time}
    #####--->    Choose Resume File and upload it
    Click Element    ${Termsofuse_locator}
    sleep    ${sleep_Time}
    ##Execute Javascript    window.scrollTo(0,0);
    ##sleep    ${sleep_Time}
    ##Focus    xpath=//a[contains(text(),'Upload your Resume')]
    ##sleep    7
    ##Click Element    xpath=//a[contains(text(),'Upload your Resume')]
    ##sleep    ${sleep_Time}
    ##Choose File    ${Resume_file_locator}    ${CURDIR}\\Datafiles\\UploadFiles\\Resume_doc.doc    #Click Button
    #### ----> Verify Thank you page appears
    #Click Button    name=submit_btn
    Click Button    xpath=//input[@id='edit-submit']
    ${testStatus}=    Wait Until Text Is Detectable    Thank you!
    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Thank you
    ...    ELSE    PagePass    Thank you
    sleep    ${sleep_Time}
    ####    ----> Verify Apply button disabled
    ${testStatus}=    Run Keyword and Return Status    Element Should Be Disabled    ${Apply_withLinkedIN_Button}
    Run Keyword If    '${testStatus}'!= 'True'    ObjectFail    Apply with LinkedIn button is Enable    Thank you page
    ...    ELSE    ObjectPass    Apply with LinedIn button disable
    [Return]    ${email}

Full_Customer_Feedback
    #[Documentation]    Testcase to enter customer feedback information
    #[Tags]    Customer Feedback
    #sleep    ${sleep_Time}
    #${ENV}=    Set Variable    ETE
    sleep    ${sleep_Time}
    ${Year}=    Get Time    year
    ${mon}=    Get Time    month
    ${dd}=    Get Time    day
    ${hh}=    Get Time    hour
    ${mm}=    Get Time    min
    ${Sec}=    Get Time    Sec
    #####--> Enter mandatory data and select Submit button
    ${fName}=    Catenate    SEPARATOR=    QACAtst    ${ENV.upper()}    ${Year}    ${mon}
    ...    ${dd}    ${hh}    ${mm}    ${Sec}
    ${lName}=    Catenate    SEPARATOR=    QATestSN    ${ENV.upper()}    ${Year}    ${mon}
    ...    ${dd}    ${hh}    ${mm}    ${Sec}
    ${firstName}=    Catenate    SEPARATOR=    ${fName}    _f
    ${lastName}=    Catenate    SEPARATOR=    ${lName}    _l
    Select From List    ${Feedback_Type}    Web Account Issue
    sleep    ${sleep_Time}
    inputText    ${Office_You_Work_With}    San Ramon Office
    sleep    ${sleep_Time}
    inputText    ${Brief_Description}    This is brief description for test customer feedback...
    sleep    ${sleep_Time}
    inputText    ${Your_First_Name}    ${firstName}
    sleep    ${sleep_Time}
    inputText    ${Your_Last_Name}    ${lastName}
    sleep    ${sleep_Time}
    #inputText    ${Phone_no_locator}    9259${hh}88${mm}.
    #####---> Scroll to the top of the page to select Apply Now button
    #Execute Javascript    window.scrollTo(0,-1000)
    #sleep    ${sleep_Time}
    ${email}=    Catenate    SEPARATOR=    ${fName}    @mailinator.com
    inputText    ${Your_Email_Address}    ${email}
    #inputText    ${Your_Email_Address}    ssoaaemail01@gmail.com
    sleep    ${sleep_Time}
    #inputText    ${Primary_addr_locator}    ${hh}${mm} robot drive
    #sleep    ${sleep_Time}
    #inputText    ${Primary_city_locator}    San Ramon
    #sleep    ${sleep_Time}
    #Select From List    ${Primary_state_locator}    California
    #sleep    ${sleep_Time}
    #inputText    ${Zip_code_locator}    ${Registration_Zip}
    #sleep    ${sleep_Time}
    #####--->    Choose Submit button and verify thank you page appears
    Click Button    ${Submit_Button_Feedback}
    sleep    ${sleep_Time}
    #Click Button    name=submit_btn
    ${testStatus}=    Wait Until Text Is Detectable    Thank you for taking
    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Thank you
    ...    ELSE    PagePass    Thank you
    sleep    ${sleep_Time}
    [Return]    ${email}

AT_Resume_Upload
    #[Documentation]    Testcase to Register a candidate in AT for US.
    #[Tags]    AT    registration    ETE
    #[Setup]    ITMCC_Setup    AT
    sleep    ${sleep_Time}
    #${ENV}=    Set Variable    ETE
    #####---> Verify that Accountemps page successuly loadrd
    #Wait Until Page Contains Element    ${Login_Register_locator}
    #Wait until element is visible    ${Login_Register_locator}
    ${testStatus}=    Wait Until Text Is Detectable    Upload your Resume
    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Resume Upload
    ...    ELSE    PagePass    Resume Upload
    sleep    ${sleep_Time}
    ${Year}=    Get Time    year
    ${mon}=    Get Time    month
    ${dd}=    Get Time    day
    ${hh}=    Get Time    hour
    ${mm}=    Get Time    min
    ${Sec}=    Get Time    Sec
    #####--> Enter mandatory data and select Submit button
    ${fName}=    Catenate    SEPARATOR=    QAUStst    ${ENV.upper()}    ${Year}    ${mon}
    ...    ${dd}    ${hh}    ${mm}    ${Sec}
    ${lName}=    Catenate    SEPARATOR=    QATestSN    ${ENV.upper()}    ${Year}    ${mon}
    ...    ${dd}    ${hh}    ${mm}    ${Sec}
    ${firstName}=    Catenate    SEPARATOR=    ${fName}    _f
    ${lastName}=    Catenate    SEPARATOR=    ${lName}    _l
    inputText    ${First_name_locator}    ${firstName}
    sleep    ${sleep_Time}
    inputText    ${Last_name_locator}    ${lastName}
    sleep    ${sleep_Time}
    inputText    ${Phone_no_locator}    9259${hh}88${mm}
    sleep    ${sleep_Time}
    ${email}=    Catenate    SEPARATOR=    ${fName}    @rhi.com
    inputText    ${Email_locator}    ${email}
    sleep    ${sleep_Time}
    inputText    ${Primary_addr_locator}    ${hh}${mm} robot drive
    sleep    ${sleep_Time}
    inputText    ${Primary_city_locator}    San Ramon
    sleep    ${sleep_Time}
    Select From List    ${Primary_state_locator}    California
    sleep    ${sleep_Time}
    inputText    ${Zip_code_locator}    ${Registration_Zip}
    sleep    ${sleep_Time}
    Click Element    ${Termsofuse_locator}
    sleep    ${sleep_Time}
    #####--->    Choose Resume File and upload it
    Click Element    xpath=//div/a[contains(text(),'Upload your Resume')]
    #Focus    xpath=//a[contains(text(),'Upload your Resume')]
    #Press Key    xpath=//a[contains(text(),'Upload your Resume')]    \\13
    sleep    ${sleep_Time}
    #Choose File    ${Resume_file_locator}    C:\\ITMCC\\MarvinScripts\\ITMCC_Smoke_test_ETE\\Datafiles\\ETE\\Resume_doc.doc
    Choose File    ${Resume_file_locator}    ${CURDIR}\\Datafiles\\UploadFiles\\Resume_doc.doc    #Click Button    ${Submit_button_locator}    #${testStatus}=    Wait Until Text Is Detectable
    ...    # Create Your Account    #Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Create Your Account    # ELSE
    ...    # PagePass    Create Your Account
    #Wait Until Page Contains    Create Your Account    timeout=30
    #Click Element    ${Termsofuse_locator}
    #### ----> Verify Thank you page appears
    Click Button    xpath=//input[@id='edit-submit']
    ${testStatus}=    Wait Until Text Is Detectable    Thank you
    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Thank you for uploading resume
    ...    ELSE    PagePass    Thank you for uploading resume
    sleep    ${sleep_Time}
    [Return]    ${email}

AT_Resume_Upload_CAN
    #[Documentation]    Testcase to Register a candidate in AT for Canada.
    #[Tags]    AT    registration    ETE
    #[Setup]    ITMCC_Setup    AT
    sleep    ${sleep_Time}
    #${ENV}=    Set Variable    ETE
    #####---> Verify that Accountemps page successuly loadrd
    #Wait Until Page Contains Element    ${Login_Register_locator}
    #Wait until element is visible    ${Login_Register_locator}
    ${testStatus}=    Wait Until Text Is Detectable    Upload your Resume
    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Resume Upload
    ...    ELSE    PagePass    Resume Upload
    sleep    ${sleep_Time}
    ${Year}=    Get Time    year
    ${mon}=    Get Time    month
    ${dd}=    Get Time    day
    ${hh}=    Get Time    hour
    ${mm}=    Get Time    min
    ${Sec}=    Get Time    Sec
    #####--> Enter mandatory data and select Submit button
    ${fName}=    Catenate    SEPARATOR=    QACAtst    ${ENV.upper()}    ${Year}    ${mon}
    ...    ${dd}    ${hh}    ${mm}    ${Sec}
    ${lName}=    Catenate    SEPARATOR=    QATestSN    ${ENV.upper()}    ${Year}    ${mon}
    ...    ${dd}    ${hh}    ${mm}    ${Sec}
    ${firstName}=    Catenate    SEPARATOR=    ${fName}    _f
    ${lastName}=    Catenate    SEPARATOR=    ${lName}    _l
    inputText    ${First_name_locator}    ${firstName}
    sleep    ${sleep_Time}
    inputText    ${Last_name_locator}    ${lastName}
    sleep    ${sleep_Time}
    inputText    ${Phone_no_locator}    4169${hh}88${mm}
    sleep    ${sleep_Time}
    ${email}=    Catenate    SEPARATOR=    ${fName}    @rhi.com
    inputText    ${Email_locator}    ${email}
    sleep    ${sleep_Time}
    inputText    ${Primary_addr_locator}    ${hh}${mm} robot drive
    sleep    ${sleep_Time}
    inputText    ${Primary_city_locator}    Toronto
    sleep    ${sleep_Time}
    Select From List    ${Primary_state_locator}    ON
    sleep    ${sleep_Time}
    inputText    ${Zip_code_locator}    M6K 1V2
    sleep    ${sleep_Time}
    Click Element    ${Termsofuse_locator}
    sleep    ${sleep_Time}
    #####--->    Choose Resume File and upload it
    Click Element    xpath=//div/a[contains(text(),'Upload your Resume')]
    #Focus    xpath=//a[contains(text(),'Upload your Resume')]
    #Press Key    xpath=//a[contains(text(),'Upload your Resume')]    \\13
    sleep    ${sleep_Time}
    #Choose File    ${Resume_file_locator}    C:\\ITMCC\\MarvinScripts\\ITMCC_Smoke_test_ETE\\Datafiles\\ETE\\Resume_doc.doc
    Choose File    ${Resume_file_locator}    ${CURDIR}\\Datafiles\\UploadFiles\\Resume_doc.doc    #Click Button    ${Submit_button_locator}    #${testStatus}=    Wait Until Text Is Detectable
    ...    # Create Your Account    #Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Create Your Account    # ELSE
    ...    # PagePass    Create Your Account
    #Wait Until Page Contains    Create Your Account    timeout=30
    #Click Element    ${Termsofuse_locator}
    #### ----> Verify Thank you page appears
    Click Button    xpath=//input[@id='edit-submit']
    ${testStatus}=    Wait Until Text Is Detectable    Thank you
    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Thank you for uploading resume
    ...    ELSE    PagePass    Thank you for uploading resume
    sleep    ${sleep_Time}
    [Return]    ${email}

ClickRegister
    Click Link    ${Login_Register_locator}
    sleep    3

SelectElement_TCAST
    Click Element    xpath=//a[contains(text(),'Access Timesheets')]

LOB_Login
    [Arguments]    ${Username}    ${Password}
    sleep    2
    #Capture page screenshot
    Input Text    ${LOB_UserName_field}    ${Username}
    Input Text    ${LOB_Password_field}    ${Password}
    Click Button    ${LOB_SignIn_button}
    sleep    6
    Comment    Reload page
    ##########--> Below Keywords are for IZ Scripts Metro Page Object Verification <--##########

Setup Country Variables from Excel
    [Arguments]    ${Country}
    Log    Keyword Function: *** Setup Global Variables from Excel ***
    ${Locale}=    Set Variable If    '${Country.upper()}'=='AUSTRALIA'    AU    '${Country.upper()}'=='GERMANY'    DE    '${Country.upper()}'=='FRANCE'
    ...    FR    '${Country.upper()}'=='UK'    UK    '${Country.upper()}'=='SINGAPORE'    SG    '${Country.upper()}'=='BRAZIL'
    ...    BR    '${Country.upper()}'=='HONG-KONG'    HK    '${Country.upper()}'=='NEW-ZEALAND'    NZ    '${Country.upper()}'=='SWITZERLAND-DE'
    ...    CH-DE    '${Country.upper()}'=='SWITZERLAND-EN'    CH-EN    '${Country.upper()}'=='AUSTRIA'    AT    '${Country.upper()}'=='UAE'
    ...    AE    '${Country.upper()}'=='CHILE'    CL    '${Country.upper()}'=='JAPAN-JA'    JP-JA    '${Country.upper()}'=='JAPAN-EN'
    ...    JP-EN    '${Country.upper()}'=='CHINA-ZH'    CN-ZH    '${Country.upper()}'=='CHINA-EN'    CN-EN    '${Country.upper()}'=='BELGIUM-EN'
    ...    BE-EN    '${Country.upper()}'=='BELGIUM-NL'    BE-NL    '${Country.upper()}'=='BELGIUM-FR'    BE-FR    '${Country.upper()}'=='NETHERLANDS-EN'
    ...    NL-EN    '${Country.upper()}'=='NETHERLANDS-NL'    NL-NL
    Log    Locale ----> ${Locale}
    ${Col}=    Run Keyword If    '${Locale}'=='AU'    Set Variable    B
    ...    ELSE IF    '${Locale}'=='DE'    Set Variable    C
    ...    ELSE IF    '${Locale}'=='FR'    Set Variable    D
    ...    ELSE IF    '${Locale}'=='UK'    Set Variable    E
    ...    ELSE IF    '${Locale}'=='SG'    Set Variable    F
    ...    ELSE IF    '${Locale}'=='BR'    Set Variable    G
    ...    ELSE IF    '${Locale}'=='HK'    Set Variable    H
    ...    ELSE IF    '${Locale}'=='NZ'    Set Variable    I
    ...    ELSE IF    '${Locale}'=='CH-DE'    Set Variable    J
    ...    ELSE IF    '${Locale}'=='CH-EN'    Set Variable    K
    ...    ELSE IF    '${Locale}'=='AT'    Set Variable    L
    ...    ELSE IF    '${Locale}'=='AE'    Set Variable    M
    ...    ELSE IF    '${Locale}'=='CL'    Set Variable    N
    ...    ELSE IF    '${Locale}'=='JP-JA'    Set Variable    O
    ...    ELSE IF    '${Locale}'=='JP-EN'    Set Variable    P
    ...    ELSE IF    '${Locale}'=='CN-ZH'    Set Variable    Q
    ...    ELSE IF    '${Locale}'=='CN-EN'    Set Variable    R
    ...    ELSE IF    '${Locale}'=='BE-EN'    Set Variable    S
    ...    ELSE IF    '${Locale}'=='BE-NL'    Set Variable    T
    ...    ELSE IF    '${Locale}'=='BE-FR'    Set Variable    U
    ...    ELSE IF    '${Locale}'=='NL-EN'    Set Variable    V
    ...    ELSE IF    '${Locale}'=='NL-NL'    Set Variable    W
    Open Excel    ${CURDIR}\\Datafiles\\Locale_Metro_IZ2.xls
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}2
    Set Global Variable    ${LO_PRD_URL}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}3
    Set Global Variable    ${LO_QA_URL}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}4
    Set Global Variable    ${LO_DATAFILE}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}5
    Set Global Variable    ${LO_SMOKE_DATAFILE}    ${Data}

Metro_Setup_IZ
    [Arguments]    ${MetroArea}
    Log    Keyword Function: *** Metro_Setup_IZ ***
    Modal Global Variables
    #${MetroAreaName}=    Get_LOB    ${MetroArea}
    #Log    ${MetroAreaName}
    ${URL}=    Get_URL_IZ    ${MetroArea}    ${ENV}
    Log    ${URL}
    ${URL}=    catenate    SEPARATOR=    ${URL}    ${MetroArea}
    Comment    OpenBrowser    ${URL}    ${Browser}    remote_url=http://10.234.52.62:4444/wd/hub
    Run Keyword If    "${Security.upper()}" == "YES"    Security_Authorization    ${Browser}    #Run Keyword If    "${Browser.upper()}"=="IE"    IE Authenticate
    ...    # ELSE IF    "${Browser.upper()}"=="FF"    FF Authenticate    # ELSE
    #...    GC Authenticate
    sleep    10
    Open Browser    ${URL}    ${Browser}    ff_profile_dir=${FF_PROFILE}
    ##Run Keyword If    "${REMOTE.upper}"=="FALSE"    Open Browser    ${URL}    ${Browser}    ff_profile_dir=${FF_PROFILE}
    ##Run Keyword If    "${REMOTE.upper}"=="TRUE"    Open Browser    ${URL}    ${Browser}    remote_url=http://10.234.53.108:8081/wd/hub    ff_profile_dir=${FF_PROFILE}
    sleep    ${sleep_Time}
    Maximize Browser Window

Get_URL_IZ
    [Arguments]    ${LOB}    ${ENV}
    Log    Keyword Function: *** Get_URL_IZ ***
    ${URL}=    Set Variable If    "${ENV.upper()}"=="QA"    ${LO_QA_URL}    "${ENV.upper()}"=="PRD"    ${LO_PRD_URL}    Invalid LOB or ENV
    ###...    "${ENV.upper()}"=="STG"    http://origin-stg.acquia-nonprd-mcc.roberthalf.com.au/    http://origin-prd.roberthalf.com.au/    Invalid LOB or ENV
    [Return]    ${URL}

Verify IZ Tabs
    [Arguments]    ${MetroArea}
    Log    Keyword Function: *** Verify IZ Tabs ***
    ####--->    Verify Overview, Employer and Job Seekers Tabs
    log    MetroArea is: ${MetroArea}
    Click Element    ${Find_jobs_IZ}
    ${testStatus}=    Wait until element exist2    ${Job_Seekers_Page}
    Log    The testStatus: ${testStatus}
    Run Keyword If    ${testStatus}!= 'True'    ObjectFail    Find Jobs Page    ${MetroArea}
    ...    ELSE    ObjectPass    Find Jobs Page
    sleep    ${sleep_Time}
    Click Element    ${Employers_IZ}
    ${testStatus}=    Wait until element exist2    ${Employers_Page}
    Log    The testStatus: ${testStatus}
    Run Keyword If    ${testStatus}!= 'True'    ObjectFail    Employers Page    ${MetroArea}
    ...    ELSE    ObjectPass    Employers Page
    sleep    ${sleep_Time}
    Click Element    ${Overview_IZ}
    ${testStatus}=    Wait until element exist2    ${Overview_Page}
    Log    The testStatus: ${testStatus}
    Run Keyword If    ${testStatus}!= 'True'    ObjectFail    Overview Page    ${MetroArea}
    ...    ELSE    ObjectPass    Overview Page
    sleep    ${sleep_Time}

Verify View and Hide Office Locations
    [Arguments]    ${MetroArea}
    Log    Keyword Function: *** Verify View and Hide Office Locations ***
    ####--->    Verify Hide and View Office Locations in the Map
    Click Element    ${Click_Hide_Office_Locations}
    sleep    ${sleep_Time}
    ${testStatus}=    Wait until element exist2    ${Click_View_Office_Locations}
    Log    The testStatus: ${testStatus}
    Run Keyword If    ${testStatus}!= 'True'    ObjectFail    View Office Locations    ${MetroArea}
    ...    ELSE    ObjectPass    View Office Locations
    Click Element    ${Click_View_Office_Locations}
    sleep    ${sleep_Time}
    ${testStatus}=    Wait until element exist2    ${Click_Hide_Office_Locations}
    Log    The testStatus: ${testStatus}
    Run Keyword If    ${testStatus}!= 'True'    ObjectFail    Hide Office Locations    ${MetroArea}
    ...    ELSE    ObjectPass    Hide Office Locations
    #####--> Below Keywords are for the old IZ Scripts Job Search and Apply <---#####

Get Resume Upload URL Australia
    [Arguments]    ${ENV}
    ${Resume_Upload_URL}=    Set Variable If    "${ENV.upper()}"=="QA"    https://qs1.rh.roberthalf.com/resumeupload/resumeupload.do?A=0&B=&C=au&D=en_AU&resumeOnly=true    "${ENV.upper()}"=="STG"    http://origin-stg.acquia-nonprd-mcc.roberthalf.au/    "${ENV.upper()}"=="PRD"
    ...    https://rh.roberthalf.com/resumeupload/resumeupload.do?A=&B=&C=au&D=en_AU&resumeOnly=true    Invalid LOB or ENV    #    ...    https://rh.roberthalf.com/resumeupload/resumeupload.do?A=0&B=&C=de&D=de_DE&resumeOnly=true    Invalid LOB or ENV
    [Return]    ${Resume_Upload_URL}

Get Resume Upload URL Germany
    [Arguments]    ${ENV}
    ${Resume_Upload_URL}=    Set Variable If    "${ENV.upper()}"=="QA"    https://qs1.rh.roberthalf.com/resumeupload/resumeupload.do?A=0&B=&C=de&D=de_DE&resumeOnly=true    "${ENV.upper()}"=="STG"    http://origin-stg.acquia-nonprd-mcc.roberthalf.de/    "${ENV.upper()}"=="PRD"
    ...    https://rh.roberthalf.com/resumeupload/resumeupload.do?A=0&B=&C=de&D=de_DE&resumeOnly=true    Invalid LOB or ENV    #    ...    https://rh.roberthalf.com/resumeupload/resumeupload.do?A=0&B=&C=de&D=de_DE&resumeOnly=true    Invalid LOB or ENV
    [Return]    ${Resume_Upload_URL}

Open File Pass IZ
    [Arguments]    ${time}
    Create File    ${CURDIR}\\Report\\IZ_Page_${time}_Pass.doc
    [Return]    ${CURDIR}\\Report\\IZ_Page_${time}_Pass.doc

Open File Fail IZ
    [Arguments]    ${time}
    Create File    ${CURDIR}\\Report\\IZ_Page_${time}_Fail.doc
    [Return]    ${CURDIR}\\Report\\IZ_Page_${time}_Fail.doc

Verify Page URL
    [Arguments]    ${page_url}
    ${url_test}=    Location Should Contain    ${page_url}
    [Return]    ${url_test}

Comment for IZ Sscripts
    ##################---> Below keywords are for IZ countries <----#################################

Read File and Assign Params
    [Arguments]    ${FileContents}    ${LineNumber}
    Log    Keyword Function: *** Read File and Assign Params ***
    Log    LineNumber=====${LineNumber}
    ${Line}=    Get Line    ${FileContents}    ${LineNumber}
    @{Params}=    Split String    ${Line}    ;
    ${Country}=    Set Variable    @{Params}[0]
    ${Locale}=    Set Variable    @{Params}[1]
    ${FName}=    Set Variable    @{Params}[2]
    ${LName}=    Set Variable    @{Params}[3]
    ${Phone}=    Set Variable    @{Params}[4]
    ${Keyword}=    Set Variable    @{Params}[5]
    ${ResumeLink}=    Set Variable    @{Params}[6]
    ${ResumeFileNm}=    Set Variable    @{Params}[7]
    ${ResumeDropbox}=    Set Variable    @{Params}[8]
    #####---> Concatenate ResumeFileNm variable with local file path
    ${ResumeFile}=    catenate    SEPARATOR=    ${CURDIR}\\Datafiles\\Resumes for IZ testing\\    ${ResumeFileNm}
    Log    ResumeFile====> ${ResumeFile}
    [Return]    ${Country}    ${Locale}    ${FName}    ${LName}    ${Phone}    ${Keyword}
    ...    ${ResumeLink}    ${ResumeFileNm}    ${ResumeDropbox}    ${ResumeFile}

Setup Global Variables from Excel
    [Arguments]    ${Locale}
    Log    Keyword Function: *** Setup Global Variables from Excel ***
    ${Col}=    Run Keyword If    '${Locale}'=='AU'    Set Variable    B
    ...    ELSE IF    '${Locale}'=='DE'    Set Variable    C
    ...    ELSE IF    '${Locale}'=='FR'    Set Variable    D
    ...    ELSE IF    '${Locale}'=='UK'    Set Variable    E
    ...    ELSE IF    '${Locale}'=='SG'    Set Variable    F
    ...    ELSE IF    '${Locale}'=='BR'    Set Variable    G
    ...    ELSE IF    '${Locale}'=='NZ'    Set Variable    H
    ...    ELSE IF    '${Locale}'=='HK'    Set Variable    I
    ...    ELSE IF    '${Locale}'=='CH-DE'    Set Variable    J
    ...    ELSE IF    '${Locale}'=='CH-EN'    Set Variable    K
    ...    ELSE IF    '${Locale}'=='AT'    Set Variable    L
    ...    ELSE IF    '${Locale}'=='AE'    Set Variable    M
    ...    ELSE IF    '${Locale}'=='CL'    Set Variable    N
    ...    ELSE IF    '${Locale}'=='JP-JA'    Set Variable    O
    ...    ELSE IF    '${Locale}'=='JP-EN'    Set Variable    P
    ...    ELSE IF    '${Locale}'=='CN-ZH'    Set Variable    Q
    ...    ELSE IF    '${Locale}'=='CN-EN'    Set Variable    R
    ...    ELSE IF    '${Locale}'=='BE-EN'    Set Variable    S
    ...    ELSE IF    '${Locale}'=='BE-NL'    Set Variable    T
    ...    ELSE IF    '${Locale}'=='BE-FR'    Set Variable    U
    ...    ELSE IF    '${Locale}'=='NL-EN'    Set Variable    V
    ...    ELSE IF    '${Locale}'=='NL-NL'    Set Variable    W
    Open Excel    ${CURDIR}\\Datafiles\\Locale_IZ2.xls
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}2
    Set Global Variable    ${LO_PRD_URL}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}3
    Set Global Variable    ${LO_QA_URL}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}4
    Set Global Variable    ${LO_TERMS_URL}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}5
    Set Global Variable    ${LO_PRIVACY_URL}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}6
    Set Global Variable    ${LO_PERSONAL_DATA_URL}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}7
    Set Global Variable    ${LO_JOB_SEEKERS}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}8
    Set Global Variable    ${LO_PRIVACY_POLICY}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}9
    Set Global Variable    ${LO_FIRST_NAME}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}10
    Set Global Variable    ${LO_LAST_NAME}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}11
    Set Global Variable    ${LO_EMAIL_ADDR}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}12
    Set Global Variable    ${LO_COMMENTS}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}13
    Set Global Variable    ${LO_PHONE_NO}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}14
    Set Global Variable    ${LO_CV_LINK}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}15
    Set Global Variable    ${LO_RESUME_UPLD_WIN}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}16
    Set Global Variable    ${LO_AVAILABLE_FROM}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}17
    Set Global Variable    ${LO_SPECIALIZATION}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}18
    Set Global Variable    ${LO_JOB_TYPE}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}19
    Set Global Variable    ${LO_UPLOAD_OFFICE}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}20
    Set Global Variable    ${LO_UPLOAD_CV}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}21
    Set Global Variable    ${LO_USE_DROPBOX}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}22
    Set Global Variable    ${LO_RESUME_URL}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}23
    Set Global Variable    ${LO_UPLD_RESUME_FILE}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}24
    Set Global Variable    ${LO_SUBMIT_YOUR_CV_SUBMENU}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}25
    Set Global Variable    ${LO_SUBMIT_YOUR_CV}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}26
    Set Global Variable    ${LO_SUBMIT_CV_BUTTON}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}27
    Set Global Variable    ${LO_CV_UPLD_CONF}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}28
    Set Global Variable    ${LO_TERMS_OF_USE}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}29
    Set Global Variable    ${LO_QS1_DIRECT_URL}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}30
    Set Global Variable    ${LO_TERMS_OF_USE_CHKBOX}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}31
    Set Global Variable    ${LO_LOCATIONS_FILTER}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}32
    Set Global Variable    ${LO_EMP_TYPES_FILTER}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}33
    Set Global Variable    ${LO_TERMS_QA_URL}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}34
    Set Global Variable    ${LO_PRIVACY_QA_URL}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}35
    Set Global Variable    ${LO_PERSONAL_DATA_QA_URL}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}36
    Set Global Variable    ${LO_METRO_AREA}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}37
    Set Global Variable    ${LO_CONTACT_US}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}38
    Set Global Variable    ${LO_QA2_URL}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}39
    Set Global Variable    ${LO_TERMS_QA2_URL}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}40
    Set Global Variable    ${LO_PRIVACY_QA2_URL}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}41
    Set Global Variable    ${LO_PERSONAL_DATA_QA2_URL}    ${Data}
    ${Data}=    Read Cell Data By Name    Locale_IZ    ${Col}42
    Set Global Variable    ${LO_JOB_CLASS_FILTER}    ${Data}

Modal Global Variables IZ
    [Arguments]    ${Country}    #For Suite Test
    Log    Keyword Function: *** Modal Global Variables IZ ***
    ${if_exists}=    Set Variable    False
    Set Global Variable    ${if_exists}
    Set Global Variable    ${Country}
    Set Global Variable    ${URL}
    Comment    ${ENV}=    Set Variable    ETE
    Set Global Variable    ${ENV}
    #Comment    Set Global Variable    ${sleep}    3

Country Browser Setup
    [Arguments]    ${Country}
    Log    Keyword Function: *** Country Browser Setup ***
    Modal Global Variables IZ    ${Country}    #For Suite Test
    #Log    ${Country}
    ${URL}=    Get Country URL    ${Country}    ${ENV}
    Log    ${URL}
    #${URL}=    catenate    SEPARATOR=    ${URL}    ${Country}
    Comment    OpenBrowser    ${URL}    ${Browser}    remote_url=http://10.234.52.62:4444/wd/hub
    Run Keyword If    "${Security.upper()}" == "YES"    Security_Authorization    ${Browser}    #Run Keyword If    "${Browser.upper()}"=="IE"    IE Authenticate
    ...    # ELSE IF    "${Browser.upper()}"=="FF"    FF Authenticate    # ELSE
    #...    GC Authenticate
    sleep    10
    Open Browser    ${URL}    ${Browser}    ff_profile_dir=${FF_PROFILE}
    sleep    ${sleep_Time}
    Maximize Browser Window

Get Country URL
    [Arguments]    ${Country}    ${ENV}
    Log    Keyword Function: *** Get Country URL ***
    ${URL}=    Set Variable If    "${ENV.upper()}"=="QA"    ${LO_QA_URL}    "${ENV.upper()}"=="PRD"    ${LO_PRD_URL}    Invalid LOB or ENV
    [Return]    ${URL}

Job Search from Home Page
    [Arguments]    ${Locale}    ${FName}    ${LName}    ${Keyword}
    Log    Keyword Function: *** Job Search from Home Page ***
    #####---> Wait until Search Jobs home page is loadded successfully
    ${Jobsrch_status}=    Wait until element visible LOB    ${SearchJobs_button_IZ}
    Run Keyword If    ${Jobsrch_status}!= 'True'    PageFail    ${Locale}:${FName} ${LName} - Job Search
    ...    ELSE    PagePass    ${Locale}:${FName} ${LName} - Job Search
    #####---> Verify Header and Footer are displayed
    Verify Header and Footer    ${FName}    ${LName}    ${Locale}    Job Search Page
    ####---> Input Keyword text in Job Search field
    inputText    ${Keyword_input}    ${Keyword}
    Log    Keyword is===> ${Keyword_input}
    ####---> Click on City or State dropdown arrow to view the list of locations
    Click Element    //div[@id='iz_qs_job_search_location_chosen']/a/div/b
    ${CityState_status}=    Wait until element visible LOB    //div[@id='iz_qs_job_search_location_chosen']/div/ul
    Run Keyword If    ${CityState_status}!= 'True'    PageFail    ${Locale}:${FName} ${LName} - Search Jobs City or State
    ...    ELSE    PagePass    ${Locale}:${FName} ${LName} - Search Jobs City or State
    ####---> Get count of City or State from the search 'City or State' drop-down list and assign a Random Number
    ${Location_list_count}=    Set Variable    0
    ${Location_list_count}=    Get Matching xpath count    //div[@class="form-item form-type-select form-item-rh-iz-job-search-qs-location"]/select/option
    #${Random_number}=    Evaluate    random.sample(range(1, ${Location_list_count}),1)    random
    ${Random_number}=    Evaluate    random.sample(range(1, 6),1)    random
    ####---> If count of City or State is less than 6, just assign 1 to the random number variable
    ${Random_number}=    Set Variable If    ${Location_list_count} < 6    [1]    ${Random_number}
    ##${Location}=    Run Keyword If    ${Location_list_count} < 6    Get Text    //form[@id='rh-iz-job-search-quick-search-form']/div/div[2]/div/div/ul/li[1]    # ELSE
    ##...    Get Text    //form[@id='rh-iz-job-search-quick-search-form']/div/div[2]/div/div/ul/li${Random_number}
    ${Location}=    Get Text    //form[@id='rh-iz-job-search-quick-search-form']/div/div[2]/div/div/ul/li${Random_number}
    Log    Location is===> ${Location}
    sleep    ${sleep_Time}
    ####---> Check if City or State location is visible inthe drop-down list.    If it is, select it, else just continue
    ${Loc_status}=    Wait until element visible LOB    //form[@id='rh-iz-job-search-quick-search-form']/div/div[2]/div/div/ul/li${Random_number}
    ##${Random_number}=    Set Variable If    ${Loc_status}!= 'True'    [1]    ${Random_number}
    Run Keyword If    ${Loc_status}!= 'False'    Click Element    //form[@id='rh-iz-job-search-quick-search-form']/div/div[2]/div/div/ul/li${Random_number}
    ####---> Select Locations from Drop-Down List
    ##Wait Until Keyword Succeeds    1min    5sec    Click Element    //form[@id='rh-iz-job-search-quick-search-form']/div/div[2]/div/div/ul/li${Random_number}
    ${Location}=    Set Variable If    ${Loc_status}!= 'False'    //form[@id='rh-iz-job-search-quick-search-form']/div/div[2]/div/div/ul/li${Random_number}
    #${Location}=    Get Text    //form[@id='rh-iz-job-search-quick-search-form']/div/div[2]/div/div/ul/li${Random_number}
    Log    Location selected is ===> ${Location}
    sleep    ${sleep_Time_5s}
    ####---> Select Search Button
    Click Element    ${SearchJobs_button_IZ}
    ${Search_Jobs_Status}=    Wait until element visible LOB    //input[@id='job-search-keywords']
    Run Keyword If    ${Search_Jobs_Status}!= 'True'    PageFail    ${Locale}:${FName} ${LName} - Search Jobs
    ...    ELSE    PagePass    ${Locale}:${FName} ${LName} - Search Jobs
    ####---> Verify Job Titles are Displayed
    ${Job_count_String}=    Verify Job Titles Displayed    ${Locale}    ${FName}    ${LName}    ${Keyword}    ${Location}
    [Return]    ${Job_count_String}

Focus and Sim Click
    [Arguments]    ${Job_seekers_dropdown}
    Log    Keyword Function: *** Focus and Sim Click ***
    Mouse Over    ${Job_seekers_dropdown}
    Focus    ${Job_seekers_dropdown}
    Wait until element visible LOB    xpath=//a[${LO_SUBMIT_YOUR_CV}]
    Simulate    xpath=//a[${LO_SUBMIT_YOUR_CV}]    click

Click On Element
    [Arguments]    ${Job_seekers_dropdown}
    Log    Keyword Function: *** Click On Element ***
    Mouse Over    ${Job_seekers_dropdown}    #Mouse over Job Seeker dropdown to dispay submenu
    Wait until element visible LOB    xpath=//a[${LO_SUBMIT_YOUR_CV}]    #Wait until 'Submit Your CV' is visible
    Click Element    xpath=//a[${LO_SUBMIT_YOUR_CV}]    #Click on 'Submit Your CV'
    Sleep    ${sleep_Time_10s}

Find Country Data
    [Arguments]    ${Country}    ${FileName}
    Log    Keyword Function: *** Find Country Data ***
    ${FileContents}    Get File    ${CURDIR}\\Datafiles\\${FileName}    #Specify dataFile location
    ${NumLinesDataFile}    Get Line Count    ${FileContents}    # Count lines in the dataFile
    : FOR    ${LineNumber}    IN RANGE    1    ${NumLinesDataFile}    #Start FOR loop delimeted by number of lines in the dataFile
    \    ${Line}=    Get Line    ${FileContents}    ${LineNumber}    # Get line from the dataFile
    \    @{DataWords}=    Split String    ${Line}    ;
    \    Log    Country is: ${Country}
    \    Log    DataWord0 is: @{DataWords}[0]
    \    ${CountryData}=    Set Variable    @{DataWords}[0]
    \    Exit For Loop If    '${Country.upper()}'=='${CountryData.upper()}'
    [Return]    ${LineNumber}

Set Data Country
    [Arguments]    ${CountryLineNumber}
    ${ToLineNumber}=    Evaluate    ${CountryLineNumber}+${1}    #Add 1 since line counting starts at 0 instead of 1
    [Return]    ${CountryLineNumber}    ${ToLineNumber}

Set Data All Countries
    [Arguments]    ${CountryLineNumber}
    ${StartLineNumber}=    Set Variable    1
    [Return]    ${StartLineNumber}    ${CountryLineNumber}

Verify Job Titles Displayed
    [Arguments]    ${Locale}    ${FName}    ${LName}    ${Keyword}    ${Location}
    Log    Keyword Function: *** Verify Job Titles Displayed ***
    #### ----> If results are returned, get count of Job Titles
    ${Job_count_String1}=    Set Variable    0
    ${Job_count_String1}=    Get Matching xpath count    //table[@class="job-search-results"]/tbody/tr[@data-pg='1']/td[@class="JobTitle"]
    #### ----> For Countries AU/JP/CH, select multiple Locations just to test this scenario
    ${Job_count_String1}=    Run Keyword If    '${Locale}'=='AU' or '${Locale}'=='CH-EN'    Select Multiple Locations    ${Locale}    ${FName}    ${LName}
    ...    ${Keyword}    ${Location}
    Log    Job Count is ===> ${Job_count_String1}
    #### ----> If no results or only 1 job title, just clear search criteria, select Search Job button and assign new job count
    ${Job_count_String2}=    Run Keyword If    ${Job_count_String1}< 2    Clear Search Criteria and Search
    Log    New Job Count is ===> ${Job_count_String2}
    ${Job_count_String}=    Set Variable If    ${Job_count_String1}< 2    ${Job_count_String2}    ${Job_count_String1}
    #### ----> Verify Job Titles are displayed
    ${JobTitle_status}=    Wait until element visible LOB    ${JobTitle_to_Apply}
    Run Keyword If    ${JobTitle_status}!= 'True'    ObjectFail    Job Title    ${Locale}:${FName} ${LName} / ${Keyword} ${Location} - Job Title Display
    ...    ELSE    ObjectPass    ${Locale}:${FName} ${LName} - Job Title Display
    Sleep    ${sleep_Time}
    #####---> Verify Header and Footer are displayed in job results page
    Verify Header and Footer    ${FName}    ${LName}    ${Locale}    Job Results Page
    [Return]    ${Job_count_String}

Select Multiple Locations
    [Arguments]    ${Locale}    ${FName}    ${LName}    ${Keyword}    ${Location}
    Log    Keyword Function: *** Select Multiple Locations ***
    Click Element    xpath=//ul[@class='chosen-choices']
    Sleep    ${sleep_Time}
    #### ----> Select first location
    ${Loc1_status}=    Wait until element visible LOB    xpath=//div[@id='job_search_location_chosen']/div/ul/li[2]
    Run Keyword If    ${Loc1_status}!='False'    Click Element    xpath=//div[@id='job_search_location_chosen']/div/ul/li[2]
    ${Loc1_Attr}=    Run Keyword If    ${Loc1_status}!='False'    Get Element Attribute    //div[@id='job_search_location_chosen']/div/ul/li[2]@data-orig
    Run Keyword If    ${Loc1_status}!='False'    Log    Location 1 is ==> ${Loc1_Attr}
    Sleep    ${sleep_Time}
    #### ----> Select second location
    Click Element    xpath=//ul[@class='chosen-choices']
    ${Loc2_status}=    Wait until element visible LOB    xpath=//div[@id='job_search_location_chosen']/div/ul/li[3]
    Run Keyword If    ${Loc2_status}!='False'    Click Element    xpath=//div[@id='job_search_location_chosen']/div/ul/li[3]
    ${Loc2_Attr}=    Run Keyword If    ${Loc2_status}!='False'    Get Element Attribute    //div[@id='job_search_location_chosen']/div/ul/li[3]@data-orig
    Run Keyword If    ${Loc2_status}!='False'    Log    Location 2 is ==> ${Loc2_Attr}
    Sleep    ${sleep_Time}
    #### ----> Select third location
    Click Element    xpath=//ul[@class='chosen-choices']
    ${Loc3_status}=    Wait until element visible LOB    xpath=//div[@id='job_search_location_chosen']/div/ul/li[4]
    Run Keyword If    ${Loc3_status}!='False'    Click Element    xpath=//div[@id='job_search_location_chosen']/div/ul/li[4]
    ${Loc3_Attr}=    Run Keyword If    ${Loc3_status}!='False'    Get Element Attribute    //div[@id='job_search_location_chosen']/div/ul/li[4]@data-orig
    Run Keyword If    ${Loc3_status}!='False'    Log    Location 3 is ==> ${Loc3_Attr}
    Sleep    ${sleep_Time}
    #### ----> Click Search Jobs button
    Click Element    ${SearchJobs_button_results_page}
    #### ----> If results are returned, get count of Job Titles
    ${Job_count_String1}=    Set Variable    0
    ${Job_count_String1}=    Get Matching xpath count    //table[@class="job-search-results"]/tbody/tr[@data-pg='1']/td[@class="JobTitle"]
    Log    Job Count from Multiple Locations is ===> ${Job_count_String1}
    [Return]    ${Job_count_String1}

Verify Header and Footer
    [Arguments]    ${FName}    ${LName}    ${Locale}    ${Page}
    Log    Keyword Function: *** Verify Header and Footer ***
    ${Header_status}=    Wait until element visible LOB    ${Page_Header}
    Run Keyword If    ${Header_status}!= 'True'    ObjectFail    ${Page} Header    ${Locale} ${FName} ${LName}
    ...    ELSE    ObjectPass    ${Locale} ${FName} ${LName} - ${Page} Header
    ${Footer_status}=    Wait until element visible LOB    ${Footer}
    Run Keyword If    ${Footer_status}!= 'True'    ObjectFail    ${Page} Footer    ${Locale} ${FName} ${LName}
    ...    ELSE    ObjectPass    ${Locale} ${FName} ${LName} - ${Page} Footer

Job Apply and Send CV Link
    [Arguments]    ${Locale}    ${FName}    ${LName}    ${Phone}    ${ResumeLink}    ${Job_count_String}
    Log    Keyword Function: *** Job Apply and Send CV Link ***
    #### ----> Select Job Title
    ${Job_Title}=    Select Job Title    ${Job_count_String}    ${Fname}    ${Lname}    ${Locale}
    ####---> Verify Header and Footer are displayed in job details page
    Verify Header and Footer    ${FName}    ${LName}    ${Locale}    Job Details Page
    #### ----> Check for similar jobs column on the right-hand side-bar.
    Check for Similar Jobs    ${FName}    ${LName}    ${Locale}
    #### ----> Select Email to a Friend on job details page and send email
    ##Email To Friend    ${FName}    ${LName}    ${Locale}    ${Job_Title}
    #### ----> Select Apply Now button and fill out required fields
    ${SubmitCV_Win_Title}=    Select Apply Now    ${Locale}    ${Fname}    ${LName}    ${Email}    ${Phone}
    ...    ${ResumeLink}    Link
    Log    SubmitCV_Win_Title --- > ${SubmitCV_Win_Title}
    ####---> Select 'Send link to your online CV' and enter URL
    Send Online CV Link    ${ResumeLink}    ${Locale}
    #### ----> Check Terms Checkbox
    Check Terms Checkbox    ${Locale}
    ####---> For Germany, select Personal Data checkbox
    Run Keyword If    '${Locale}'=='DE'    Check Personal Data Checkbox
    ####---> Select Terms of Use link if it exists and verify url is correct.
    ${Terms_status}=    Wait until element visible LOB    xpath=//a[@href='${LO_TERMS_OF_USE}']
    Run Keyword If    ${Terms_status}=='True'    Verify Terms of Use Link    ${FName}    ${LName}    ${Locale}    ${SubmitCV_Win_Title}
    ####---> Select Privacy Policy link if it exists and verify url is correct.
    ${Privacy_Policy_status}=    Wait until element visible LOB    xpath=//a[@href='${LO_PRIVACY_POLICY}']
    Run Keyword If    ${Privacy_Policy_status}=='True'    Verify Privacy Policy Link    ${FName}    ${LName}    ${Locale}    ${SubmitCV_Win_Title}
    ####---> If Personal Data links exists, select Personal Data link and verify url
    ${Personal_Data_status}=    Wait until element visible LOB    ${Personal_Data_Link}
    Run Keyword If    ${Personal_Data_status}=='True'    Verify Personal Data Link    ${FName}    ${LName}    ${Locale}    ${SubmitCV_Win_Title}
    #### ----> Return to Upload Resume window to click Submit button.
    Sleep    ${sleep_Time}
    Select Window    title=${SubmitCV_Win_Title}    #Select window Submit CV
    Sleep    ${sleep_Time}
    #### ----> Click Submit button and verify confirmation text page appears
    ##Run Keyword If    '${SubmitCV.upper()}'=='YES'    Submit Resume    ${FName}    ${LName}    ${Locale}
    ##Sleep    ${sleep_Time}
    #### ----> Go Back to previous page and get window title
    ##Go Back
    ##${current_win_title}=    Get Title
    ##Log    current_win_title= ${current_win_title}
    ##Run Keyword If    "${current_win_title}"=="${SubmitCV_Win_Title}"    Go Back    # Go Back a second time if still on Resume Upload window
    ##Sleep    ${sleep_Time}

Job Apply and Upload Resume
    [Arguments]    ${Locale}    ${FName}    ${LName}    ${Phone}    ${ResumeFile}
    Log    Keyword Function: *** Job Apply and Upload Resume ***
    #### ----> Select Search Jobs button in from Home page and get count of job titles returned
    Click Element    ${SearchJobs_button_IZ}
    #### ----> Verify Job Titles are displayed
    ${JobTitle_status}=    Wait until element visible LOB    ${JobTitle_to_Apply}
    Run Keyword If    ${JobTitle_status}!= 'True'    ObjectFail    Job Title    ${Locale}:${FName} ${LName} - Job Title Display
    ...    ELSE    ObjectPass    ${Locale}:${FName} ${LName} - Job Title Display
    ${Job_count_String1}=    Set Variable    0
    ${Job_count_String1}=    Get Matching xpath count    //table[@class="job-search-results"]/tbody/tr[@data-pg='1']/td[@class="JobTitle"]
    Log    Job Count is ===> ${Job_count_String1}
    Sleep    ${sleep_Time}
    #### ----> Select Job Title
    Select Job Title    ${Job_count_String1}    ${Fname}    ${Lname}    ${Locale}
    #### ----> Select Apply Now button and fill out required fields
    ${SubmitCV_Win_Title}=    Select Apply Now    ${Locale}    ${Fname}    ${LName}    ${Email}    ${Phone}
    ...    ${ResumeFile}    Upload
    Log    SubmitCV_Win_Title --- > ${SubmitCV_Win_Title}
    ####---> Select Upload Your CV
    Upload Your CV File    ${Locale}    ${ResumeFile}    ${FName}    ${LName}
    #### ----> Check Terms Checkbox
    Check Terms Checkbox    ${Locale}
    ####---> For Germany, select Personal Data checkbox
    Run Keyword If    '${Locale}'=='DE'    Check Personal Data Checkbox
    Sleep    ${sleep_Time}
    #### ----> Click Submit button and verify confirmation text page appears
    ##Run Keyword If    '${SubmitCV.upper()}'=='YES'    Submit Resume    ${FName}    ${LName}    ${Locale}
    ##Submit Resume    ${FName}    ${LName}    ${Locale}
    ####---> Return to Home Page
    ##Sleep    ${sleep_Time}
    ##Go Back
    ##${current_win_title}=    Get Title
    ##Log    current_win_title =${current_win_title}
    ##Run Keyword If    "${current_win_title}"=="${SubmitCV_Win_Title}"    Go Back    # Go Back a second time if still on Resume Upload window
    ##Sleep    ${sleep_Time}

Job Apply and Select Dropbox
    [Arguments]    ${Locale}    ${FName}    ${LName}    ${Phone}    ${ResumeDropbox}
    Log    Keyword Function: *** Job Apply and Select Dropbox ***
    #### ----> Select Search Jobs button in from Home page and get count of job titles returned
    Click Element    ${SearchJobs_button_IZ}
    #### ----> Verify Job Titles are displayed
    ${JobTitle_status}=    Wait until element visible LOB    ${JobTitle_to_Apply}
    Run Keyword If    ${JobTitle_status}!= 'True'    ObjectFail    Job Title    ${Locale}:${FName} ${LName} - Job Title Display
    ...    ELSE    ObjectPass    ${Locale}:${FName} ${LName} - Job Title Display
    Sleep    ${sleep_Time}
    ${Job_count_String1}=    Set Variable    0
    ${Job_count_String1}=    Get Matching xpath count    //table[@class="job-search-results"]/tbody/tr[@data-pg='1']/td[@class="JobTitle"]
    Log    Job Count is ===> ${Job_count_String1}
    Sleep    ${sleep_Time}
    #### ----> Select Job Title
    Select Job Title    ${Job_count_String1}    ${Fname}    ${Lname}    ${Locale}
    #### ----> Select Apply Now button and fill out required fields
    ${SubmitCV_Win_Title}=    Select Apply Now    ${Locale}    ${Fname}    ${LName}    ${Email}    ${Phone}
    ...    ${ResumeDropbox}    Dropbox
    Log    SubmitCV_Win_Title --- > ${SubmitCV_Win_Title}
    ####---> Select Dropbox
    Use CV from Dropbox    ${FName}    ${LName}    ${Email}    ${Phone}    ${ResumeDropbox}    ${Locale}
    ...    ${SubmitCV_Win_Title}
    #### ----> Check Terms Checkbox3
    Check Terms Checkbox    ${Locale}
    #######---> For Germany, select Personal Data checkbox
    Run Keyword If    '${Locale}'=='DE'    Check Personal Data Checkbox
    #### ----> Click Submit button and verify confirmation text page appears
    ##Run Keyword If    '${SubmitCV.upper()}'=='YES'    Submit Resume    ${FName}    ${LName}    ${Locale}
    ####---> Return to Home Page
    ##Sleep    ${sleep_Time}
    ##Go Back
    ##${current_win_title}=    Get Title
    ##Log    current_win_title =${current_win_title}
    ##Run Keyword If    "${current_win_title}"=="${SubmitCV_Win_Title}"    Go Back    # Go Back a second time if still on Resume Upload window
    ##Sleep    ${sleep_Time}

Job Apply and Select LinkedIn
    [Arguments]    ${Locale}    ${FName}    ${LName}    ${Phone}    ${ResumeLinkedIn}
    Log    Keyword Function: *** Job Apply and Select LinkedIn ***
    #### ----> Select Search Jobs button in from Home page and get count of job titles returned
    Click Element    ${SearchJobs_button_IZ}
    #### ----> Verify Job Titles are displayed
    ${JobTitle_status}=    Wait until element visible LOB    ${JobTitle_to_Apply}
    Run Keyword If    ${JobTitle_status}!= 'True'    ObjectFail    Job Title    ${Locale}:${FName} ${LName} - Job Title Display
    ...    ELSE    ObjectPass    ${Locale}:${FName} ${LName} - Job Title Display
    Sleep    ${sleep_Time}
    ${Job_count_String1}=    Set Variable    0
    ${Job_count_String1}=    Get Matching xpath count    //table[@class="job-search-results"]/tbody/tr[@data-pg='1']/td[@class="JobTitle"]
    Log    Job Count is ===> ${Job_count_String1}
    Sleep    ${sleep_Time}
    #### ----> Select Job Title
    Select Job Title    ${Job_count_String1}    ${Fname}    ${Lname}    ${Locale}
    #### ----> Select Apply Now button and fill out required fields
    ${SubmitCV_Win_Title}=    Select Apply Now    ${Locale}    ${Fname}    ${LName}    ${Email}    ${Phone}
    ...    ${ResumeDropbox}    Dropbox
    Log    SubmitCV_Win_Title --- > ${SubmitCV_Win_Title}
    ####---> Select LinkedIn
    Use CV from LinkedIn    ${FName}    ${LName}    ${Email}    ${Phone}    ${ResumeLinkedIn}    ${Locale}
    ...    ${SubmitCV_Win_Title}
    #### ----> Check Terms Checkbox
    Check Terms Checkbox    ${Locale}
    #######---> For Germany, select Personal Data checkbox
    Run Keyword If    '${Locale}'=='DE'    Check Personal Data Checkbox
    #### ----> Click Submit button and verify confirmation text page appears
    Run Keyword If    '${SubmitCV.upper()}'=='YES'    Submit Resume    ${FName}    ${LName}    ${Locale}
    ####---> Return to Home Page
    Sleep    ${sleep_Time}
    Go Back
    ${current_win_title}=    Get Title
    Log    current_win_title =${current_win_title}
    Run Keyword If    "${current_win_title}"=="${SubmitCV_Win_Title}"    Go Back    # Go Back a second time if still on Resume Upload window

Upload Resume Details
    [Arguments]    ${Fname}    ${Lname}    ${Email}    ${Phone}    ${Comments}
    Wait until element visible LOB    ${First_name}
    ${SubmitCV_Win_Title}=    Get Title
    Input Text    ${First_name}    ${Fname}
    Input Text    ${Last_name}    ${Lname}
    Input Text    ${Email_Address}    ${Email}
    Input Text    ${Phone_No}    ${Phone}
    Input Text    ${Comments_loc}    ${Comments}
    #####---> Select Available From, Specialisation, Job Type and Office from drop-down lists
    Click Element    ${Available_from}
    Run Keyword If    "${Browser.upper()}"=="FF"    Double Click Element    ${Available_from_option}
    ...    ELSE    Click Element    ${Available_from_option}
    Sleep    ${sleep_Time}
    Click Element    ${Specialisation_list}
    Run Keyword If    "${Browser.upper()}"=="FF"    Double Click Element    ${Specialisation_list_option}
    ...    ELSE    Click Element    ${Specialisation_list_option}
    Sleep    ${sleep_Time}
    Click Element    ${Jobtype_list}
    Run Keyword If    "${Browser.upper()}"=="FF"    Double Click Element    ${Jobtype_list_option}
    ...    ELSE    Click Element    ${Jobtype_list_option}
    Sleep    ${sleep_Time}
    Click Element    ${Office_list}
    Run Keyword If    "${Browser.upper()}"=="FF"    Double Click Element    ${Office_list_option}
    ...    ELSE    Click Element    ${Office_list_option}
    Sleep    ${sleep_Time}
    [Return]    ${SubmitCV_Win_Title}

Send CV Link
    [Arguments]    ${Locale}    ${FName}    ${LName}    ${Phone}    ${ResumeLink}
    Log    Keyword Function: *** Send CV Link ***
    Sleep    ${sleep_Time}    ####---> Select Submit CV under Job Seekers menu    ##Run Keyword If    "${ENV.upper()}"=="QA" and '${Locale}'=='JP-JA' or '${Locale}'=='JP-EN'    Submit CV QS1    ${Fname}
    ...    # ${Lname}    ${Locale}    ${Browser}    ##...    # ELSE    Submit CV
    ...    # ${Fname}    ${Lname}    ${Locale}
    Submit CV    ${Fname}    ${Lname}    ${Locale}
    ####---> Enter Upload Your CV Details
    ${SubmitCV_Win_Title}=    Upload Your CV Details    ${FName}    ${LName}    ${Email}    ${Phone}    ${Locale}
    ...    Link
    Log    SubmitCV_Win_Title = ${SubmitCV_Win_Title}
    ####---> Select 'Send link to your online CV' and enter URL
    Send Online CV Link    ${ResumeLink}    ${Locale}
    #### ----> Check Terms Checkbox
    Check Terms Checkbox    ${Locale}
    #####---> For Germany, select Personal Data checkbox
    Run Keyword If    '${Locale}'=='DE'    Check Personal Data Checkbox
    ####---> Select Terms of Use link if it exists and verify url is correct.
    ${Terms_status}=    Wait until element visible LOB    xpath=//a[@href='${LO_TERMS_OF_USE}']
    Run Keyword If    ${Terms_status}=='True'    Verify Terms of Use Link    ${FName}    ${LName}    ${Locale}    ${SubmitCV_Win_Title}
    ####---> Select Privacy Policy link and verify url is correct.
    ${Privacy_Policy_status}=    Wait until element visible LOB    xpath=//a[@href='${LO_PRIVACY_POLICY}']
    Run Keyword If    ${Privacy_Policy_status}== 'True'    Verify Privacy Policy Link    ${FName}    ${LName}    ${Locale}    ${SubmitCV_Win_Title}
    ####---> If Personal Data link exists, select Personal Data link and verify url
    ${Personal_Data_status}=    Wait until element visible LOB    ${Personal_Data_Link}
    Run Keyword If    ${Personal_Data_status}=='True'    Verify Personal Data Link    ${FName}    ${LName}    ${Locale}    ${SubmitCV_Win_Title}
    #### ----> Return to Upload Resume window to click Submit button.
    Sleep    ${sleep_Time}
    Select Window    title=${SubmitCV_Win_Title}    #Select window Submit CV
    #### ----> Click Submit button and verify confirmation text page appears
    Run Keyword If    '${SubmitCV.upper()}'=='YES'    Submit Resume CV Upload    ${FName}    ${LName}    ${Locale}    ${ResumeLink}
    [Return]    ${SubmitCV_Win_Title}

Upload Your CV
    [Arguments]    ${Locale}    ${FName}    ${LName}    ${Phone}    ${ResumeFile}
    Log    Keyword Function: *** Upload Your CV ***
    Sleep    ${sleep_Time}    ####---> Select Submit CV under Job Seekers menu    ##Run Keyword If    "${ENV.upper()}"=="QA" and '${Locale}'=='JP-JA' or '${Locale}'=='JP-EN'    Submit CV QS1    ${Fname}
    ...    # ${Lname}    ${Locale}    ${Browser}    ##...    # ELSE    Submit CV
    ...    # ${Fname}    ${Lname}    ${Locale}
    Submit CV    ${Fname}    ${Lname}    ${Locale}
    ####---> Enter Upload Your CV Details
    ${SubmitCV_Win_Title}=    Upload Your CV Details    ${FName}    ${LName}    ${Email}    ${Phone}    ${Locale}
    ...    Upload
    Log    SubmitCV_Win_Title = ${SubmitCV_Win_Title}
    ####---> Select 'Upload Your CV' and enter file path
    Upload Your CV File    ${Locale}    ${ResumeFile}    ${FName}    ${LName}
    #### ----> Check Terms Checkbox
    Check Terms Checkbox    ${Locale}
    ####---> For Germany, select Personal Data checkbox
    Run Keyword If    '${Locale}'=='DE'    Check Personal Data Checkbox
    Select Window    title=${SubmitCV_Win_Title}    #Select window Submit CV
    Sleep    ${sleep_Time}
    #### ----> Click Submit button and verify confirmation text page appears
    Run Keyword If    '${SubmitCV.upper()}'=='YES'    Submit Resume CV Upload    ${FName}    ${LName}    ${Locale}    ${ResumeFile}

Select Dropbox
    [Arguments]    ${Locale}    ${FName}    ${LName}    ${Phone}    ${ResumeDropbox}
    Log    Keyword Function: *** Select Dropbox ***
    Sleep    ${sleep_Time}    ####---> Select Submit CV under Job Seekers menu    ##Run Keyword If    "${ENV.upper()}"=="QA" and '${Locale}'=='JP-JA' or '${Locale}'=='JP-EN'    Submit CV QS1    ${Fname}
    ...    # ${Lname}    ${Locale}    ${Browser}    ##...    # ELSE    Submit CV
    ...    # ${Fname}    ${Lname}    ${Locale}
    Submit CV    ${Fname}    ${Lname}    ${Locale}
    #####---> Enter Upload Your CV Details
    ${SubmitCV_Win_Title}=    Upload Your CV Details    ${FName}    ${LName}    ${Email}    ${Phone}    ${Locale}
    ...    DropBox
    Log    SubmitCV_Win_Title = ${SubmitCV_Win_Title}
    ####---> Select 'Use CV from your Dropbox' and enter file name
    Use CV from Dropbox    ${FName}    ${LName}    ${Email}    ${Phone}    ${ResumeDropbox}    ${Locale}
    ...    ${SubmitCV_Win_Title}
    #### ----> Check Terms Checkbox
    Check Terms Checkbox    ${Locale}
    ####---> For Germany, select Personal Data checkbox
    Run Keyword If    '${Locale}'=='DE'    Check Personal Data Checkbox
    #### ----> Click Submit button and verify confirmation text page appears
    ##Run Keyword If    '${SubmitCV.upper()}'=='YES'    Submit Resume CV Upload    ${FName}    ${LName}    ${Locale}    ${ResumeDropbox}
    Submit Resume CV Upload    ${FName}    ${LName}    ${Locale}    ${ResumeDropbox}

Return to Home Page from RU
    [Arguments]    ${SubmitCV_Win_Title}
    Log    Keyword Function: *** Return to Home Page from RU ***
    ####---> Return to Home Page from Resume Upload page
    Sleep    ${sleep_Time}
    Go Back
    Sleep    ${sleep_Time}
    ${current_win_title}=    Get Title
    Log    current_win_title = ${current_win_title}
    Run Keyword If    "${current_win_title}"=="${SubmitCV_Win_Title}"    Go Back    # Go Back a second time if still on Resume Upload window
    Sleep    ${sleep_Time}
    [Return]    ${SubmitCV_Win_Title}

Check Terms Checkbox
    [Arguments]    ${Locale}
    Log    Keyword Function: *** Check Terms Checkbox ***
    Click Element    ${LO_TERMS_OF_USE_CHKBOX}
    Sleep    ${sleep_Time}

Check Personal Data Checkbox
    Click Element    ${Personal_data_check}    # for Germany only
    Sleep    ${sleep_Time}

Verify Terms of Use Link
    [Arguments]    ${FName}    ${LName}    ${Locale}    ${SubmitCV_Win_Title}
    Log    Keyword Function: *** Verify Terms of Use Link ***
    #####---> Select Terms of Use link and verify url is correct.
    Sleep    ${sleep_Time}
    Click Element    xpath=//a[@href='${LO_TERMS_OF_USE}']
    Sleep    ${sleep_Time_5s}
    List Windows
    ${window_titles}=    Get Window Titles
    ${window1}=    set variable    ${window_titles[0]}    # Resume Upload
    ${window2}=    set variable    ${window_titles[1]}    #Terms of Use
    Sleep    ${sleep_Time}
    ####---> Select window Terms of Use. Check which window is Resume Upload title
    Run Keyword If    "${window2}" != "${SubmitCV_Win_Title}" and "${window2}" !="undefined"    Select Window    title=${window2}
    ...    ELSE    Select Window    title=${window1}
    Sleep    ${sleep_Time}
    ${Terms_URL}    Set Variable If    '${ENV.upper()}'=='PRD'    ${LO_TERMS_URL}    ${LO_TERMS_QA_URL}
    ${url_location}=    Get Location
    Log    Current URL location is --- > ${url_location}
    Log    Param LO_TERMS_URL location is --- > ${Terms_URL}
    Sleep    ${sleep_Time}
    Run Keyword If    '${url_location}'=='${Terms_URL}'    PagePass    ${Locale}:${FName} ${LName} - Terms of Use
    ...    ELSE    PageFail2    ${Locale}:${FName} ${LName} - Terms of Use
    Sleep    ${sleep_Time}
    Close Window    # Close privacy policy window.    For Brazil, Go Back
    ####---> Return to Main WIndow again
    Select Window

Verify Privacy Policy Link
    [Arguments]    ${FName}    ${LName}    ${Locale}    ${SubmitCV_Win_Title}
    Log    Keyword Function: *** Verify Privacy Policy Link ***
    Sleep    ${sleep_Time}
    #####---> Return to Upload Resume window and Select Privacy Policy link.    Verify url is correct.
    ${window_titles}=    Get Window Titles
    ${window1}=    set variable    ${window_titles[0]}    # Resume Upload
    ##${window2}=    set variable    ${window_titles[1]}    # Terms of Use
    Sleep    ${sleep_Time}
    Select Window    title=${window1}    # Select window Resume Upload
    Sleep    ${sleep_Time}
    Click Element    //a[@href='${LO_PRIVACY_POLICY}']
    Sleep    ${sleep_Time}
    List Windows
    ${window_titles}=    Get Window Titles
    ${window1}=    set variable    ${window_titles[0]}    # Resume Upload
    ${window2}=    set variable    ${window_titles[1]}    # Privacy Policy
    Sleep    ${sleep_Time}
    ####----> Select Privacy Statement window
    Run Keyword If    "${window2}" != "${SubmitCV_Win_Title}" and "${window2}" !="undefined"    Select Window    title=${window2}
    ...    ELSE    Select Window    title=${window1}
    #Select Window    title=Privacy statement
    Sleep    ${sleep_Time}
    ${Privacy_URL}    Set Variable If    '${ENV.upper()}'=='PRD'    ${LO_PRIVACY_URL}    ${LO_PRIVACY_QA_URL}
    ${url_location}=    Get Location
    Sleep    ${sleep_Time}
    Log    Current URL location is --- > ${url_location}
    Log    LO PRIVACY URL param s --- > ${Privacy_URL}
    Run Keyword If    '${url_location}'=='${Privacy_URL}'    PagePass    ${Locale}:${FName} ${LName} - Privacy Statement
    ...    ELSE    PageFail2    ${Locale}:${FName} ${LName} - Privacy Statement
    ####----> Return to Resume Upload Window title to resume rest of script
    ${Resume_Upload_Window}=    Set Variable If    '${window2}' != '${SubmitCV_Win_Title}'    ${window1}    ${window2}
    #${Resume_Upload_Window}=    Set Variable If    '${Locale}' == 'BR'    ${LO_RESUME_UPLD_WIN}
    Close Window    # Close privacy policy window.
    ####---> Return to Main WIndow again
    Select Window
    [Return]    ${Resume_Upload_Window}

Verify Personal Data Link
    [Arguments]    ${FName}    ${LName}    ${Locale}    ${SubmitCV_Win_Title}
    Log    Keyword Function: *** Verify Personal Data Link ***
    Sleep    ${sleep_Time}
    # for Germany only
    #####---> Return to Upload Resume window and Select Privacy Policy link.    Verify url is correct.
    ${window_titles}=    Get Window Titles
    ${window1}=    set variable    ${window_titles[0]}    # Resume Upload
    #${window2}=    set variable    ${window_titles[1]}    # Privacy Policy
    Select Window    title=${window1}    # Select window Resume Upload
    Sleep    ${sleep_Time}
    Click Element    ${Personal_Data_Link}
    Sleep    ${sleep_Time}
    ${window_titles}=    Get Window Titles
    ${window1}=    set variable    ${window_titles[0]}    # Resume Upload
    ${window2}=    set variable    ${window_titles[1]}    # Personal Data window
    #####---> Select window personenbezogenen Daten(Personal Data)
    Run Keyword If    "${window2}" != "${SubmitCV_Win_Title}"    Select Window    title=${window2}
    ...    ELSE    Select Window    title=${window1}    # Select window personenbezogenen Daten(Personal Data)
    ${Personal_URL}    Set Variable If    '${ENV.upper()}'=='PRD'    ${LO_PERSONAL_DATA_URL}    ${LO_PERSONAL_DATA_QA_URL}
    ${url_location}=    Get Location
    Log    Current URL location is --- > ${url_location}
    Log    LO_PERSONAL_DATA_URL param s --- > ${Personal_URL}
    Run Keyword If    '${url_location}'=='${Personal_URL}'    PagePass    ${Locale}:${FName} ${LName} - Personal Data
    ...    ELSE    PageFail2    ${Locale}:${FName} ${LName} - Personal Data
    ####----> Return Resume Upload Window title to resume rest of script
    ##${Resume_Upload_Window}=    Set Variable If    '${window2}' != '${LO_RESUME_UPLD_WIN}'    ${window1}    ${window2}
    Close Window    # Close personal data window
    ####---> Return to Main WIndow again
    Select Window

Select Subscribe Link
    [Arguments]    ${FName}    ${LName}    ${Locale}    ${Browser}
    Log    Keyword Function: *** Select Subscribe Link ***
    #####---> Select subscribe link
    Click Element    ${Subscribe}
    Sleep    ${sleep_Time_5s}
    ##@{window_titles}=    Get Window Titles
    ##${window1}=    set variable    ${window_titles[0]}    # Job Search
    ##${window2}=    set variable    ${window_titles[1]}    # Subscribe window
    ##Select Window    title=${window2}
    ##Wait until element visible LOB    xpath=//h1[@id='feedTitleText']
    #####---> Get window titles and verify subscribe page
    #Wait Until Keyword Succeeds    2min    5sec    Get Win Titles
    Run Keyword If    "${Browser.upper()}"=="IE"    Verify Subscribe Page IE    ${FName}    ${LName}    ${Locale}
    Run Keyword If    "${Browser.upper()}"=="FF"    Verify Subscribe Page FF    ${FName}    ${LName}    ${Locale}
    ##Run Keyword If    "${Browser.upper()}"=="GC"    Verify Subscribe Page GC    ${FName}    ${LName}    ${Locale}
    Sleep    ${sleep_Time_5s}

Verify Subscribe Page IE
    [Arguments]    ${FName}    ${LName}    ${Locale}
    Log    Keyword Function: *** Get Subscribe Win Titles IE ***
    #####--->    Get primary window Title first
    ${prim_window_title}=    Get Title
    #####--->    Select Subscribe window
    ##Wait Until Keyword Succeeds    2min    5sec    Select Window    new
    Select Window    new
    Sleep    ${sleep_Time}
    ${window_title}=    Get Title
    #####---> Verify subscribe page
    Sleep    ${sleep_Time}
    ${url_location}=    Get Location
    Log    Current URL Location is --- > ${url_location}
    ##${Subscribe_URL_Status}=    Location Should Contain    'job-search/rss?keywords'
    Run keyword if    '${window_title}'!='Robert Half Job Search'    PageFail    ${Locale}:${FName} ${LName} - Subscribe
    ...    ELSE    PagePass    ${Locale}:${FName} ${LName} - Subscribe
    Sleep    ${sleep_Time}
    Close Window
    Sleep    ${sleep_Time}
    #####--->    Return to Primary window
    Select Window
    Sleep    ${sleep_Time}
    ${return_window_title}=    Get Title
    Run keyword if    '${return_window_title}'!='${prim_window_title}'    PageFail    ${Locale}:${FName} ${LName} - Job Search Results
    ...    ELSE    PagePass    ${Locale}:${FName} ${LName} - Job Search Results
    Sleep    ${sleep_Time}

Verify Subscribe Page FF
    [Arguments]    ${FName}    ${LName}    ${Locale}
    Log    Keyword Function: *** Get Subscribe Win Titles FF ***
    Sleep    ${sleep_Time}
    #####--->    Get primary window Title first
    ${prim_window_title}=    Get Title
    #####---> List all window titles
    Sleep    ${sleep_Time}
    @{window_titles}=    Wait Until Keyword Succeeds    20s    5s    Get Window Titles
    ${window1}=    set variable    ${window_titles[0]}
    ${window2}=    set variable    ${window_titles[1]}
    Log    Window title 1 is --- > ${window1}
    Log    Window title 2 is --- > ${window2}
    Sleep    ${sleep_Time}
    Run Keyword If    "${window2}" != "${prim_window_title}"    Select Window    title=${window2}
    ...    ELSE    Select Window    title=${window1}
    #####---> Verify subscribe page
    Sleep    ${sleep_Time}
    ${select_window_title}=    Get Title
    ${url_location}=    Get Location
    Log    URL Location is --- > ${url_location}
    Run keyword if    '${select_window_title}'!='Robert Half Job Search'    PageFail    ${Locale}:${FName} ${LName} - Subscribe
    ...    ELSE    PagePass    ${Locale}:${FName} ${LName} - Subscribe
    Sleep    ${sleep_Time}
    #####---> Close current Subscribe Feed window and select primary window
    Close Window
    Sleep    ${sleep_Time}
    Select Window

Select Order By
    [Arguments]    ${FName}    ${LName}    ${Locale}
    Log    Keyword Function: *** Select Order By ***
    #####---> Sort by Job Title Ascending
    Order by Job Title Ascending    ${FName}    ${LName}    ${Locale}
    #####---> Sort by Salary Descending (exclude Germany)
    Order by Salary Descending    ${FName}    ${LName}    ${Locale}
    #####---> Sort by Location Ascending
    Order by Location Ascending    ${FName}    ${LName}    ${Locale}
    #####---> Sort by Date Descending
    Order by Date Descending    ${FName}    ${LName}    ${Locale}

Order by Job Title Ascending
    [Arguments]    ${FName}    ${LName}    ${Locale}
    Log    Keyword Function: *** Order by Title Ascending ***
    Click Element    ${Order_By}
    ${TitleAsc_status}=    Wait until element visible LOB    ${Title_Field_Asc}
    Run keyword if    ${TitleAsc_status}!='False'    Click Element    ${Title_Field_Asc}
    ...    ELSE    ObjectFail    Title Field Asc    ${Locale} ${FName} ${LName}
    Sleep    ${sleep_Time_15s}

Order by Salary Descending
    [Arguments]    ${FName}    ${LName}    ${Locale}
    Log    Keyword Function: *** Order by Salary Descending ***
    #####---> Sort by Salary Descending
    Click Element    ${Order_By}
    ${SalaryDesc_status}=    Wait until element visible LOB    ${Salary_Field_Desc}
    Run keyword if    ${SalaryDesc_status}!='False'    Click Element    ${Salary_Field_Desc}
    ...    ELSE    ObjectFail    Salary Field Desc    ${Locale} ${FName} ${LName}
    Sleep    ${sleep_Time_15s}

Order by Location Ascending
    [Arguments]    ${FName}    ${LName}    ${Locale}
    Log    Keyword Function: *** Sort by Location Ascending ***
    #####---> Sort by Location Ascending
    Click Element    ${Order_By}
    ${LocAsc_status}=    Wait until element visible LOB    ${Location_Field_Asc}
    Run keyword if    ${LocAsc_status}!='False'    Click Element    ${Location_Field_Asc}
    ...    ELSE    ObjectFail    Location Field Asc    ${Locale} ${FName} ${LName}
    Sleep    ${sleep_Time_15s}

Order by Date Descending
    [Arguments]    ${FName}    ${LName}    ${Locale}
    Log    Keyword Function: *** Order by Date Descending ***
    #####---> Sort by Date Descending
    Click Element    ${Order_By}
    ${DateDesc_status}=    Wait until element visible LOB    ${Date_Field_Desc}
    Run keyword if    ${DateDesc_status}!='False'    Click Element    ${Date_Field_Desc}
    ...    ELSE    ObjectFail    Date Field Desc    ${Locale} ${FName} ${LName}
    Sleep    ${sleep_Time_15s}

Validate Filters
    [Arguments]    ${FName}    ${LName}    ${Locale}    ${Job_count_String}
    Log    Keyword Function: *** Validate Filters ***
    #####---> First clear search criteria in order to test all the filters
    Clear Element Text    ${JobSearch_Keywords}
    Sleep    ${sleep_Time}
    ####---> If location is displayed, clear it
    ${LocChoiceClose_status}=    Wait until element visible LOB    ${Loc_Search_Choice_Close}
    Run keyword if    ${LocChoiceClose_status}!='False'    Click Element    ${Loc_Search_Choice_Close}
    Sleep    ${sleep_Time}
    Click Element    ${SearchJobs_button_results_page}
    Sleep    ${sleep_Time_10s}
    #####---> Select Job Classification filter, except Austria and Switerland DE because Job Class contains '...'
    ##${JobClass_status}=    Wait until element visible LOB    xpath=//div[@class='lobcode']
    Run Keyword If    '${Locale}'!='AT' and '${Locale}'!='CH-DE'    Select Job Class Filter    ${Job_count_String}    ${Fname}    ${Lname}    ${Locale}
    Sleep    ${sleep_Time}
    #####---> Select Job Type filter
    ${JobType_status}=    Wait until element visible LOB    xpath=//div[@class='jobtypes']
    Run keyword if    ${JobType_status}!='False'    Select Job Type Filter    ${Job_count_String}    ${Fname}    ${Lname}    ${Locale}
    Sleep    ${sleep_Time}
    #####---> Select Locations Filter
    ##${Locations_status}=    Wait until element visible LOB    xpath=//div[@class='cities']
    Select Locations Filter    ${Job_count_String}    ${Fname}    ${Lname}    ${Locale}
    Sleep    ${sleep_Time}
    #####---> Select Employment Types
    ##${Employment_Type_status}=    Wait until element visible LOB    xpath=//div[@class='emptypes']
    Select Employment Types Filter    ${Job_count_String}    ${Fname}    ${Lname}    ${Locale}
    Sleep    ${sleep_Time}
    #####---> Select Posted Within
    ##${Posted_Within_status}=    Wait until element visible LOB    xpath=//div[@class='daysold']
    Select Posted Within Filter    ${Job_count_String}    ${Fname}    ${Lname}    ${Locale}
    Sleep    ${sleep_Time}

Select Job Class Filter
    [Arguments]    ${Job_count_String}    ${Fname}    ${Lname}    ${Locale}
    Log    Keyword Function: *** Select Job Class Filter ***
    ####---> Get filter text from Data Key attribute
    ##${Job_Class_Data_Key_Attr}=    Get Element Attribute    //div[@class='lobcode']/ul/li[1]@data-key
    ${Job_Class_Text}=    Get Text    //div[@class='lobcode']/ul/li[1]
    ####---> For Switerland in English, just assign 'Finance & Accounting' since Job Class filter text is in Swiss
    ##${Job_Class_Text}=    Set Variable If    '${Locale}'=='CH-EN'    Finance & Accounting    ${Job_Class_Text}
    Log    Job Class Data Key Attr====> ${Job_Class_Text}
    #####---> Assign Data Key Attribute text to Job_Class_Filter before calling Validate Job Classification function
    ${Job_Class_Filter_Text}=    Set Variable    ${Job_Class_Text}
    #####---> Now click on selected Job Classification
    Click Element    ${Job_Classification}
    Sleep    ${sleep_Time_5s}
    #####---> Call Validate Job Classification function
    ## Commented out Job Class Filter validation because Job Class tags keeps changing depending on business config
    ##Validate Job Class Filter    ${Job_count_String}    ${Job_Class_Filter_Text}    ${Fname}    ${Lname}    ${Locale}
    #####---> Select All Job Classifications
    ${AllJobClass_status}=    Wait until element visible LOB    ${Job_Classification_all}
    Run keyword if    ${AllJobClass_status}!='False'    Click Element    ${Job_Classification_all}

Validate Job Class Filter
    [Arguments]    ${Job_count_String}    ${Job_Class_Filter_Text}    ${Fname}    ${Lname}    ${Locale}
    Log    Keyword Function: *** Validate Job Class Filter ***
    #####---> Get Job Classfication filter text
    Log    Job Class Filter Text====> ${Job_Class_Filter_Text}
    ${Line}=    Set Variable    ${Job_Class_Filter_Text}
    #####---> Extract Text without the number count
    @{DataWords}=    Split String    ${Line}    ${SPACE}(
    log    String1: @{DataWords}[0]
    log    String2: @{DataWords}[1]
    ${Job_Class_Filter_Text}=    Set Variable    @{DataWords}[0]
    Log    Parsed Job Class Filter Text====> ${Job_Class_Filter_Text}
    #####---> Randomly select a Job Title and verify that the Job Classfication matches the filter
    ${random_number}=    Evaluate    random.sample(range(1,9),1)    random
    Sleep    ${sleep_Time_5s}
    ${Job_Class_Text}=    Get Text    //tr${random_number}/td/div[1]${LO_JOB_CLASS_FILTER}
    ${Job_Class_Result}=    Set Variable If    '${Job_Class_Text}'!='${Job_Class_Filter_Text}'    False    True
    #####---> Randomly select a second Job Title and verify that the Job Classfication matches the filter
    ${random_number}=    Evaluate    random.sample(range(1,9),1)    random
    Sleep    ${sleep_Time_5s}
    ${Job_Class_Text}=    Get Text    //tr${random_number}/td/div[1]${LO_JOB_CLASS_FILTER}
    ${Job_Class_Result}=    Set Variable If    '${Job_Class_Text}'!='${Job_Class_Filter_Text}'    False    True
    #####---> Randomly select a third Job Title and verify that the Job Classfication matches the filter
    ${random_number}=    Evaluate    random.sample(range(1,9),1)    random
    Sleep    ${sleep_Time_5s}
    ${Job_Class_Text}=    Get Text    //tr${random_number}/td/div[1]${LO_JOB_CLASS_FILTER}
    ${Job_Class_Result}=    Set Variable If    '${Job_Class_Text}'!='${Job_Class_Filter_Text}'    False    True
    Run Keyword if    '${Job_Class_Result}'!='True'    PageFail2    ${Locale}:${FName} ${LName} - Job Class Filter ${Job_Class_Filter_Text}
    ...    ELSE    PagePass    ${Locale}:${FName} ${LName} - Job Class Filter

Select Job Type Filter
    [Arguments]    ${Job_count_String}    ${Fname}    ${Lname}    ${Locale}
    Log    Keyword Function: *** Select Job Type Filter ***
    ####---> Get filter text from Data Key attribute
    ${Job_Type_Data_Key_Attr}=    Get Element Attribute    //div[@class='jobtypes']/ul/li[1]@data-key
    Log    Job Type Data Key Attr====> ${Job_Type_Data_Key_Attr}
    #####---> Assign Data Key Attribute text to Job_Type_Filter before calling Validate Job Classification function
    ${Job_Type_Filter}=    Set Variable    ${Job_Type_Data_Key_Attr}
    #####---> Now click on selected Job Type
    Sleep    ${sleep_Time}
    Click Element    ${Job_Types}
    Sleep    ${sleep_Time}
    Validate Job Type Filter    ${Job_count_String}    ${Fname}    ${Lname}    ${Locale}
    #####---> Select All Job Types
    ${AllJobType_status}=    Wait until element visible LOB    ${Job_Types_all}
    Run keyword if    ${AllJobType_status}!='False'    Click Element    ${Job_Types_all}
    ...    ELSE    ObjectFail    Show All Job Types    ${Locale} ${FName} ${LName}

Validate Job Type Filter
    [Arguments]    ${Job_count_String}    ${Fname}    ${Lname}    ${Locale}
    Log    Keyword Function: *** Validate Job Type Filter ***
    ${Job_Type_Count}=    Set Variable    0
    ${Job_Type_Count}=    Get Matching xpath count    //table[@class="job-search-results"]/tbody/tr[@data-pg='1']/td[@class="JobTitle"]
    Log    Job Type Count====> ${Job_Type_Count}
    Run Keyword if    ${Job_Type_Count}== 0    PageFail2    ${Locale}:${FName} ${LName} - Job Type Filter
    ...    ELSE    PagePass    ${Locale}:${FName} ${LName} - Job Type Filter

Select Locations Filter
    [Arguments]    ${Job_count_String}    ${Fname}    ${Lname}    ${Locale}
    Log    Keyword Function: *** Select Location Filter ***
    ####---> Get filter text from Data Key attribute
    ##${Locations_Data_Key_Attr}=    Get Element Attribute    //div[@class='cities']/ul/li[1]@data-key
    ${Locations_Filter_Text}=    Get Text    //div[@class='cities']/ul/li[1]
    ##Log    Loc Data Key Attr====> ${Locations_Data_Key_Attr}
    Log    Locations Filter Text====> ${Locations_Filter_Text}
    #####---> Assign Locations Filter text to Locations_Filter before calling Validate Locations function
    ${Locations_Filter}=    Set Variable    ${Locations_Filter_Text}
    #####---> Now click on selected Locations
    Click Element    ${Locations}
    Sleep    ${sleep_Time_5s}
    #####---> Call Validate Locations function
    ## Commented out Validate Locations Filter because Locations tags keeps changing depending on business config
    ##Validate Locations Filter    ${Job_count_String}    ${Locations_Filter}    ${Fname}    ${Lname}    ${Locale}
    #####---> Select All Locations
    ${AllLocations_status}=    Wait until element visible LOB    ${Locations_all}
    Run keyword if    ${AllLocations_status}!='False'    Click Element    ${Locations_all}
    ...    ELSE    ObjectFail    Show All Locations    ${Locale} ${FName} ${LName}

Validate Locations Filter
    [Arguments]    ${Job_count_String}    ${Locations_Filter}    ${Fname}    ${Lname}    ${Locale}
    Log    Keyword Function: *** Validate Locations Filter ***
    # For AU and DE
    #####---> Get Locations filter text
    Log    Locations Text====> ${Locations_Filter}
    ${Line}=    Set Variable    ${Locations_Filter}
    #####---> Extract Text without the number count
    @{DataWords}=    Split String    ${Line}    ${SPACE}(
    log    String1: @{DataWords}[0]
    log    String2: @{DataWords}[1]
    ${Locations_Filter_Text}=    Set Variable    @{DataWords}[0]
    Log    Parsed Locations Filter Text====> ${Locations_Filter_Text}
    #####---> Randomly select a Job Title and verify that the Location matches the filter
    ${random_number}=    Evaluate    random.sample(range(1,9),1)    random
    ${Locations_Text}=    Get Text    //tr${random_number}/td/div[1]${LO_LOCATIONS_FILTER}
    Log    Locations====> ${Locations_Text}
    ${Locations_Result}=    Set Variable If    '${Locations_Text}'!='${Locations_Filter}'    False    True
    #####---> Randomly select a second Job Title and verify that the Location matches the filter
    ${random_number}=    Evaluate    random.sample(range(1,9),1)    random
    ${Locations_Text}=    Get Text    //tr${random_number}/td/div[1]${LO_LOCATIONS_FILTER}
    Log    Locations====> ${Locations_Text}
    ${Locations_Result}=    Set Variable If    '${Locations_Text}'!='${Locations_Filter}'    False    True
    #####---> Randomly select a third Job Title and verify that the Location matches the filter
    ${random_number}=    Evaluate    random.sample(range(1,9),1)    random
    ${Locations_Text}=    Get Text    //tr${random_number}/td/div[1]${LO_LOCATIONS_FILTER}
    Log    Locations====> ${Locations_Text}
    ${Locations_Result}=    Set Variable If    '${Locations_Text}'!='${Locations_Filter_Text}'    False    True
    Run Keyword if    '${Locations_Result}'!='True'    PageFail2    ${Locale}:${FName} ${LName} - Locations Filter
    ...    ELSE    PagePass    ${Locale}:${FName} ${LName} - Locations Filter

Select Job Title
    [Arguments]    ${Job_count_String}    ${Fname}    ${Lname}    ${Locale}
    Log    Keyword Function: *** Select Job Title ***
    ${random_number}=    Evaluate    random.sample(range(1, ${Job_count_String}),1)    random
    #wait until element is visible    xpath=//button[@type='button' and contains(text(),'Apply') ]    timeout=40
    ${Job_Title}=    Get Text    //table[@class="job-search-results"]/tbody/tr[position()=@{random_number}[0]]/td[@class="JobTitle"]/a
    ##${Job_Title}=    Get Text    //table[@class="job-search-results"]/tbody/tr[position()=1]/td[@class="JobTitle"]/a
    Log    Job Title to apply is --- > ${Job_Title}
    #####--->    Select Job Title
    Wait Until Keyword Succeeds    1min    5sec    Click Element    //table[@class="job-search-results"]/tbody/tr[position()=@{random_number}[0]]/td[@class="JobTitle"]/a
    ##Click Element    //table[@class="job-search-results"]/tbody/tr[position()=1]/td[@class="JobTitle"]/a
    Sleep    ${sleep_Time}
    #####--->    Wait until Job Title Detail page appears with Apply Now button
    ${JobTitle_Det_status}=    Wait until element visible LOB    ${Button_Apply_Now}
    Run Keyword If    ${JobTitle_Det_status}!='True'    PageFail    ${Locale}:${FName} ${LName} - Job Title Detail
    ...    ELSE    PagePass    ${Locale}:${FName} ${LName} - Job Title Detail
    Sleep    ${sleep_Time}
    Verify Job Title    ${Fname}    ${Lname}    ${Locale}    ${Job_Title}
    [Return]    ${Job_Title}

Verify Job Title
    [Arguments]    ${Fname}    ${Lname}    ${Locale}    ${Job_Title}
    Log    Keyword Function: *** Verify Job Title ***
    Sleep    ${sleep_Time}
    ${Job_Title_Detail}=    Get Text    //div[@class='l-content full full-width']/h1
    Log    Job Title detail to apply is --- > ${Job_Title_Detail}
    Sleep    ${sleep_Time}
    Run Keyword If    "${Job_Title_Detail}"!="${Job_Title}"    PageFail2    ${Locale}:${FName} ${LName} - Job Title
    ...    ELSE    PagePass    ${Locale}:${FName} ${LName} - Job Title
    Sleep    ${sleep_Time}

Select Employment Types Filter
    [Arguments]    ${Job_count_String}    ${Fname}    ${Lname}    ${Locale}
    Log    Keyword Function: *** Select Employment Types Filter ***
    ####---> Get filter text from Data Key attribute
    ##${EmpTypes_Data_Key_Attr}=    Get Element Attribute    //div[@class='emptypes']/ul/li[1]@data-key
    ${EmpType_Text}=    Get Text    //div[@class='emptypes']/ul/li[1]
    ####---> For Switerland in English, just assign 'Permanent' since Job Class filter text is in Swiss
    ##${EmpType_Text}=    Set Variable If    '${Locale}'=='CH-EN'    Permanent    ${EmpType_Text}
    Log    EmpTypes Text ====> ${EmpType_Text}
    #####---> Assign EmpType_Filter before calling Validate EmpType function
    ${EmpTypes_Filter}=    Set Variable    ${EmpType_Text}
    #####---> Now click on selected Employment TYpes
    Click Element    ${EmpTypes}
    Sleep    ${sleep_Time}
    #####---> Call Validate EmpTypes function
    ## Commented out Validate Employment Types Filter because tags keep changing based on business config
    ##Validate Employment Types Filter    ${Job_count_String}    ${EmpTypes_Filter}    ${Fname}    ${Lname}    ${Locale}
    #####---> Select All Employment Types
    ${EmpTypes_All_Status}=    Wait until element visible LOB    ${EmpTypes_all}
    Run Keyword If    ${EmpTypes_All_Status}!= 'True'    ObjectFail    Employee Types All Button    ${Locale} ${FName} ${LName}
    ...    ELSE    Click Element    ${EmpTypes_all}

Validate Employment Types Filter
    [Arguments]    ${Job_count_String}    ${EmpTypes_Filter}    ${Fname}    ${Lname}    ${Locale}
    Log    Keyword Function: *** Validate Employment Types Filter ***
    # For AU and DE
    #####---> Get EmpTypes filter text
    Log    EmpTypes====> ${EmpTypes_Filter}
    ${Line}=    Set Variable    ${EmpTypes_Filter}
    #####---> Extract Text without the number count
    @{DataWords}=    Split String    ${Line}    ${SPACE}(
    log    String1: @{DataWords}[0]
    log    String2: @{DataWords}[1]
    ${EmpTypes_Filter_Text}=    Set Variable    @{DataWords}[0]
    Log    Parsed Employment Type Filter Text====> ${EmpTypes_Filter_Text}
    #####---> Randomly select a Job Title and verify that the Employment Type matches the filter
    ${random_number}=    Evaluate    random.sample(range(1,9),1)    random
    Sleep    ${sleep_Time}
    ${EmpTypes_Text}=    Get Text    //tr${random_number}/td/div[1]${LO_EMP_TYPES_FILTER}
    ${EmpTypes_Result}=    Set Variable If    '${EmpTypes_Text}'!='${EmpTypes_Filter_Text}'    False    True
    #####---> Randomly select a second Job Title and verify that the Location matches the filter
    ${random_number}=    Evaluate    random.sample(range(1,9),1)    random
    ${EmpTypes_Text}=    Get Text    //tr${random_number}/td/div[1]${LO_EMP_TYPES_FILTER}
    ${EmpTypes_Result}=    Set Variable If    '${EmpTypes_Text}'!='${EmpTypes_Filter_Text}'    False    True
    #####---> Randomly select a third Job Title and verify that the Location matches the filter
    ${random_number}=    Evaluate    random.sample(range(1,9),1)    random
    ${EmpTypes_Text}=    Get Text    //tr${random_number}/td/div[1]${LO_EMP_TYPES_FILTER}
    ${EmpTypes_Result}=    Set Variable If    '${EmpTypes_Text}'!='${EmpTypes_Filter_Text}'    False    True
    Run Keyword if    '${EmpTypes_Result}'!='True'    PageFail2    ${Locale}:${FName} ${LName} - EmpTypes Filter
    ...    ELSE    PagePass    ${Locale}:${FName} ${LName} - EmpTypes Filter

Select Posted Within Filter
    [Arguments]    ${Job_count_String}    ${Fname}    ${Lname}    ${Locale}
    Log    Keyword Function: *** Select Posted Within Filter ***
    ####---> Get filter text from Data Key attribute
    ${PostedWthn_Text_Max}=    Get Text    //div[@class='daysold']/ul/li[1]    # Last 60 Days
    ${PostedWthn_Text_Min}=    Get Text    //div[@class='daysold']/ul/li[3]    # Last 7 Days
    Log    PostedWthn Data Key Attr====> ${PostedWthn_Text_Max}
    Log    PostedWthn Data Key Attr====> ${PostedWthn_Text_Min}
    #####---> Now click on selected Posted Within
    Click Element    ${PostedWthn}    # Last 60 Days
    Sleep    ${sleep_Time}
    #####---> Call Validate PostedWthn function
    Validate Posted Within Filter    ${Job_count_String}    ${PostedWthn_Text_Max}    ${PostedWthn_Text_Min}    ${Fname}    ${Lname}    ${Locale}
    #####---> Select Show All Posted Jobs
    ${AllPosted_status}=    Wait until element visible LOB    ${PostedWthn_all}
    Run keyword if    ${AllPosted_status}!='False'    Click Element    ${PostedWthn_all}
    ...    ELSE    ObjectFail    Show All Posted Within    ${Locale} ${FName} ${LName}

Validate Posted Within Filter
    [Arguments]    ${Job_count_String}    ${PostedWthn_Text_Max}    ${PostedWthn_Text_Min}    ${Fname}    ${Lname}    ${Locale}
    Log    Keyword Function: *** Validate Posted Withing Filter ***
    #####---> Get PostedWthn filter text
    Log    PostedWthn====> ${PostedWthn_Text_Max}
    ${Line}=    Set Variable    ${PostedWthn_Text_Max}
    #####---> Extract Number of Records from the Filter Text
    @{DataWords}=    Split String    ${Line}    (
    log    String1: @{DataWords}[0]
    log    String2: @{DataWords}[1]
    ${Line}=    Set Variable    @{DataWords}[1]
    @{DataWords}=    Split String    ${Line}    )
    log    String1: @{DataWords}[0]
    log    String2: @{DataWords}[1]
    ${Posted_Within_Filter_Count}=    Set Variable    @{DataWords}[0]
    #####---> Extract Number of Records from the Results Count Text
    ${Line}=    Get Text    //div[@class='job-search-result-counter pg-1 first']
    @{DataWords}=    Split String    ${Line}
    log    String1: @{DataWords}[1]
    log    String2: @{DataWords}[5]
    ##${Results_Text_Count}=    Set Variable    @{DataWords}[5]
    ${Results_Text_Count}=    Set Variable if    '@{DataWords}[1]' == ':'    @{DataWords}[6]    @{DataWords}[5]
    Run Keyword If    ${Posted_Within_Filter_Count}<501    Less Than 501 Compare    ${Posted_Within_Filter_Count}    ${Results_Text_Count}    ${Locale}    ${FName}
    ...    ${LName}
    ...    ELSE    Over 500 Compare    ${Posted_Within_Filter_Count}    ${Results_Text_Count}    ${Locale}    ${FName}
    ...    ${LName}

Less Than 501 Compare
    [Arguments]    ${Posted_Within_Filter_Count}    ${Results_Text_Count}    ${Locale}    ${FName}    ${LName}
    Log    Keyword Function: *** Less Than 501 Compare ***
    #####---> If Results Count is 500 or less, then the counts should match, otherwise fail
    Log    PostedWthnCount ====> ${Posted_Within_Filter_Count} should match Results_Text_Count ====> ${Results_Text_Count} if less than 501
    Run Keyword If    '${Posted_Within_Filter_Count}'!='${Results_Text_Count}'    pagefail2    ${Locale}:${FName} ${LName} - Posted Within Filter
    ...    ELSE    PagePass    ${Locale}:${FName} ${LName} - Posted Within Filter

Over 500 Compare
    [Arguments]    ${Posted_Within_Filter_Count}    ${Results_Text_Count}    ${Locale}    ${FName}    ${LName}
    Log    Keyword Function: *** Over 500 Compare ***
    #####---> If Results Count is 501 or more, then the results count should be 500, otherwise fail
    Log    Results_Text_Count ====> ${Results_Text_Count} should equal 500 if over 500
    Run Keyword If    '${Results_Text_Count}'!='500'    pagefail2    ${Locale}:${FName} ${LName} - Posted Within Filter
    ...    ELSE    PagePass    ${Locale}:${FName} ${LName} - Posted Within Filter

Clear Search Criteria and Search
    Log    Keyword Function: *** Clear Search Criteria and Search ***
    Sleep    ${sleep_Time_10s}
    Clear Element Text    ${JobSearch_Keywords}
    Sleep    ${sleep_Time}
    #####---> Clear Location in City/State field.
    ${Location_Count}=    Set Variable    0
    ${Location_Count}=    Get Matching xpath count    //li[@class='search-choice']
    Run Keyword If    ${Location_Count}>1    Clear Multiple Locations    ${Location_Count}
    ${Loc_Search_Choice_Close_status1}=    Wait until element visible LOB    ${Loc_Search_Choice_Close}
    Run Keyword If    ${Loc_Search_Choice_Close_status1}!= 'False'    Click Element    ${Loc_Search_Choice_Close}
    Sleep    ${sleep_Time}
    Click Element    ${SearchJobs_button_results_page}
    Sleep    ${sleep_Time}
    #### ----> If results are returned, get count of Job Titles
    ${Job_count_String}=    Set Variable    0
    ${Job_count_String}=    Get Matching xpath count    //table[@class="job-search-results"]/tbody/tr[@data-pg='1']/td[@class="JobTitle"]
    [Return]    ${Job_count_String}

Clear Multiple Locations
    [Arguments]    ${Location_Count}
    Log    Keyword Function: *** Clear Multiple Locations ***
    ${Location_Count1}=    Evaluate    ${Location_Count}+${1}
    : FOR    ${INDEX}    IN RANGE    1    ${Location_Count1}
    \    Log    IndexNumber=====${INDEX}
    \    ${Loc_Search_Choice_Close_status}=    Wait until element visible LOB    ${Loc_Search_Choice_Close}
    \    Run Keyword If    ${Loc_Search_Choice_Close_status}!= 'False'    Click Element    ${Loc_Search_Choice_Close}

Check for Similar Jobs
    [Arguments]    ${Fname}    ${Lname}    ${Locale}
    Log    Keyword Function: *** Check for Similar Jobs ***
    ${SimilarJob_status}=    Wait until element visible LOB    ${Similar_Jobs}
    Run Keyword If    ${SimilarJob_status}!= 'True'    ObjectFail    Similar Jobs Header    ${Locale} ${FName} ${LName}
    ...    ELSE    ObjectPass    ${Locale} ${FName} ${LName} - Similar Jobs Header
    ####----> Get count of job titles to ensure some are displayed
    ${Similar_Jobs_Count}=    Get Matching xpath count    //span[@class='JobTitle']
    Run Keyword If    ${Similar_Jobs_Count} ==0    ObjectFail    Similar Jobs Titles    ${Locale} ${FName} ${LName}
    ...    ELSE    ObjectPass    ${Locale} ${FName} ${LName} - Similar Jobs Titles    ##${SimJobs_First_Page_status}=    Wait until element visible LOB    ${SimJobs_First_Page}
    ...    ##Run Keyword If    ${SimJobs_First_Page_status}!= 'True'    #ObjectFail    Similar Jobs First Page Button    ${Locale} ${FName} ${LName}    # ELSE
    ...    # ObjectPass    ##...    #${Locale} ${FName} ${LName} - Similar Jobs First Page Button    ##${SimJobs_Prev_Page_status}=    Wait until element visible LOB    ${SimJobs_Prev_Page}
    ...    ##Run Keyword If    ${SimJobs_Prev_Page_status}!= 'True'    #ObjectFail    Similar Jobs Prev Page Button    ${Locale} ${FName} ${LName}    # ELSE
    ...    # ObjectPass    ##...    #${Locale} ${FName} ${LName} - Similar Jobs Prev Button    ##${SimJobs_Next_Page_status}=    Wait until element visible LOB    ${SimJobs_Next_Page}
    ...    ##Run Keyword If    ${SimJobs_Next_Page_status}!= 'True'    #ObjectFail    Similar Jobs Next Page Button    ${Locale} ${FName} ${LName}    # ELSE
    ...    # ObjectPass    ##...    #${Locale} ${FName} ${LName} - Similar Jobs Next Page Button    ##${SimJobs_Last_Page_status}=    Wait until element visible LOB    ${SimJobs_Last_Page}
    ...    ##Run Keyword If    ${SimJobs_Last_Page_status}!= 'True'    #ObjectFail    Similar Jobs Last Page Button    ${Locale} ${FName} ${LName}    # ELSE
    ...    # ObjectPass
    ##...    ${Locale} ${FName} ${LName} - Similar Jobs Last Page Button

Email to Friend
    [Arguments]    ${Fname}    ${Lname}    ${Locale}    ${Job_Title}
    Log    Keyword Function: *** Email to Friend ***
    #####---> Click on 'Email a Friend'
    ${EmailToFriend_status}=    Wait until element visible LOB    ${Email_To_Friend}
    Run Keyword If    ${EmailToFriend_status}!= 'True'    ObjectFail    Email To Friend    ${Locale} ${FName} ${LName}
    ...    ELSE    ObjectPass    ${Locale} ${FName} ${LName} - Email To Friend
    Click Element    ${Email_To_Friend}
    Sleep    ${sleep_Time}
    #####---> Validate email form is visible before entering text
    ${window_titles}=    Get Window Titles
    ${job_details_window}=    set variable    ${window_titles[0]}    # Job Details
    Log    Window title 1 is --- > ${job_details_window}
    ${YourName_status}=    Wait until element visible LOB    xpath=//input[@id='your-name']
    Run keyword if    ${YourName_status}!='True'    ObjectFail    EmailToFriend Form
    ...    ELSE    Input Email To Friend    ${Locale}
    Sleep    ${sleep_Time_5s}
    #####---> Click Send button
    Click Element    //input[@class='rh-button']    ##//form[@id='email-job-form']/div[6]/input
    Sleep    ${sleep_Time}
    ${Email_To_Friend_Conf_status}=    Wait until element visible LOB    ${Email_To_Friend_Conf}
    Run Keyword If    ${Email_To_Friend_Conf_status}!= 'True'    ObjectFail    Email To Friend Confirmation    ${Locale} ${FName} ${LName}
    ...    ELSE    ObjectPass    ${Locale} ${FName} ${LName} - Email To Friend Confirmation
    #####---> Close Confirmation message
    Sleep    ${sleep_Time}
    Click Element    ${Email_Conf_Close}

Input Email to Friend
    [Arguments]    ${Locale}
    Log    Keyword Function: *** Input Email to Friend ***
    Input text    //input[@id='your-name']    IZ Testing
    Input text    //input[@id='your-email']    IZTest@abc.net
    Input text    //input[@id='friend-name']    IZ Test ${Locale}
    Input text    //input[@id='friend-email']    ${email}    #ben.rayos@roberthalf.com
    Run Keyword If    '${Locale}'=='UK' OR '${Locale}'=='DE'    Input text    //input[@id='friend-email']    UKEmailToFriend@mailinator.com

Confirm Email Received from Friend
    Log    Keyword Function: *** Confirm Email Received from Friend ***
    ####---> Login to email account and check reciept
    ##Open Excel    ${CURDIR}\\Datafiles\\Login_User_PW.xls
    ##${Data}=    Read Cell Data By Name    Login_User_PW    A2
    ##${Login_User}=    Set Variable    ${Data}
    ##${Data}=    Read Cell Data By Name    Login_User_PW    B2
    ##${Login_PW}=    Set Variable    ${Data}
    ##${password}=    Get Decrypted Password    ${Login_PW}
    ##Set Global Variable    ${LO_PRD_URL}    ${Data}
    Open Mailbox    outlook.office365.com    user=benray01@roberthalf.com    password=Mypw4win_02
    #### ---> Check for email
    Sleep    ${sleep_Time_5s}
    ${Latest_Email}=    Wait for Mail    fromEmail=IZTest@abc.net    timeout=10    ##toEmail=ben.rayos@roberthalf.com    status=UNSEEN
    ${Latest_Email_No}=    Convert To Integer    ${Latest_Email}
    ${parts}=    Walk Multipart Email    ${Latest_Email}
    ${to}=    Get Multipart Field    To
    ${from}=    Get Multipart Field    From
    ${subject}=    Get Multipart Field    Subject
    ${Email_Body}=    Get Email Body    ${Latest_Email_No}
    @{Email_Link}=    Get Links from EMail    ${Latest_Email_No}
    ${links_count}=    Get Length    ${Email_Link}
    ${Link}=    Set Variable    @{Email_Link}[0]
    ##Should Contain    ${Email_Body}    ${Job_Title}
    Go To    ${Link}
    ##Select Window    new
    ${JobDesc_status}=    Wait until element visible LOB    xpath=//div[@class='job-description']
    Run Keyword If    ${JobDesc_status}!= 'True'    ObjectFail    Email Friend Job Description    ${Latest_Email_No} ${Link}
    ...    ELSE    ObjectPass    ${Latest_Email_No} ${Link} - Email Friend Job Description
    Sleep    ${sleep_Time_5s}
    ####---> Return to primary window
    ##Go Back
    Mark as Read
    Close Mailbox

Return to RH Home Page
    [Arguments]    ${Fname}    ${Lname}    ${Locale}    ${Upload_Resume_Window}
    Log    Keyword Function: *** Return to RH Home Page ***
    Select Window    title=${Upload_Resume_Window}    #Select window Resume Upload
    ${url_location}=    Get Location
    Log    Current URL is====> ${url_location}
    #####---> Select Home Page element
    Sleep    ${sleep_Time}
    #Double Click Element    ${Robert_Half_Home}
    Click Element    //div[@id='block-block-56']/div/p/a[@class='site-logo']
    Sleep    ${sleep_Time}
    #####---> Setup Home Page URL depending on environment
    ${Home_URL}=    Set Variable If    "${ENV.upper()}"=="QA"    ${LO_QA_URL}    "${ENV.upper()}"=="PRD"    ${LO_PRD_URL}
    Log    Home URL is====> ${Home_URL}
    ${url_location}=    Get Location
    Log    Current URL is====> ${url_location}
    Sleep    ${sleep_Time}
    #####---> Verify Home page is returned
    Run Keyword If    '${url_location}'=='${Home_URL}'    PagePass    ${Locale}:${FName} ${LName} - Home Page
    ...    ELSE    PageFail    ${Locale}:${FName} ${LName} - Home Page
    Sleep    ${sleep_Time}

Select Apply Now
    [Arguments]    ${Locale}    ${Fname}    ${Lname}    ${Email}    ${Phone}    ${ResumeLink}
    ...    ${ResumeType}
    Log    Keyword Function: *** Select Apply Now ***
    #####---> Scroll to the top of the page to select Apply Now button
    Execute Javascript    window.scrollTo(0,0)
    Sleep    ${sleep_Time}
    #####---> Click Apply Now and input required fields
    Click Element    ${Button_Apply_Now}
    Wait until element visible LOB    ${LO_FIRST_NAME}
    ${Comments_status}=    Wait until element visible LOB    xpath=//textarea[@id='${LO_COMMENTS}']
    ${SubmitCV_Win_Title}=    Get Title
    Input Text    xpath=//input[@id='${LO_FIRST_NAME}']    ${Fname} ${Locale} JA ${ResumeType}
    Input Text    xpath=//input[@id='${LO_LAST_NAME}']    ${Lname}
    Input Text    xpath=//input[@id='${LO_EMAIL_ADDR}']    ${Email}
    Run Keyword If    '${Locale}'=='BR'    Input text    xpath=//input[@id='${LO_EMAIL_ADDR}']    BRCandidateConfirmation@mailinator.com
    Input Text    xpath=//input[@id='${LO_PHONE_NO}']    ${Phone}
    Run Keyword If    ${Comments_status}!='False'    Input Text    xpath=//textarea[@id='${LO_COMMENTS}']    ${Comments} ${Locale} JA ${ResumeType}
    Sleep    ${sleep_Time}
    #####---> Select Available From
    Click Element    xpath=//select[@id='${LO_AVAILABLE_FROM}']
    Run Keyword If    "${Browser.upper()}"=="FF"    Double Click Element    xpath=//select[@id='${LO_AVAILABLE_FROM}']/option[4]
    ...    ELSE    Click Element    xpath=//select[@id='${LO_AVAILABLE_FROM}']/option[4]
    Sleep    ${sleep_Time}
    [Return]    ${SubmitCV_Win_Title}

Send Online CV Link
    [Arguments]    ${ResumeLink}    ${Locale}
    Log    Keyword Function: *** Send Online CV Link ***
    #####---> Select 'Send link to your online CV'
    Click Element    xpath=${LO_CV_LINK}
    Sleep    ${sleep_Time}
    ##Input Text    ${Resume_URL}    ${ResumeLink}
    Input Text    xpath=//input[@id='${LO_RESUME_URL}']    ${ResumeLink}
    Sleep    ${sleep_Time}

Upload Your CV File
    [Arguments]    ${Locale}    ${ResumeFile}    ${FName}    ${LName}
    #####---> Select 'Upload your CV' and choose the file
    Log    Keyword Function: *** Upload Your CV File ***
    ##Click Element    ${Upload_your_CV}
    Click Element    xpath=${LO_UPLOAD_CV}
    ##${UploadFile_status}=    Wait until element visible LOB    xpath=//input[@id='${LO_UPLD_RESUME_FILE}']
    ${UploadFile_status}=    Wait until element visible LOB    xpath=//input[contains(@id,'edit-rh-resume-upload-resume')]
    Run Keyword If    ${UploadFile_status}!= 'True'    ObjectFail    Upload File Path    ${Locale} ${FName} ${LName}
    ...    ELSE    Choose File    xpath=//input[@id='${LO_UPLD_RESUME_FILE}']    ${ResumeFile}
    Sleep    ${sleep_Time}

Use CV from Dropbox
    [Arguments]    ${Fname}    ${Lname}    ${Email}    ${Phone}    ${ResumeDropbox}    ${Locale}
    ...    ${SubmitCV_Win_Title}
    Log    Keyword Function: *** Use CV from Dropbox ***
    ####---> Select 'Use CV from Dropbox'
    ##Click Element    //div[@id='upload_section_dropbox_title']
    Click Element    xpath=${LO_USE_DROPBOX}
    Sleep    ${sleep_Time}
    ${window_titles}=    Get Window Titles
    ${window1}=    set variable    ${window_titles[0]}    #Sign Into DropBox
    ${window2}=    set variable    ${window_titles[1]}    #Resume Upload
    Sleep    ${sleep_Time}
    ####---> Select 'Sign into Dropbox' window by checking Windows2 is not the Resume Upload window
    Run Keyword If    "${window2}" != "${SubmitCV_Win_Title}"    Select Window    title=${window2}
    ...    ELSE    Select Window    title=${window1}
    Sleep    ${sleep_Time}
    ####---> Before signing in to Dropbox, make sure user is not already in Dropbox Chooser window if use already signed in
    ##Run Keyword If    "${window1}"!="Dropbox Chooser" and "${window2}"!="Dropbox Chooser"    Sign In to Dropbox
    ${DropBox_SignIn_status}=    Wait until element visible LOB    xpath=//input[@name='login_email']
    Run Keyword If    ${DropBox_SignIn_status}!= 'False'    Sign In to Dropbox
    ####---> Validate Search field is displayed.    If displayed, select resume from drop box, else return to main window
    ${Dropbox_Signin_status}=    Wait until element visible LOB    xpath=//input[@type='text' and @placeholder='Search']
    Run Keyword If    ${Dropbox_Signin_status}!= 'True'    ObjectFail    DropBox Chooser    ${Locale} ${FName} ${LName}
    ...    ELSE    ObjectPass    ${Locale} ${FName} ${LName} - DropBox Chooser
    Run Keyword If    ${Dropbox_Signin_status}!= 'False'    Select Resume from DropBox    ${ResumeDropbox}    ${Fname}    ${Lname}    ${SubmitCV_Win_Title}
    ...    ELSE    Select Window    Title=${SubmitCV_Win_Title}

Sign In to Dropbox
    Log    Keyword Function: *** Sign In to Dropbox ***
    #Select Window    Title=Sign into Dropbox
    Sleep    ${sleep_Time}
    Input Text    //input[@type='email' and @name='login_email']    email4izestqs@gmail.com
    Input Text    //input[@type='password' and @name='login_password']    password01
    ####--->    Uncheck Remember Me checkbox, click Submit
    Click Element    //input[@name='remember_me' and @type='checkbox']
    Sleep    ${sleep_Time}
    Click Element    //button[@class='login-button button-primary' and @type='submit']

Select Resume from DropBox
    [Arguments]    ${ResumeDropbox}    ${Fname}    ${Lname}    ${SubmitCV_Win_Title}
    Log    Keyword Function: *** Select Resume from DropBox ***
    Sleep    ${sleep_Time}
    ${window_titles}=    Get Window Titles
    ${window1}=    set variable    ${window_titles[0]}    #Sign Into DropBox or Resume Upload?
    ${window2}=    set variable    ${window_titles[1]}    #Dropbox Chooser
    Sleep    ${sleep_Time}
    #### ----> Input resume name and select Search
    #Select Window    Title=Dropbox Chooser
    Run Keyword If    "${window2}" != "${SubmitCV_Win_Title}"    Select Window    title=${window2}
    ...    ELSE    Select Window    title=${window1}
    Maximize Browser Window
    Sleep    ${sleep_Time}
    Input Text    //input[@type='text' and @placeholder='Search']    ${ResumeDropbox}
    Sleep    ${sleep_Time_15s}
    #### ----> Check if file names are returned
    ${testStatus}=    Run Keyword and Return Status    Element Should Be Visible    //ul[@id='search-file-list']/li/div/div/div[1]/span[1]    #List of files returned
    #${testStatus}=    Run Keyword and Return Status    Element Should Be Visible    ${ResumeDropbox}
    #### ----> If file names returned, choose resume file, else write to fail report
    Run Keyword If    '${teststatus}'=='True'    Click Element    //ul[@id='search-file-list']/li/div/div/div[1]/span[1]
    ...    ELSE    ObjectFail    Select Resume from Dropbox    ${FName} ${LName} ${SubmitCV_Win_Title}
    #### ----> If file names not returned, choose Cancel button to return to CV Submit page
    Run Keyword If    '${teststatus}'!='True'    Click Element    //button[@class='button-tertiary cancel-btn']
    Sleep    ${sleep_Time}
    #### ----> If file name was chosen, click Submit button
    Run Keyword If    '${teststatus}'=='True'    Submit Resume from Dropbox    ${Fname}    ${Lname}
    #### ----> Return to Submit CV page, accept Terms
    Sleep    ${sleep_Time_10s}
    Select Window    Title=${SubmitCV_Win_Title}

Submit Resume from Dropbox
    [Arguments]    ${Fname}    ${Lname}
    Log    Keyword Function: *** Submit Resume from DropBox ***
    #### ---->    Select Choose button
    Click Element    //button[contains(text(),'Choose') and @id='select-btn']

Use CV from LinkedIn
    [Arguments]    ${Fname}    ${Lname}    ${Email}    ${Phone}    ${ResumeLinkedIn}    ${Locale}
    ...    ${SubmitCV_Win_Title}
    Log    Keyword Function: *** Use CV from LinkedIn ***
    ####---> Select 'Use CV from LinkedIn'
    Click Element    //a[@id='linkedin-link']
    ##Click Element    xpath=${LO_USE_LINKEDIN}
    Sleep    ${sleep_Time}
    ${window_titles}=    Get Window Titles
    ${window1}=    set variable    ${window_titles[0]}    #Sign Into LinkedIn
    ${window2}=    set variable    ${window_titles[1]}    #Resume Upload
    Sleep    ${sleep_Time}
    ####---> Select 'Sign into LinkedIn' window by checking Windows2 is not the Resume Upload window
    Run Keyword If    "${window2}" != "${SubmitCV_Win_Title}"    Select Window    title=${window2}
    ...    ELSE    Select Window    title=${window1}
    Sleep    ${sleep_Time}
    ####---> Before signing in to LinkedIn, make sure user is not already in Dropbox Chooser window if use already signed in
    ##Run Keyword If    "${window1}"!="Dropbox Chooser" and "${window2}"!="Dropbox Chooser"    Sign In to Dropbox
    ${LinkedIn_SignIn_status}=    Wait until element visible LOB    xpath=//input[@id='session_key-oauthAuthorizeForm']
    Run Keyword If    ${LinkedIn_SignIn_status}!= 'False'    Sign In to LinkedIn    ####---> Validate Search field is displayed.    If displayed, select resume from drop box, else return to main window    ##${LinkedIn_Signin_status}=    Wait until element visible LOB
    ...    # xpath=//input[@type='text' and @placeholder='Search']    ##Run Keyword If    ${LinkedIn_Signin_status}!= 'True'    ObjectFail    DropBox Chooser    ${Locale} ${FName} ${LName}
    ...    # ELSE    ObjectPass    ##...    ${Locale} ${FName} ${LName} - DropBox Chooser    ##Run Keyword If    ${LinkedIn_Signin_status}!= 'False'
    ...    # Select Resume from DropBox    ${ResumeDropbox}    ${Fname}    ${Lname}    ${SubmitCV_Win_Title}    ##...
    ...    # ELSE    Select Window    Title=${SubmitCV_Win_Title}

Sign In to LinkedIn
    Log    Keyword Function: *** Sign In to LinkedIn ***
    #Select Window    Title=Sign into LinkedIn
    Sleep    ${sleep_Time}
    Input Text    //input[@type='email' and @name='login_email']    bentest4auto@gmail.com
    Input Text    //input[@type='password' and @name='login_password']    Mypw4lin_01
    ####--->    Uncheck Remember Me checkbox, click Submit
    Click Element    //input[@name='remember_me' and @type='checkbox']
    Sleep    ${sleep_Time}
    Click Element    //button[@class='login-button button-primary' and @type='submit']

Submit Resume
    [Arguments]    ${FName}    ${LName}    ${Locale}
    Log    Keyword Function: *** Submit Resume ***
    Click Button    xpath=//input[@id='${LO_SUBMIT_CV_BUTTON}']
    ${Confirm_status}=    Wait until element visible LOB    ${Submit_Confirm_Message}
    ${Error_status}=    Wait until element visible LOB    ${Submit_Error_Message}
    Sleep    ${sleep_Time}
    [Return]    ${Confirm_status}    ${Error_status}

Confirm Resume Submit
    [Arguments]    ${FName}    ${LName}    ${Locale}    ${Confirm_status}    ${Error_status}
    Run Keyword If    ${Confirm_status}!= 'True' or ${Error_status}!='False'    ObjectFail    Resume Submit Confirmation    ${Locale} ${FName} ${LName}
    ...    ELSE    ObjectPass    ${Locale} ${FName} ${LName} - Resume Submit Confirmation

Submit CV
    [Arguments]    ${FName}    ${LName}    ${Locale}
    Log    Keyword Function: *** Submit CV ***
    Sleep    ${sleep_Time}
    Click Element    ${Job_seekers_button}
    Sleep    ${sleep_Time_10s}
    #####---> Click Submit CV under Job Seekers menu
    Log    Browser ====> ${Browser}
    Run Keyword If    "${Browser.upper()}"=="GC"    Focus and Sim Click    xpath=//a[@href='/${LO_JOB_SEEKERS}'and @class='dropdown-toggle']
    ...    ELSE    Click On Element    xpath=//a[@href='/${LO_JOB_SEEKERS}'and @class='dropdown-toggle']
    Sleep    ${sleep_Time}
    ${Upload_CV_status}=    Wait until element visible LOB    xpath=${LO_UPLOAD_CV}    #Wait until Upload your CV is visible
    Run Keyword If    ${Upload_CV_status}!= 'True'    PageFail    ${Locale} ${FName} ${LName} - Upload Your CV
    ...    ELSE    PagePass    ${Locale}:${FName} ${LName} - Upload Your CV
    Sleep    ${sleep_Time}

Submit CV QS1
    [Arguments]    ${Fname}    ${Lname}    ${Locale}    ${Browser}
    Log    Keyword Function: *** Submit CV QS1 ***
    ####---> For QA, Get direct URL to 'Upload your CV' page since Submit CV button may be pointing to Prod environment
    #${Resume_Upload_URL}=    Get Resume Upload URL Australia    ${ENV}
    Run Keyword If    "${Security.upper()}" == "YES"    Security_Authorization    ${Browser}    #Run Keyword If    "${Browser.upper()}"=="IE"    IE Authenticate
    Open Browser    ${LO_QS1_DIRECT_URL}    ${Browser}    ff_profile_dir=${FF_PROFILE}
    ${Upload_CV_status}=    Wait until element visible LOB    xpath=${LO_UPLOAD_CV}    #Wait until Upload your CV is visible
    sleep    ${sleep_Time}
    Maximize Browser Window
    #####--->    Verify 'Upload Your CV' page is returned
    Run Keyword If    ${Upload_CV_status}!= 'True'    PageFail    ${Locale} ${FName} ${LName} - Upload Your CV
    ...    ELSE    PagePass    ${Locale}:${FName} ${LName} - Upload Your CV
    Sleep    ${sleep_Time}

Upload Your CV Details
    [Arguments]    ${FName}    ${LName}    ${Email}    ${Phone}    ${Locale}    ${ResumeType}
    Log    Keyword Function: *** Upload Your CV Details ***
    Log    Locale is: ${Locale}
    Wait until element visible LOB    ${LO_FIRST_NAME}
    ${Comments_status}=    Wait until element visible LOB    xpath=//textarea[@id='${LO_COMMENTS}']
    ${SubmitCV_Win_Title}=    Get Title
    Sleep    ${sleep_Time}
    Input Text    xpath=//input[@id='${LO_FIRST_NAME}']    ${Fname} ${Locale} RU ${ResumeType}
    Input Text    xpath=//input[@id='${LO_LAST_NAME}']    ${Lname}
    Input Text    xpath=//input[@id='${LO_EMAIL_ADDR}']    ${Email}
    Run Keyword If    '${Locale}'=='UK'    Input text    xpath=//input[@id='${LO_EMAIL_ADDR}']    UKCandidateConfirmation@mailinator.com
    Input Text    xpath=//input[@id='${LO_PHONE_NO}']    ${Phone}
    Run Keyword If    ${Comments_status}!='False'    Input Text    xpath=//textarea[@id='${LO_COMMENTS}']    ${Comments} ${Locale} JA ${ResumeType}
    Sleep    ${sleep_Time}
    #####---> Select Available From
    Click Element    xpath=//select[@id='${LO_AVAILABLE_FROM}']
    Sleep    ${sleep_Time}
    Run Keyword If    "${Browser.upper()}"=="FF"    Double Click Element    xpath=//select[@id='${LO_AVAILABLE_FROM}']/option[4]
    ...    ELSE    Click Element    xpath=//select[@id='${LO_AVAILABLE_FROM}']/option[4]
    #####---> Select Specialisation
    ${Specialization_status}=    Wait until element visible LOB    ${LO_SPECIALIZATION}
    Sleep    ${sleep_Time}
    Run Keyword If    ${Specialization_status}!='False'    Select Specialization
    Sleep    ${sleep_Time}
    #####---> Select Job Type
    ${JobType_status}=    Wait until element visible LOB    xpath=//select[@id='${LO_JOB_TYPE}']
    Sleep    ${sleep_Time}
    Run Keyword If    ${JobType_status}!='False'    Select Job Type
    Sleep    ${sleep_Time}
    #####---> Select Office
    ${Office_status}=    Wait until element visible LOB    xpath=//select[@id='${LO_UPLOAD_OFFICE}']
    Run Keyword If    ${Office_status}!='False'    Select Office
    Sleep    ${sleep_Time}
    [Return]    ${SubmitCV_Win_Title}

Select Specialization
    Log    Keyword Function: *** Select Specialization ***
    Click Element    xpath=//select[@id='${LO_SPECIALIZATION}']
    Sleep    ${sleep_Time}
    Run Keyword If    "${Browser.upper()}"=="FF"    Double Click Element    xpath=//select[@id='${LO_SPECIALIZATION}']/option[2]
    ...    ELSE    Click Element    xpath=//select[@id='${LO_SPECIALIZATION}']/option[2]

Select Job Type
    Log    Keyword Function: *** Select Job Type ***
    Click Element    xpath=//select[@id='${LO_JOB_TYPE}']
    Sleep    ${sleep_Time}
    Run Keyword If    "${Browser.upper()}"=="FF"    Double Click Element    xpath=//select[@id='${LO_JOB_TYPE}']/option[2]
    ...    ELSE    Click Element    xpath=//select[@id='${LO_JOB_TYPE}']/option[2]

Select Office
    Log    Keyword Function: *** Select Office ***
    Click Element    xpath=//select[@id='${LO_UPLOAD_OFFICE}']
    Sleep    ${sleep_Time}
    Run Keyword If    "${Browser.upper()}"=="FF"    Double Click Element    xpath=//select[@id='${LO_UPLOAD_OFFICE}']/option[2]
    ...    ELSE    Click Element    xpath=//select[@id='${LO_UPLOAD_OFFICE}']/option[2]

Submit Resume CV Upload
    [Arguments]    ${FName}    ${LName}    ${Locale}    ${ResumeName}
    Log    Keyword Function: *** Submit Resume CV Upload ***
    Click Button    xpath=//input[@id='${LO_SUBMIT_CV_BUTTON}']

Confirm Resume Upload Status
    [Arguments]    ${FName}    ${LName}    ${Locale}    ${ResumeName}
    Log    Keyword Function: *** Confirm Resume Upload Status ***
    #####---> Check for either Confirm Status
    ${Confirm_status1}=    Wait until element visible LOB    xpath=//html/body/div[1]/div[2]/div/div[1]
    ${Confirm_status2}=    Run Keyword If    ${Confirm_status1}!='True'    Wait until element visible LOB    xpath=//html/body/div[2]/div[2]/div/div[1]
    ${Confirm_status}=    Set Variable If    ${Confirm_status1}!='True'    ${Confirm_status2}    ${Confirm_status1}
    ##${Confirm_status}=    Wait until element visible LOB    xpath=${LO_CV_UPLD_CONF}
    ${Error_status}=    Wait until element visible LOB    ${Submit_Error_Message}
    Run Keyword If    ${Confirm_status}!= 'True' or ${Error_status}!='False'    ObjectFail    Resume Submit Confirmation    ${Locale} ${FName} ${LName}
    ...    ELSE    ObjectPass    ${Locale} ${FName} ${LName} - Resume Submit Confirmation

Job Apply from Metro Page
    [Arguments]    ${Locale}    ${Fname}    ${Lname}    ${Email}    ${Phone}    ${ResumeLink}
    Log    Keyword Function: *** Job Apply from Metro Page ***
    Click Element    xpath=//li[5]/a[@href='${LO_CONTACT_US}']
    ${ContactUs_status}=    Wait until element visible LOB    xpath=//div/h3/a[@href='${LO_METRO_AREA}']
    Sleep    ${sleep_Time}
    Run Keyword If    ${ContactUs_status}!='False'    Click Element    xpath=//div/h3/a[@href='${LO_METRO_AREA}']
    ...    ELSE    PageFail2    ${Locale}:${FName} ${LName} - Contact Us
    ${FindJob_status}=    Wait until element visible LOB    ${Find_jobs_IZ}
    Run Keyword If    ${FindJob_status}!='False'    Find Job from Metro Page    ${Locale}    ${Fname}    ${Lname}    ${Email}
    ...    ${Phone}    ${ResumeLink}
    ...    ELSE    PageFail2    ${Locale}:${FName} ${LName} - Metro Find Jobs

Find Job from Metro Page
    [Arguments]    ${Locale}    ${Fname}    ${Lname}    ${Email}    ${Phone}    ${ResumeLink}
    Click Element    ${Find_jobs_IZ}
    Sleep    ${sleep_Time_5s}
    ${Metro_Job_count_String}=    Set Variable    0
    ${Metro_Job_count_String}=    Get Matching xpath count    //table[@class="job-search-results"]/thead/tr/td[@class="JobTitle"]
    Log    Job Count is ===> ${Metro_Job_count_String}
    Select Metro Job Title    ${Metro_Job_count_String}    ${Fname}    ${Lname}    ${Locale}
    Sleep    ${sleep_Time}
    #### ----> Select Apply Now button and fill out required fields
    ${SubmitCV_Win_Title}=    Select Apply Now    ${Locale}    ${Fname}    ${LName}    ${Email}    ${Phone}
    ...    ${ResumeLink}    MetroLink
    Log    SubmitCV_Win_Title --- > ${SubmitCV_Win_Title}
    ####---> Select 'Send link to your online CV' and enter URL
    Send Online CV Link    ${ResumeLink}    ${Locale}
    #### ----> Check Terms Checkbox
    Check Terms Checkbox    ${Locale}
    #### ----> If Germany, check Personal Data checkbox
    Run Keyword If    '${Locale}'=='DE'    Check Personal Data Checkbox
    #### ----> Click Submit button and verify confirmation text page appears
    ##Run Keyword If    '${SubmitCV.upper()}'=='YES'    Submit Resume    ${FName}    ${LName}    ${Locale}
    Submit Resume    ${FName}    ${LName}    ${Locale}
    ##Sleep    ${sleep_Time}
    #### ----> Go Back to previous page and get window title
    ##Go Back
    ##${current_win_title}=    Get Title
    ##Log    current_win_title= ${current_win_title}
    ##Run Keyword If    "${current_win_title}"=="${SubmitCV_Win_Title}"    Go Back    # Go Back a second time if still on Resume Upload window

Select Metro Job Title
    [Arguments]    ${Metro_Job_count_String}    ${Fname}    ${Lname}    ${Locale}
    Log    Keyword Function: *** Select Metro Job Title ***
    Sleep    ${sleep_Time}
    ##${random_number}=    Evaluate    random.sample(range(1, ${Metro_Job_count_String}),1)    random
    ${Metro_Job_Title}=    Get Text    xpath=//table[@class="job-search-results"]/thead/tr[1]/td[1]/span[1]/a
    Log    Job Title to apply is --- > ${Metro_Job_Title}
    Wait Until Keyword Succeeds    1min    5sec    Click Element    xpath=//table[@class="job-search-results"]/thead/tr[1]/td[1]/span[1]/a
    #####--->    Wait until Job Title Detail page appears with Apply Now button
    ${Metro_JobTitle_Det_status}=    Wait until element visible LOB    ${Button_Apply_Now}
    Run Keyword If    ${Metro_JobTitle_Det_status}!='True'    PageFail    ${Locale}:${FName} ${LName} - Metro Job Title Detail
    ...    ELSE    PagePass    ${Locale}:${FName} ${LName} - Metro Job Title Detail
    Sleep    ${sleep_Time}
    ##Verify Job Title    ${Fname}    ${Lname}    ${Locale}    ${Metro_Job_Title}

Return to Home Page
    [Arguments]    ${FName}    ${LName}    ${Locale}    ${SubmitCV_Win_Title}
    Log    Keyword Function: *** Return to Home Page ***
    Sleep    ${sleep_Time}
    Go Back
    ${current_win_title}=    Get Title
    Log    current_win_title= ${current_win_title}
    Run Keyword If    "${current_win_title}"=="${SubmitCV_Win_Title}"    Go Back    # Go Back a second time if still on Resume Upload window
    Sleep    ${sleep_Time}
    Click Element    ${RH_Home_Logo}
    Sleep    ${sleep_Time}
    #####---> If country has English and another language, select English when returning to home page since it defautls to native language
    Run Keyword If    '${Locale}'=='CH-EN' or '${Locale}'=='JP-EN' or '${Locale}'=='BE-EN' or '${Locale}'=='NL-EN' or '${Locale}'=='CN-EN'    Click Element    xpath=//a[@href='/en']
    #####---> If locale is 'BE-NL', select NL language when returning to home page since it defautls to English
    Run Keyword If    '${Locale}'=='BE-NL'    Click Element    xpath=//a[@href='/nl']
    #####---> If locale is 'BE-FR', select FR language when returning to home page since it defautls to English
    Run Keyword If    '${Locale}'=='BE-FR'    Click Element    xpath=//a[@href='/fr']
    Sleep    ${sleep_Time}
    ${Jobsrch_status}=    Wait until element visible LOB    ${SearchJobs_button_IZ}
    Run Keyword If    ${Jobsrch_status}!= 'True'    PageFail    ${Locale}:${FName} ${LName} - Job Search Home Page
    ...    ELSE    PagePass    ${Locale}:${FName} ${LName} - Job Search Home Page
    Sleep    ${sleep_Time}

PageFail2
    [Arguments]    ${Text_To_Wait}
    Log    Keyword Function: *** PageFail2 ***
    log    -- ${Text_To_Wait} was not loaded --
    Append to File    ${fileFail}    --- ${Text_To_Wait} page was not loaded ---\r\n
    #Capture Page Screenshot    ${CURDIR}\\Report\\ErrorPic_${Text_To_Wait}
    ${url} =    Get location
    Append to File    ${fileFail}    --- ${url} ---\r\n
    #Teardown_test
    #Continue For Loop

Verify Email to Friend
    [Arguments]    ${Browser}
    Log    Keyword Function: *** Verify Email to Friend ***
    : FOR    ${INDEX}    IN RANGE    1    350
    \    Log    IndexNumber=====${INDEX}
    \    Log    Open Browser
    \    Open Browser    https://outlook.office365.com    ${Browser}    ff_profile_dir=${FF_PROFILE}
    \    #### ---> Login to email account and check reciept
    \    ##Open Excel    ${CURDIR}\\Datafiles\\Login_User_PW.xls
    \    ##${Data}=    Read Cell Data By Name    Login_User_PW    A2
    \    ##${Login_User}=    Set Variable    ${Data}
    \    ##${Data}=    Read Cell Data By Name    Login_User_PW    B2
    \    ##${Login_PW}=    Set Variable    ${Data}
    \    ##${password}=    Get Decrypted Password    ${Login_PW}
    \    ##Set Global Variable    ${LO_PRD_URL}    ${Data}
    \    ##Open Mailbox    Outlook.office365.com    user={Login_User}    password={Login_PW}
    \    Log    *** Open Mailbox and login ***
    \    Open Mailbox    outlook.office365.com    user=benray01@roberthalf.com    password=XXXXXXX    ## Enter your password here
    \    #### ---> Check the mailbox every 10 seconds (by default)
    \    Log    Check for Email from Friend
    \    ${Latest_Email}=    Wait for Mail    fromEmail=IZTest@abc.net    timeout=1800    status=UNSEEN    ##toEmail=ben.rayos@roberthalf.com
    \    ${Latest_Email_No}=    Convert To Integer    ${Latest_Email}
    \    ${parts}=    Walk Multipart Email    ${Latest_Email}
    \    ${to}=    Get Multipart Field    To
    \    ${from}=    Get Multipart Field    From
    \    ${subject}=    Get Multipart Field    Subject
    \    ${Email_Body}=    Get Email Body    ${Latest_Email_No}
    \    @{Email_Link}=    Get Links from EMail    ${Latest_Email_No}
    \    ${links_count}=    Get Length    ${Email_Link}
    \    ${Link}=    Set Variable    @{Email_Link}[0]
    \    ##Sleep    ${sleep_Time}
    \    ##Should Contain    ${Email_Body}    ${Job_Title}
    \    ##Sleep    ${sleep_Time}
    \    Log    Go to Job Description link
    \    Run Keyword If    "${Security.upper()}" == "YES"    Security_Authorization    ${Browser}
    \    Go To    ${Link}
    \    ${JobDesc_status}=    Wait until element visible LOB    xpath=//div[@class='job-description']
    \    Run Keyword If    ${JobDesc_status}!= 'True'    ObjectFail    Email Friend Job Description    ${Latest_Email_No} ${Link}
    \    ...    ELSE    ObjectPass    ${Latest_Email_No} ${Link} - Email Friend Job Description
    \    Sleep    ${sleep_Time_5s}
    \    Log    Mark email as Read (automatic) and Close Mailbox
    \    Close Mailbox
    \    Close all browsers
    \    Sleep    ${sleep_Time_20s}

Verify User Receives Email Containing Copy of Submitted Feedback
    Log    Keyword Function: *** Verify user that submitted feed back received copy ***
    ### ---> Login to Google e-mail account to getchange password e-mail
    Login Google    ${Browser}
    ### ---> Navigate to lates e-mail and select change password link in the e-mail body
    sleep    ${sleep_Time}
    Click Element    xpath=(//span[contains(text(),'Thank you again')])[1]
    sleep    ${sleep_Time}
    #Click Element    xpath=//a[contains(text(),'https')]
    #sleep    ${sleep_Time}
    #${window_titles}=    Get WIndow Titles
    #${titles1}=    Set Variable    ${window_titles[1]}
    #Select Window    title=${titles1}
    #Maximize Browser Window
    ${testStatus}=    Wait Until Text Is Detectable    This is brief description for test customer feedback...
    Run Keyword If    ${testStatus}== 'FAIL'    PageFail    Feedback E-mail
    ...    ELSE    PagePass    Feedback E-mail

Login Google
    [Arguments]    ${Browser}
    Open Browser    https://www.google.com    ${Browser}    ff_profile_dir=${FF_PROFILE}
    ${testStatus}=    Wait until element visible    //a[contains(text(),'Sign in')]
    Click Element    //a[contains(text(),'Sign in')]
    ${testStatus}=    Wait until element visible    //*[@id='Email']
    Input Text    //*[@id='Email']    ssoaaemail01@gmail.com
    sleep    2
    Click Element    //*[@id='next']
    ${testStatus}=    Wait until element visible    //*[@id='Passwd']
    Input Text    //*[@id='Passwd']    rhi12345
    sleep    2
    Click Element    //*[@id='signIn']
    sleep    2
    ${testStatus}=    Wait until element visible    //a[contains(text(),'Gmail')]
    Click Element    //a[contains(text(),'Gmail')]
    sleep    2

TCG Digital Portfolio
    ##################---> Below keywords are for TCG | DIGITAL PORTFOLIO PAGE <----#################################

Allocate TCG Test Data TXT
    [Arguments]    ${TCG_DataFile}
    Log    Keyword Function: *** Allocate TCG Test Data TXT ***
    ${FileContents}    Get File    ${CURDIR}\\Datafiles\\${TCG_DataFile}    #Specify dataFile location
    ${Line}=    Get Line    ${FileContents}    0    # Get line from the dataFile
    @{DataWords}=    Split String    ${Line}    ;
    ${TCG_UserName}=    Set Variable    @{DataWords}[0]
    ${TCG_Password}=    Set Variable    @{DataWords}[1]
    [Return]    ${TCG_UserName}    ${TCG_Password}

Create Project Name
    Log    Keyword Function: *** Create Project Name ***
    ${Year}=    Get Time    year
    ${mon}=    Get Time    month
    ${dd}=    Get Time    day
    ${hh}=    Get Time    hour
    ${mm}=    Get Time    min
    ${Sec}=    Get Time    Sec
    #####--> Create Project Name
    ${ProjectName}=    Catenate    SEPARATOR=    test    ${ENV}    ${LOB}    ${Year}
    ...    ${mon}    ${dd}    ${hh}    ${mm}    ${Sec}
    [Return]    ${ProjectName}

Login to My Dashboard
    [Arguments]    ${TCG_UserName}    ${TCG_Password}
    Log    Keyword Function: *** Login to My Dashboard ***
    sleep    ${sleep_Time}
    Click Element    ${My_Dashboard}
    ${UserName_Status}=    Wait until element visible LOB    ${LOB_UserName_field}
    Run Keyword If    ${UserName_Status}!= 'True'    PageFail    TCG Dashboard
    ...    ELSE    PagePass    TCG Dashboard
    #####--->    Login to TCG
    LOB_Login    ${TCG_Username}    ${TCG_Password}
    #####--->    Verify successful login to user’s dashboard page
    ${MyAccount_Status}=    Wait Until Text Is Detectable    My Account Info
    Run Keyword If    ${MyAccount_Status}!= 'PASS'    PageFail    TCG Login
    ...    ELSE    PagePass    TCG Login
    sleep    ${sleep_Time_10s}

Select Manage Portfolio
    Log    Keyword Function: *** Select Manage Portfolio ***
    #####---> Select iFrames first
    Select Frame    ${TCG_Canvas_Outer_Frame}
    Select Frame    ${TCG_Canvas_Inner_Frame}
    sleep    ${sleep_Time_10s}
    #####---> Select Manage Portfolio button when visible
    ${ManagePort_Status}=    Wait until element visible LOB    //form[@id='manage']/a
    Run Keyword If    ${ManagePort_Status}!= 'True'    PageFail    TCG Manage Portfolio
    ...    ELSE    Click Element    ${TCG_Manage_Portfolio}
    Unselect Frame
    Unselect Frame
    sleep    ${sleep_Time_10s}
    #####---> A new window or tab should open for Digital Portfolio.    Select new window.
    ${window_titles}=    Get Window Titles
    ${window1}=    Set Variable    ${window_titles[0]}    # Either "My Dashboard | The Creative Group" or "Robert Half - Creative Group"
    ${window2}=    Set Variable If    "${window1}"!="Robert Half - Creative Group"    ${window_titles[1]}    ${window_titles[0]}
    Select Window    ${window2}
    sleep    ${sleep_Time_10s}

Create Portfolio
    [Arguments]    ${ProjectName}
    Log    Keyword Function: *** Create Portfolio ***
    #####---> Select Create button to create new Project
    ${CreateBtn_Status}=    Wait until element visible LOB    ${TCG_Create_Btn}
    Run Keyword If    ${CreateBtn_Status}!= 'True'    PageFail    TCG Create Portfolio ${ProjectName}
    ...    ELSE    Click Element    ${TCG_CreateBtn}
    sleep    ${sleep_Time_10s}
    Maximize Browser Window
    sleep    ${sleep_Time}
    ${CreateProject_Status}=    Wait until element visible LOB    ${TCG_ProjectName}
    Run Keyword If    ${CreateProject_Status}!= 'True'    PageFail    DigitalPort Create Project
    ...    ELSE    PagePass    DigitalPort Create Project
    #####---> Enter Project Name
    inputText    ${TCG_ProjectName}    ${ProjectName}
    sleep    ${sleep_Time_10s}
    #####---> Select Cover file and continue
    ${SelectFile_Status}=    Wait until element visible LOB    xpath=//input[contains(@type,'file') and contains(@style,'opacity')]
    Choose File    ${TCG_Select_Files}    ${CURDIR}\\Datafiles\\TCGKoala.jpg
    ##Click Element    ${TCG_Select_File_Btn}
    ##sleep    ${sleep_Time}
    ##Click Element    //div[contains(text(),'Select Files')]
    ##sleep    ${sleep_Time}
    ##${window_titles}=    Get Window Titles
    ##${window1}=    set variable    ${window_titles[0]}    # Either "Robert Half - Creative Group"
    ##${window2}=    set variable    ${window_titles[1]}    # or "File Upload"
    ##Choose File    xpath=//input[contains(@type,'file') and contains(@style,'opacity')]    ${CURDIR}\\Datafiles\\TCGKoala.jpg
    sleep    ${sleep_Time_5s}
    ${SelectFile_Status}=    Wait until element visible LOB    xpath=//div[contains(@id,'uploadifive-file_uploadifive')]
    sleep    ${sleep_Time_20s}
    ${UploadFile_Status}=    Wait until element does not exist    xpath=//div[contains(@id,'uploadifive-file_uploadifive-file-0')]
    Run Keyword If    ${UploadFile_Status}=='False'    PageFail    Cover File Upload
    ...    ELSE    Click Element    ${TCG_Save_and_Continue}
    sleep    ${sleep_Time}
    #####---> Select Add Image, Video, Audio or PDF file
    ${Images_Status}=    Wait until element visible LOB    ${TCG_Images}
    Run Keyword If    ${Images_Status}!= 'True'    PageFail2    DigitalPort Add/Edit Tab
    ...    ELSE    PagePass    DigitalPort Add/Edit Tab
    Choose File    ${TCG_Select_Files}    ${CURDIR}\\Datafiles\\TCGLightHouse.jpg
    ####--->    Click Start Upload
    sleep    ${sleep_Time_10s}
    Click Element    ${TCG_Start_Upload}
    sleep    ${sleep_Time_20s}
    ####---> Wait until file upload is Completeted and Close option on progress bar is visible
    ${Close_Status}=    Wait until element visible LOB    xpath=//a[@class='close']
    Run Keyword If    ${Close_Status}!= 'False'    Click Element    xpath=//a[@class='close']
    sleep    ${sleep_Time}
    ####--->    Check if Progress bar displays "Completed" and continue
    ##${Completed_text}=    Get Text    xpath=//div[@id='uploadifive-file_uploadifive-file-0']/div[1]/span[2]
    Click Element    ${TCG_Save_and_Continue}
    ####--->    Wait for Arrange Tab do display with Thumbnail image and continue
    ${ThumbnailImage_Status}=    Wait until element visible LOB    ${TCG_Thumbnail_Image}
    Run Keyword If    ${ThumbnailImage_Status}!= 'True'    PageFail    DigitalPort Arrange Tab
    ...    ELSE    PagePass    DigitalPort Arrange Tab
    sleep    ${sleep_Time}
    Click Element    ${TCG_Save_and_Continue}
    ####--->    Wait for Information Tab to display
    ${ProjectInfo_Status}=    Wait until element visible LOB    ${TCG_ProjectInfo_Form}
    Run Keyword If    ${ProjectInfo_Status}!= 'True'    PageFail    DigitalPort ProjectInfo Tab
    ...    ELSE    PagePass    DigitalPort ProjectInfo Tab
    sleep    ${sleep_Time_5s}

Save and Check Confirmation
    Log    Keyword Function: *** Save and Check Confirmation ***
    ####--->    Save and check for Confirmation message
    Click Element    ${TCG_Save}
    sleep    ${sleep_Time_10s}
    ${SaveConfirm_Status}=    Wait Until Text Is Detectable    SUCCESS
    Run Keyword If    ${SaveConfirm_Status}== 'FAIL'    PageFail    Digital Portfolio Save
    ...    ELSE    PagePass    Digital Portfolio Save
    ####---> Preview Portfolio, Return to Home page and Delete older Project due to # of Project limitations
    Click Element    ${TCG_Preview}
    sleep    ${sleep_Time_10s}
    Click Element    ${TCG_Return_to_DP_Home}
    sleep    ${sleep_Time_5s}
    Click Element    ${TCG_Delete_Project}
    sleep    ${sleep_Time_5s}
    ${Confirm_Status}=    Confirm Action
    sleep    ${sleep_Time_5s}

Sign Out of Dashboard
    Log    Keyword Function: *** Signout of My Dashboard ***
    #####---> Signout
    sleep    ${sleep_Time}
    Click Element    ${TCG_Signout}
    sleep    ${sleep_Time}
    ${Signout_Status}=    Wait until element visible LOB    ${LOB_UserName_field}
    Run Keyword If    ${Signout_Status}!= 'True'    PageFail    TCG SignOut
    ...    ELSE    PagePass    TCG SignOut

Confirm Email to Friend Keywords
    ##################---> Below keywords are for Email Confirmations <----#################################

Login Mailinator
    [Arguments]    ${Browser}    ${EmailAddress}
    Log    Keyword Function: *** Login Mailinator ***
    Open Browser    https://www.mailinator.com/    ${Browser}    ff_profile_dir=${FF_PROFILE}
    ${Inbox_Status}=    Wait until element visible LOB    ${Mailinator_InputInbox}
    sleep    2
    Input Text    ${Mailinator_InputInbox}    ${EmailAddress}
    sleep    2
    Click Element    ${Mailinator_GoButton}
    ${InboxField_Status}=    Wait until element visible LOB    ${Mailinator_PublicInbox}
    sleep    2

Verify User Receives Email to Friend
    Log    Keyword Function: *** Verify User Receives Email to Friend ***
    ### ---> Login to Mailinator e-mail account to get Email A Friend e-mail
    Login Mailinator    ${Browser}
    ### ---> Navigate to lates e-mail and select change password link in the e-mail body
    sleep    ${sleep_Time}
    Click Element    xpath=(//span[contains(text(),'CV')])[1]
    sleep    ${sleep_Time}
    #Click Element    xpath=//a[contains(text(),'https')]
    #sleep    ${sleep_Time}
    #${window_titles}=    Get WIndow Titles
    #${titles1}=    Set Variable    ${window_titles[1]}
    #Select Window    title=${titles1}
    #Maximize Browser Window
    ##${testStatus}=    Wait Until element visible    xpath=//div[@class='job-description']
    ${testStatus}=    Wait Until element visible LOB    xpath=//a[contains(@data-saferedirecturl,'google') and contains(@data-saferedirecturl,'roberthalf')]
    Run Keyword If    ${testStatus}== 'False'    PageFail    Confirm Email to Friend
    ...    ELSE    PagePass    Confirm Email to Friend

Verify Candidate Confirmation Email
    [Arguments]    ${EmailAddress}
    Log    Keyword Function: *** Verify Candidate Email Confirmation ***
    ### ---> Login to Mailinator e-mail account to get Confirmation e-mail
    Login Mailinator    ${Browser}    ${EmailAddress}
    ### ---> Navigate to lates e-mail and select change password link in the e-mail body
    sleep    ${sleep_Time}
    ${Email_Status}=    Wait until element visible LOB    ${Mailinator_Email}
    Run Keyword If    ${Email_Status}== 'False'    PageFail    Confirm Email to Friend
    ...    ELSE    Verify Candidate Email Content

Verify Candidate Email Content
    Click Element    ${Mailinator_Email}
    sleep    ${sleep_Time}
    #Select Frame    ${Mailinator_EmailIFrame}
    ${Conf_Status}=    Wait Until element visible LOB    ${Mailinator_EmailContent}
    Run Keyword If    ${Conf_Status}== 'False'    PageFail    Confirm Email
    ...    ELSE    PagePass    Confirm Email
    Unselect Frame
